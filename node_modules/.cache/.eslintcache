[{"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\index.js":"1","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\store.js":"2","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\App.js":"3","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\root-reducer.js":"4","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\envSettings.js":"5","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\costManagement.js":"6","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\gallery.js":"7","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\calander.js":"8","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\enviroment.js":"9","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\home.js":"10","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\theme.js":"11","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\Header.js":"12","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\unsigned.js":"13","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\costOfElec.js":"14","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\galleryChipGroup.js":"15","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.selector.js":"16","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.reducer.jsx":"17","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\calanderEntry.js":"18","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.reducer.jsx":"19","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.selector.js":"20","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\weather.js":"21","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.actions.js":"22","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\weatherSummary.js":"23","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\signup.component.js":"24","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\calenderMonth.js":"25","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\signin.component.js":"26","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\newJournal.js":"27","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\currentJournals.js":"28","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.types.js":"29","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.types.js":"30","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.actions.js":"31"},{"size":391,"mtime":1634626894102,"results":"32","hashOfConfig":"33"},{"size":270,"mtime":1634626894106,"results":"34","hashOfConfig":"33"},{"size":2387,"mtime":1636436395879,"results":"35","hashOfConfig":"33"},{"size":240,"mtime":1634626894103,"results":"36","hashOfConfig":"33"},{"size":1299,"mtime":1634626894094,"results":"37","hashOfConfig":"33"},{"size":1273,"mtime":1634626894093,"results":"38","hashOfConfig":"33"},{"size":4057,"mtime":1634626894094,"results":"39","hashOfConfig":"33"},{"size":2324,"mtime":1636436395879,"results":"40","hashOfConfig":"33"},{"size":2374,"mtime":1636436395879,"results":"41","hashOfConfig":"33"},{"size":3143,"mtime":1636436395879,"results":"42","hashOfConfig":"33"},{"size":550,"mtime":1636436395879,"results":"43","hashOfConfig":"33"},{"size":9617,"mtime":1636436395879,"results":"44","hashOfConfig":"33"},{"size":860,"mtime":1634626894101,"results":"45","hashOfConfig":"33"},{"size":2728,"mtime":1634626894097,"results":"46","hashOfConfig":"33"},{"size":1679,"mtime":1634626894098,"results":"47","hashOfConfig":"33"},{"size":638,"mtime":1634626894107,"results":"48","hashOfConfig":"33"},{"size":919,"mtime":1634626894107,"results":"49","hashOfConfig":"33"},{"size":2429,"mtime":1634626894096,"results":"50","hashOfConfig":"33"},{"size":812,"mtime":1634626894105,"results":"51","hashOfConfig":"33"},{"size":717,"mtime":1634626894105,"results":"52","hashOfConfig":"33"},{"size":3304,"mtime":1636436395879,"results":"53","hashOfConfig":"33"},{"size":521,"mtime":1634626894106,"results":"54","hashOfConfig":"33"},{"size":9318,"mtime":1636436395879,"results":"55","hashOfConfig":"33"},{"size":5481,"mtime":1634626894100,"results":"56","hashOfConfig":"33"},{"size":3577,"mtime":1636436395879,"results":"57","hashOfConfig":"33"},{"size":5245,"mtime":1634626894099,"results":"58","hashOfConfig":"33"},{"size":13120,"mtime":1636436395879,"results":"59","hashOfConfig":"33"},{"size":5267,"mtime":1636436395879,"results":"60","hashOfConfig":"33"},{"size":206,"mtime":1634626894108,"results":"61","hashOfConfig":"33"},{"size":217,"mtime":1634626894105,"results":"62","hashOfConfig":"33"},{"size":552,"mtime":1634626894104,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qa6l67",{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\index.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\store.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\App.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\root-reducer.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\envSettings.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\costManagement.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\gallery.js",["133"],"import React from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport GalleryChipGroup from \"./ui/galleryChipGroup\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ImageList from \"@material-ui/core/ImageList\";\r\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\r\nimport Unsigned from \"./ui/unsigned\";\r\n\r\n//Redux imports\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectCurrentUser,\r\n  selectTokenState,\r\n} from \"../redux/user/user.selector\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6em\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  imageList: {\r\n    width: 340,\r\n    height: 450,\r\n  },\r\n  chipGroup: {\r\n    borderRadius: \"25px\",\r\n    border: \"3px solid\",\r\n    marginTop: \"0.5em\",\r\n    marginBottom: \"0.5em\",\r\n    borderColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst itemData = [\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1551963831-b3b1ca40c98e\",\r\n    title: \"Breakfast\",\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1551782450-a2132b4ba21d\",\r\n    title: \"Burger\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1522770179533-24471fcdba45\",\r\n    title: \"Camera\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1444418776041-9c7e33cc5a9c\",\r\n    title: \"Coffee\",\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1533827432537-70133748f5c8\",\r\n    title: \"Hats\",\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1558642452-9d2a7deb7f62\",\r\n    title: \"Honey\",\r\n    author: \"@arwinneil\",\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1516802273409-68526ee1bdd6\",\r\n    title: \"Basketball\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1518756131217-31eb79b20e8f\",\r\n    title: \"Fern\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1597645587822-e99fa5d45d25\",\r\n    title: \"Mushrooms\",\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1567306301408-9b74779a11af\",\r\n    title: \"Tomato basil\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1471357674240-e1a485acb3e1\",\r\n    title: \"Sea star\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1589118949245-7d38baf380d6\",\r\n    title: \"Bike\",\r\n    cols: 2,\r\n  },\r\n];\r\n\r\nexport default function Gallery(props) {\r\n  const classes = useStyles();\r\n  //Get Global State\r\n  const userLoggedIn = useSelector(selectCurrentUser);\r\n  const tokenState = useSelector(selectTokenState);\r\n\r\n  return (\r\n    <Grid container direction=\"column\" className={classes.mainPageStyle}>\r\n      {tokenState ? (\r\n        <Grid item container direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">Gallery</Typography>\r\n          </Grid>\r\n          <Grid item className={classes.chipGroup}>\r\n            <GalleryChipGroup />\r\n          </Grid>\r\n          <Grid item>\r\n            <ImageList\r\n              sx={{ width: \"100%\", height: 450 }}\r\n              cols={3}\r\n              rowHeight={164}\r\n            >\r\n              {itemData.map((item, index) => (\r\n                <ImageListItem key={index}>\r\n                  <img\r\n                    src={`${item.img}?w=164&h=164&fit=crop&auto=format`}\r\n                    srcSet={`${item.img}?w=164&h=164&fit=crop&auto=format&dpr=2 2x`}\r\n                    alt={item.title}\r\n                    loading=\"lazy\"\r\n                    style={{ width: \"168px\", height: \"164px\" }}\r\n                  />\r\n                  {/* <Skeleton variant=\"rect\" width={\"168px\"} height={\"164px\"} /> */}\r\n                </ImageListItem>\r\n              ))}\r\n            </ImageList>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\calander.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\enviroment.js",["134","135","136"],"import React, { useState } from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n//Component Import\r\nimport Unsigned from \"./ui/unsigned\";\r\nimport Weather from \"./ui/weather\";\r\nimport WeatherSummary from \"./ui/weatherSummary\";\r\n\r\n//Redux imports\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectCurrentUser,\r\n  selectTokenState,\r\n} from \"../redux/user/user.selector\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6.5em\",\r\n  },\r\n  mainPageSub: {\r\n    border: \"1px solid black\",\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#ebffdb\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"36.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  journalDescTitle: {\r\n    marginTop: \"1.5em\",\r\n  },\r\n  journalDesc: {\r\n    border: `2px solid ${theme.palette.common.blue}`,\r\n    borderRadius: 5,\r\n  },\r\n  journalButton: {\r\n    margin: \"1em\",\r\n  },\r\n  submitGrid: {\r\n    marginTop: \"1.5em\",\r\n  },\r\n}));\r\n\r\nexport default function Enviroment(props) {\r\n  const classes = useStyles();\r\n\r\n  //Setup Local State\r\n  // const [expanded, setExpanded] = useState(false);\r\n  // const [journalName, setJournalName] = useState(\"\");\r\n  // const [journalDesc, setJournalDesc] = useState(\"\");\r\n  // const [activeJournals, setActiveJournals] = useState([]);\r\n\r\n  //Get Global State\r\n  const userLoggedIn = useSelector(selectCurrentUser);\r\n  const tokenState = useSelector(selectTokenState);\r\n\r\n  const pageSource = \"ENV\";\r\n\r\n  return (\r\n    <Grid container direction=\"column\" className={classes.mainPageStyle}>\r\n      {tokenState ? (\r\n        <Grid item>\r\n          {/* <Weather /> */}\r\n          {/* <TodayWeather /> */}\r\n          <WeatherSummary pageSource={pageSource}/>\r\n          {/* <Weather />\r\n          <Weather />\r\n          <Weather />\r\n          <Weather /> */}\r\n        </Grid>\r\n      ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\home.js",["137","138"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n//Material UI Components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\n//Redux imports\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectTokenState } from \"../redux/user/user.selector\";\r\nimport { selectDispNewJournal } from \"../redux/siteNav/siteNav.selector\";\r\n\r\n//Component import\r\nimport Unsigned from \"./ui/unsigned\";\r\nimport NewJournal from \"./ui/newJournal\";\r\nimport CurrentJournals from \"./ui/currentJournals\";\r\nimport WeatherSummary from \"./ui/weatherSummary\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6em\",\r\n    width: \"100%\",\r\n    border: \"0px solid\",\r\n  },\r\n  mainPageSub: {\r\n    border: \"0px solid black\",\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#ebffdb\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"36.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  journalDescTitle: {\r\n    // marginTop: \"1.5em\",\r\n  },\r\n  journalDesc: {\r\n    border: `0px solid ${theme.palette.common.blue}`,\r\n    borderRadius: 5,\r\n  },\r\n  journalButton: {\r\n    margin: \"1em\",\r\n  },\r\n  submitGrid: {\r\n    marginTop: \"1.5em\",\r\n  },\r\n  curJournals: { marginTop: \"1em\", width: \"100%\" },\r\n  curJournalsSpace: {\r\n    width: \"100%\",\r\n  },\r\n  curJournalsSpace80: {\r\n    width: \"80%\",\r\n    marginLeft: \"4em\",\r\n  },\r\n  curJournalSubheader: {\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nexport default function Home(props) {\r\n  const classes = useStyles();\r\n  //Get Global State\r\n  const tokenState = useSelector(selectTokenState);\r\n\r\n  const pageSource = \"HME\";\r\n\r\n  const [fullJournal, setFullJournal] = useState({\r\n    jName: \"\",\r\n    jDesc: \"\",\r\n    roomType: \"\",\r\n    waterType: \"\",\r\n    vegLight: \"\",\r\n    flowLight: \"\",\r\n    growMedium: \"\",\r\n  });\r\n\r\n  //Get Global State\r\n  const dispNewJournal = useSelector(selectDispNewJournal);\r\n\r\n  //useEffect - Getting journals loaded on database\r\n  useEffect(() => {\r\n    // getJournals();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container direction=\"row\" className={classes.mainPageStyle}>\r\n      {tokenState ? (\r\n        <Grid item container style={{ border: \"0px solid\" }}>\r\n          <Grid item style={{ border: \"0px solid\", width: \"100%\" }}>\r\n            {dispNewJournal ? null : <CurrentJournals />}\r\n            {dispNewJournal ? <NewJournal /> : null}\r\n            {dispNewJournal ? null : (\r\n              <WeatherSummary\r\n                weatherRefresh={props.weatherRefresh}\r\n                setWeatherRefresh={props.setWeatherRefresh}\r\n                pageSource={pageSource}\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\theme.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\Header.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\unsigned.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\costOfElec.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\galleryChipGroup.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.selector.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.reducer.jsx",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\calanderEntry.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.reducer.jsx",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.selector.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\weather.js",["139","140"],"import React, { useState } from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CloudIcon from \"@material-ui/icons/Cloud\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  summMaxTemp: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"13pt\",\r\n  },\r\n  summMinTemp: {\r\n    fontSize: \"10pt\",\r\n  },\r\n  weekDay: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"10pt\",\r\n  },\r\n  summDate: {\r\n    fontSize: \"9pt\",\r\n  },\r\n  mainPageStyle: {\r\n    marginBottom: \"0.5em\",\r\n    // border: \"1px solid\",\r\n  },\r\n  root: {\r\n    backgroundColor: theme.palette.secondary.light,\r\n  },\r\n  // dayGrid: {\r\n  //   width: \"18%\",\r\n  // },\r\n  // dividerStyle: {\r\n  //   width: \"80%\",\r\n  //   color: \"black\",\r\n  // },\r\n}));\r\n\r\nexport default function Weather(props) {\r\n  const classes = useStyles();\r\n\r\n  var weatherDaySumm = props.day.weather[0];\r\n  var iconString =\r\n    \"https://openweathermap.org/img/wn/\" + weatherDaySumm.icon + \"@2x.png\";\r\n\r\n  const stringDate = props.convertDate(props.day.dt);\r\n  var dispDate =\r\n    stringDate.substring(8, 10) + \" | \" + stringDate.substring(4, 7);\r\n  var weekDay = stringDate.substring(0, 3);\r\n\r\n  var minTemp = Math.round(Number(props.day.temp.min));\r\n  var maxTemp = Math.round(Number(props.day.temp.max));\r\n\r\n  const [dayData, setDayData] = useState({\r\n    date: dispDate,\r\n    minTemp: minTemp,\r\n    maxTemp: maxTemp,\r\n    weekDay: weekDay,\r\n    iconString: iconString,\r\n  });\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      className={classes.mainPageStyle}\r\n      justifyContent=\"space-evenly\"\r\n      \r\n    >\r\n      <Grid item container className={classes.dayGrid}>\r\n        <Paper variant=\"outlined\" style={{ width: \"100%\" }}>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"column\"\r\n            className={classes.root}\r\n          >\r\n            <Grid item container justifyContent=\"center\">\r\n              <Typography className={classes.summMaxTemp}>\r\n                {dayData.maxTemp}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item container justifyContent=\"center\">\r\n              <Divider className={classes.dividerStyle} />\r\n            </Grid>\r\n            <Grid item container justifyContent=\"center\">\r\n              <Typography className={classes.summMinTemp}>\r\n                {dayData.minTemp}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item container justifyContent=\"center\">\r\n              <img\r\n                src={iconString}\r\n                style={{ width: \"45%\", height: \"45%\" }}\r\n                alt=\"fireSpot\"\r\n              />\r\n            </Grid>\r\n            <Grid item container justifyContent=\"center\">\r\n              <Typography className={classes.weekDay}>\r\n                {dayData.weekDay}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item container justifyContent=\"center\">\r\n              <Typography className={classes.summDate}>\r\n                {dayData.date}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.actions.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\weatherSummary.js",["141"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport Weather from \"./weather\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nimport sunRise from \"../../assets/sunrise.png\";\r\nimport sunSet from \"../../assets/sunset.png\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  weatSumm: {\r\n    backgroundColor: \"white\",\r\n    marginTop: \"0.5em\",\r\n    marginBottom: \"0.5em\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.secondary.light,\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  summMaxTemp: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"15pt\",\r\n  },\r\n  weekDay: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"10pt\",\r\n  },\r\n  summDate: {\r\n    fontSize: \"9pt\",\r\n  },\r\n  image: {\r\n    maxHeight: \"90%\",\r\n    maxWidth: \"90%\",\r\n  },\r\n}));\r\n\r\nfunction convertDate(unixDate) {\r\n  var millisecond = unixDate;\r\n  var date = new Date(millisecond * 1000);\r\n  return date.toString();\r\n}\r\n\r\nexport default function WeatherSummary(props) {\r\n  const classes = useStyles();\r\n  //Local State\r\n  const [weather, setWeather] = useState(null);\r\n  // const [weatherRefresh, setWeatherRefresh] = useState(false);\r\n  const [ref, setRef] = useState(false);\r\n\r\n  const [weatherFields, setWeatherFields] = useState({\r\n    weatherMinField: \"\",\r\n    weatherMaxField: \"\",\r\n    weatherDateField: \"\",\r\n    weatherTempField: \"\",\r\n    weatherHumField: \"\",\r\n    weatherSunUpField: \"\",\r\n    weatherSunDownField: \"\",\r\n    weatherWindSpeedField: \"\",\r\n    weatherWindDegField: \"\",\r\n    weatherIcon: \"\",\r\n    weatherAPI: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"---------- USE EFFECT ----------------\");\r\n    getWeather();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"---------- USE EFFECT ----------------\");\r\n  //   getWeather();\r\n  // }, [props.weatherRefresh]);\r\n\r\n  var lon = \"\";\r\n  var lat = \"\";\r\n  var url = \"\";\r\n  const getWeather = async () => {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        lat = position.coords.latitude;\r\n        lon = position.coords.longitude;\r\n        url =\r\n          \"https://api.openweathermap.org/data/2.5/onecall?lat=\" +\r\n          lat +\r\n          \"&lon=\" +\r\n          lon +\r\n          \"&units=metric&exclude=hourly,minutely&appid=\";\r\n\r\n        const requestOptions = {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            weatherAPI: url,\r\n          }),\r\n        };\r\n        fetch(\"http://localhost:4000/currentWeather\", requestOptions)\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            setWeather(response);\r\n\r\n            var stringDate = convertDate(response.current.dt);\r\n            var dispDate =\r\n              stringDate.substring(0, 3) +\r\n              \" \" +\r\n              stringDate.substring(8, 10) +\r\n              \" \" +\r\n              stringDate.substring(4, 7) +\r\n              \" \" +\r\n              stringDate.substring(11, 15);\r\n\r\n            stringDate = convertDate(response.current.sunrise);\r\n            var sunUp = stringDate.substring(16, 21);\r\n            stringDate = convertDate(response.current.sunset);\r\n            var sunDown = stringDate.substring(16, 21);\r\n\r\n            const todayWeather = response.daily[0];\r\n\r\n            var minTemp = Math.round(Number(todayWeather.temp.min));\r\n            var maxTemp = Math.round(Number(todayWeather.temp.max));\r\n\r\n            var temp = Math.round(Number(response.current.temp));\r\n            var windSpeed = response.current.wind_speed;\r\n            var d2d = require(\"degrees-to-direction\");\r\n            var windDeg = d2d(response.current.wind_deg);\r\n            var humidity = response.current.humidity;\r\n\r\n            var iconCode = response.current.weather[0];\r\n\r\n            var iconUrl =\r\n              \"https://openweathermap.org/img/wn/\" + iconCode.icon + \"@2x.png\";\r\n\r\n            setWeatherFields({\r\n              ...weatherFields,\r\n              weatherDateField: dispDate,\r\n              weatherSunUpField: sunUp,\r\n              weatherSunDownField: sunDown,\r\n              weatherMinField: minTemp,\r\n              weatherMaxField: maxTemp,\r\n              weatherTempField: temp,\r\n              weatherHumField: humidity,\r\n              weatherWindSpeedField: windSpeed,\r\n              weatherWindDegField: windDeg,\r\n              weatherIcon: iconUrl,\r\n            });\r\n            setRef(true);\r\n          })\r\n          .catch((error) => console.log(error));\r\n      });\r\n    } else {\r\n      console.log(\"Not Available\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      className={classes.weatSumm}\r\n    >\r\n      <Grid item container>\r\n        <Grid item container direction=\"column\" style={{ width: \"33%\" }}>\r\n          <Grid item>\r\n            <Typography>{weatherFields.weatherDateField}</Typography>\r\n          </Grid>\r\n          <Grid item container style={{ marginTop: \"0.5em\", marginBottom: \"0.5em\" }}>\r\n            <Grid style={{ width: \"50%\" }}>\r\n              <Typography style={{fontSize: \"22px\", fontWeight: \"normal\"}}>\r\n                {weatherFields.weatherTempField}\r\n                <span style={{ fontSize: \"x-small\" }}>&#8451;</span>\r\n              </Typography>\r\n            </Grid>\r\n            <Divider style={{}} />\r\n            <Grid container style={{ width: \"50%\" }} justifyContent=\"flex-end\">\r\n              <Typography style={{fontSize: \"22px\", fontWeight: \"normal\"}}>{weatherFields.weatherHumField} %</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container>\r\n            <Grid item container style={{ width: \"50%\" }} alignItems=\"flex-end\">\r\n              <ExpandMoreIcon style={{ border: \"0px solid\" }} />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              justifyContent=\"flex-end\"\r\n              alignItems=\"flex-end\"\r\n              style={{ width: \"50%\" }}\r\n            >\r\n              <ExpandLessIcon />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container>\r\n            <Grid item style={{ width: \"50%\" }}>\r\n              <Typography>\r\n                {weatherFields.weatherMinField}\r\n                <span style={{ fontSize: \"x-small\" }}>&#8451;</span>{\" \"}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              style={{ width: \"50%\" }}\r\n              justifyContent=\"flex-end\"\r\n            >\r\n              <Typography>\r\n                {weatherFields.weatherMaxField}\r\n                <span style={{ fontSize: \"x-small\" }}>&#8451;</span>{\" \"}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container style={{ width: \"33%\" }} alignItems=\"center\">\r\n          <img\r\n            src={weatherFields.weatherIcon}\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n            // className={classes.image}\r\n            alt=\"fireSpot\"\r\n          />\r\n        </Grid>\r\n        <Grid item container direction=\"column\" style={{ width: \"33%\" }}>\r\n          <Grid item>\r\n            <Typography>Wind</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography>\r\n              Speed : {weatherFields.weatherWindSpeedField}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Typography>\r\n              Direction: {weatherFields.weatherWindDegField}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item container justifyContent=\"space-between\">\r\n            <Grid\r\n              item\r\n              container\r\n              style={{ width: \"45%\" }}\r\n              justifyContent=\"center\"\r\n              alignItems=\"flex-end\"\r\n            >\r\n              <img src={sunRise} className={classes.image} alt=\"fireSpot\" />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              style={{ width: \"45%\" }}\r\n              justifyContent=\"center\"\r\n              alignItems=\"flex-end\"\r\n            >\r\n              <img src={sunSet} className={classes.image} alt=\"fireSpot\" />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Typography>{weatherFields.weatherSunUpField}</Typography>{\" \"}\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography>{weatherFields.weatherSunDownField} </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {props.pageSource === \"ENV\" ? (\r\n        <Grid\r\n          item\r\n          container\r\n          justifyContent=\"space-evenly\"\r\n          style={{ marginTop: \"1em\" }}\r\n        >\r\n          {ref\r\n            ? weather.daily.map((day, i) => (\r\n                <Grid item key={i} xs={3}>\r\n                  <Weather day={day} convertDate={convertDate} />\r\n                </Grid>\r\n              ))\r\n            : null}\r\n        </Grid>\r\n      ) : null}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\signup.component.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\calenderMonth.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\signin.component.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\newJournal.js",["142"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Chip from \"@material-ui/core/chip\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n//Redux imports\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { displayNewJournal } from \"../../redux/siteNav/siteNav.actions\";\r\nimport { selectDispNewJournal } from \"../../redux/siteNav/siteNav.selector\";\r\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6em\",\r\n    width: \"100%\",\r\n    border: \"0px solid\",\r\n  },\r\n  journalInput: {\r\n    margin: \"0\",\r\n    marginTop: \"3px\",\r\n  },\r\n  mainPageSub: {\r\n    border: \"0px solid black\",\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#ebffdb\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"36.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {},\r\n  journalDescTitle: {\r\n    paddingBottom: \"0.5em\",\r\n    color: \"#000\",\r\n    opacity: \"0.65\",\r\n  },\r\n  journalDesc: {\r\n    width: \"95%\",\r\n    border: `0px solid ${theme.palette.common.blue}`,\r\n    borderRadius: 5,\r\n    backgroundColor: theme.palette.secondary.light,\r\n    paddingLeft: \"3px\",\r\n    paddingRight: \"3px\",\r\n  },\r\n  journalButton: {\r\n    margin: \"1em\",\r\n  },\r\n  submitGrid: {},\r\n  curJournals: { marginTop: \"1em\", width: \"100%\" },\r\n  curJournalsSpace: {\r\n    width: \"100%\",\r\n  },\r\n  curJournalsSpace80: {\r\n    width: \"80%\",\r\n    marginLeft: \"4em\",\r\n  },\r\n  curJournalSubheader: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n    backgroundColor: theme.palette.primary.light,\r\n    fontSize: \"12pt\",\r\n  },\r\n}));\r\n\r\nexport default function NewJournal(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  //Get Global State\r\n  const dispNewJournal = useSelector(selectDispNewJournal);\r\n  const currentUser = useSelector(selectCurrentUser);\r\n\r\n  //Setup Local State\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [soilTypeState, setSoilTypeState] = useState([]);\r\n  const [fullJournal, setFullJournal] = useState({\r\n    jName: \"\",\r\n    jDesc: \"\",\r\n    roomType: \"\",\r\n    waterType: \"\",\r\n    vegLight: \"\",\r\n    flowLight: \"\",\r\n    growMedium: \"\",\r\n    vegWatt: \"\",\r\n    flowerWatt: \"\",\r\n    username: currentUser,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // getJournals();\r\n  }, []);\r\n\r\n  //Updating journals\r\n  const updateJournal = (event) => {\r\n    setFullJournal({ ...fullJournal, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const cancelNewJournal = () => {\r\n    setExpanded(false);\r\n    dispatch(displayNewJournal(!dispNewJournal));\r\n  };\r\n\r\n  //Journal Data Processing\r\n  //Requesting -  Create new journal on backend\r\n  const createJournal = async () => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        journalNameField: fullJournal.jName,\r\n        journalDescField: fullJournal.jDesc,\r\n        journalRoomType: fullJournal.roomType,\r\n        journalWaterType: fullJournal.waterType,\r\n        journalVegLight: fullJournal.vegLight,\r\n        journalFlowLight: fullJournal.flowLight,\r\n        journalGrowMedium: soilTypeState,\r\n        journalVegWatt: fullJournal.vegWatt,\r\n        journalFlowerWatt: fullJournal.flowerWatt,\r\n        journalUsername: fullJournal.username,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:4000/createJournal\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((response) => console.log(response))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n\r\n  const soilType = [\r\n    \"Soil\",\r\n    \"Perlite\",\r\n    \"Vermiculite\",\r\n    \"Expanded Clay\",\r\n    \"Coco Coir\",\r\n    \"Mineral Wood\",\r\n    \"Other\",\r\n  ];\r\n\r\n  const handleChangeMultiple = (event) => {\r\n    setSoilTypeState(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent style={{ border: \"0px solid\", padding: \"0\" }}>\r\n        <Grid container direction=\"column\" style={{ width: \"100%\" }}>\r\n          <Grid item style={{ width: \"100%\" }}>\r\n            <TextField\r\n              required\r\n              id=\"standard-required\"\r\n              label=\"New Journal Name\"\r\n              onChange={updateJournal}\r\n              name=\"jName\"\r\n              value={fullJournal.jName}\r\n              fullWidth\r\n              className={classes.journalInput}\r\n              margin=\"dense\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-label\">Room Type</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{ width: \"100%\" }}\r\n                name=\"roomType\"\r\n                onChange={updateJournal}\r\n                value={fullJournal.roomType}\r\n              >\r\n                <MenuItem value={\"Indoor\"}>Indoor</MenuItem>\r\n                <MenuItem value={\"Outdoor\"}>Outdoor</MenuItem>\r\n                <MenuItem value={\"Greenhouse\"}>Greenhouse</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Watering Type\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{ width: \"100%\" }}\r\n                name=\"waterType\"\r\n                onChange={updateJournal}\r\n                value={fullJournal.waterType}\r\n              >\r\n                <MenuItem value={\"Manual\"}>Manual</MenuItem>\r\n                <MenuItem value={\"Drip\"}>Drip</MenuItem>\r\n                <MenuItem value={\"Hydroponic\"}>Hydroponic</MenuItem>\r\n                <MenuItem value={\"Aeroponic\"}>Aeroponic</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item container style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <Grid item style={{ width: \"50%\" }}>\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                id=\"standard-required\"\r\n                label=\"Wattage\"\r\n                onChange={updateJournal}\r\n                name=\"vegWatt\"\r\n                value={fullJournal.vegWatt}\r\n                fullWidth\r\n                className={classes.journalInput}\r\n                margin=\"dense\"\r\n              />\r\n            </Grid>\r\n            <Grid item style={{ width: \"50%\" }}>\r\n              <FormControl\r\n                className={classes.formControl}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Veg. Light\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"vegLight\"\r\n                  onChange={updateJournal}\r\n                  value={fullJournal.vegLight}\r\n                >\r\n                  <MenuItem value={\"LED\"}>LED</MenuItem>\r\n                  <MenuItem value={\"HPS\"}>HPS</MenuItem>\r\n                  <MenuItem value={\"HID\"}>HID</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <Grid item style={{ width: \"50%\" }}>\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                id=\"standard-required\"\r\n                label=\"Wattage\"\r\n                onChange={updateJournal}\r\n                name=\"flowerWatt\"\r\n                value={fullJournal.flowerWatt}\r\n                fullWidth\r\n                className={classes.journalInput}\r\n                margin=\"dense\"\r\n              />\r\n            </Grid>\r\n            <Grid item style={{ width: \"50%\" }}>\r\n              <FormControl\r\n                className={classes.formControl}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Flower. Light\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"flowLight\"\r\n                  onChange={updateJournal}\r\n                  value={fullJournal.flowLight}\r\n                >\r\n                  <MenuItem value={\"LED\"}>LED</MenuItem>\r\n                  <MenuItem value={\"HPS\"}>HPS</MenuItem>\r\n                  <MenuItem value={\"HID\"}>HID</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <InputLabel id=\"soilTypeLabel\">Grow Medium</InputLabel>\r\n              <Select\r\n                labelId=\"soilTypeLabel\"\r\n                id=\"mutipleChip\"\r\n                multiple\r\n                value={soilTypeState}\r\n                onChange={handleChangeMultiple}\r\n                input={<Input id=\"selectMultipleChip\" />}\r\n                renderValue={(selected) => (\r\n                  <div className={classes.chips}>\r\n                    {soilTypeState.map((value) => (\r\n                      <Chip\r\n                        key={value}\r\n                        label={value}\r\n                        className={classes.chip}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {soilType.map((soil) => (\r\n                  <MenuItem key={soil} value={soil}>\r\n                    {soil}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <br />\r\n          <Grid item style={{ width: \"100%\" }}>\r\n            <Typography className={classes.journalDescTitle}>\r\n              Journal Description\r\n            </Typography>\r\n            <Grid item container justifyContent=\"center\">\r\n              <TextField\r\n                InputProps={{ disableUnderline: true }}\r\n                value={fullJournal.jDesc}\r\n                className={classes.journalDesc}\r\n                multiline\r\n                fullWidth\r\n                rows={3}\r\n                name=\"jDesc\"\r\n                id=\"message\"\r\n                onChange={updateJournal}\r\n                placeholder=\"Short description of journal...\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            className={classes.submitGrid}\r\n            justifyContent=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.journalButton}\r\n                onClick={createJournal}\r\n              >\r\n                Create\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.journalButton}\r\n                onClick={cancelNewJournal}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      {/* </Collapse> */}\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\currentJournals.js",["143","144","145"],"import React, { useEffect, useState } from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//Redux imports\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { displayNewJournal } from \"../../redux/siteNav/siteNav.actions\";\r\nimport { selectDispNewJournal } from \"../../redux/siteNav/siteNav.selector\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"3em\",\r\n    border: \"1px solid\",\r\n  },\r\n  CheckButton: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    top: \"calc(50% - 20px) !important\",\r\n    transition: \"40ms\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      opacity: \"0.6 !important\",\r\n    },\r\n    height: \"25px\",\r\n    width: \"100%\",\r\n  },\r\n  paperStyle: {\r\n    backgroundColor: \"#d6ffb5\",\r\n    marginTop: \"0.5em\",\r\n    height: \"200px\",\r\n  },\r\n  journalTitle: {\r\n    width: \"90%\",\r\n  },\r\n  journalAddIcon: {\r\n    width: \"10%\",\r\n  },\r\n  journalIcon: {\r\n    marginRight: \"3px\",\r\n    marginTop: \"3px\",\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  journalDesc: {\r\n    paddingLeft: \"0.5em\",\r\n    height: \"100px\",\r\n    // border: \"1px solid\",\r\n  },\r\n}));\r\n\r\nexport default function CurrentJournals(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  //Get Global State\r\n  const dispNewJournal = useSelector(selectDispNewJournal);\r\n  //Get Local State\r\n  const [activeJournals, setActiveJournals] = useState([]);\r\n\r\n  //Test Data\r\n  const test = [\r\n    {\r\n      name: \"Tempus\",\r\n      description:\r\n        \"Et sollicitudin ac orci phasellus egestas tellus rutrum tellus. Quam pellentesque nec nam aliquam sem. Nunc pulvinar sapien et ligula ullamcorper.\",\r\n    },\r\n    {\r\n      name: \"Pellentesque\",\r\n      description:\r\n        \"Enim tortor at auctor urna nunc. Placerat duis ultricies lacus sed turpis tincidunt id.\",\r\n    },\r\n    {\r\n      name: \"Pharetra\",\r\n      description:\r\n        \"Facilisis leo vel fringilla est ullamcorper. Ut consequat semper viverra nam libero justo laoreet. Ut sem nulla pharetra diam sit amet nisl. Semper eget duis at tellus at urna condimentum mattis pellentesque.\",\r\n    },\r\n  ];\r\n\r\n  //Setup Local State\r\n  // const [expanded, setExpanded] = useState(false);\r\n  const [fullJournal, setFullJournal] = useState({\r\n    jName: \"\",\r\n    jDesc: \"\",\r\n    roomType: \"\",\r\n    waterType: \"\",\r\n    vegLight: \"\",\r\n    flowLight: \"\",\r\n    growMedium: \"\",\r\n  });\r\n\r\n  //Requesting - All journals from backend\r\n  const getJournals = async () => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        journalNameField: fullJournal.jName,\r\n        journalDescField: fullJournal.jDesc,\r\n        journalRoomType: fullJournal.roomType,\r\n        journalWaterType: fullJournal.waterType,\r\n        journalVegLight: fullJournal.vegLight,\r\n        journalFlowLight: fullJournal.flowLight,\r\n        journalGrowMedium: fullJournal.growMedium,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:4000/journalGet\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((response) => setActiveJournals(response))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const togNewJournalDisplay = () => {\r\n    dispatch(displayNewJournal(!dispNewJournal));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getJournals();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Carousel next={(next, active) => {}} prev={(prev, active) => {}}>\r\n        {activeJournals.map((item, index) => (\r\n          <Paper className={classes.paperStyle} key={index}>\r\n            <Grid container direction=\"column\">\r\n              <Grid item container alignItems=\"flex-start\">\r\n                <Grid\r\n                  item\r\n                  className={classes.journalTitle}\r\n                  style={{ paddingLeft: \"0.5em\" }}\r\n                >\r\n                  <h2>{item.name}</h2>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  className={classes.journalAddIcon}\r\n                  justifyContent=\"flex-end\"\r\n                >\r\n                  <AddCircleOutlineIcon\r\n                    className={classes.journalIcon}\r\n                    style={{ zIndex: 1 }}\r\n                    onClick={() => togNewJournalDisplay()}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item className={classes.journalDesc}>\r\n                <p>{item.description}</p>\r\n              </Grid>\r\n              <Grid item container justifyContent=\"center\">\r\n                <Grid item className={classes.buttonGrid}>\r\n                  <Button\r\n                    className={classes.CheckButton}\r\n                    onClick={() => console.log(\"But Clicked\")}\r\n                  >\r\n                    Select\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.types.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.types.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.actions.js",[],{"ruleId":"146","severity":1,"message":"147","line":108,"column":9,"nodeType":"148","messageId":"149","endLine":108,"endColumn":21},{"ruleId":"146","severity":1,"message":"150","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"151","line":10,"column":8,"nodeType":"148","messageId":"149","endLine":10,"endColumn":15},{"ruleId":"146","severity":1,"message":"147","line":74,"column":9,"nodeType":"148","messageId":"149","endLine":74,"endColumn":21},{"ruleId":"146","severity":1,"message":"152","line":84,"column":10,"nodeType":"148","messageId":"149","endLine":84,"endColumn":21},{"ruleId":"146","severity":1,"message":"153","line":84,"column":23,"nodeType":"148","messageId":"149","endLine":84,"endColumn":37},{"ruleId":"146","severity":1,"message":"154","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":17},{"ruleId":"146","severity":1,"message":"155","line":59,"column":19,"nodeType":"148","messageId":"149","endLine":59,"endColumn":29},{"ruleId":"156","severity":1,"message":"157","line":77,"column":6,"nodeType":"158","endLine":77,"endColumn":8,"suggestions":"159"},{"ruleId":"146","severity":1,"message":"160","line":106,"column":10,"nodeType":"148","messageId":"149","endLine":106,"endColumn":18},{"ruleId":"146","severity":1,"message":"161","line":65,"column":9,"nodeType":"148","messageId":"149","endLine":65,"endColumn":13},{"ruleId":"146","severity":1,"message":"153","line":85,"column":23,"nodeType":"148","messageId":"149","endLine":85,"endColumn":37},{"ruleId":"156","severity":1,"message":"162","line":122,"column":6,"nodeType":"158","endLine":122,"endColumn":8,"suggestions":"163"},"no-unused-vars","'userLoggedIn' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Weather' is defined but never used.","'fullJournal' is assigned a value but never used.","'setFullJournal' is assigned a value but never used.","'CloudIcon' is defined but never used.","'setDayData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.","ArrayExpression",["164"],"'expanded' is assigned a value but never used.","'test' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getJournals'. Either include it or remove the dependency array.",["165"],{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [getWeather]",{"range":"170","text":"171"},"Update the dependencies array to be: [getJournals]",{"range":"172","text":"173"},[1977,1979],"[getWeather]",[3636,3638],"[getJournals]"]