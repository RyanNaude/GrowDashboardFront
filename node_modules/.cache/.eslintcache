[{"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\index.js":"1","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\store.js":"2","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\App.js":"3","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\root-reducer.js":"4","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\envSettings.js":"5","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\calander.js":"6","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\enviroment.js":"7","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\costManagement.js":"8","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\home.js":"9","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\gallery.js":"10","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\Header.js":"11","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\theme.js":"12","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\unsigned.js":"13","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\calenderMonth.js":"14","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\costOfElec.js":"15","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\newJournal.js":"16","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\currentJournals.js":"17","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\galleryChipGroup.js":"18","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.selector.js":"19","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.actions.js":"20","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\signin.component.js":"21","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\signup.component.js":"22","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.reducer.jsx":"23","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.types.js":"24","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\calanderEntry.js":"25"},{"size":391,"mtime":1634035493300,"results":"26","hashOfConfig":"27"},{"size":270,"mtime":1634035493301,"results":"28","hashOfConfig":"27"},{"size":1777,"mtime":1634044852864,"results":"29","hashOfConfig":"27"},{"size":153,"mtime":1634035493300,"results":"30","hashOfConfig":"27"},{"size":1120,"mtime":1634113927019,"results":"31","hashOfConfig":"27"},{"size":2316,"mtime":1634199542645,"results":"32","hashOfConfig":"27"},{"size":7536,"mtime":1634113869979,"results":"33","hashOfConfig":"27"},{"size":1174,"mtime":1634130620093,"results":"34","hashOfConfig":"27"},{"size":8302,"mtime":1634115006936,"results":"35","hashOfConfig":"27"},{"size":3825,"mtime":1634205226254,"results":"36","hashOfConfig":"27"},{"size":13024,"mtime":1634035493296,"results":"37","hashOfConfig":"27"},{"size":445,"mtime":1634035493299,"results":"38","hashOfConfig":"27"},{"size":812,"mtime":1634035493299,"results":"39","hashOfConfig":"27"},{"size":3082,"mtime":1634201236114,"results":"40","hashOfConfig":"27"},{"size":2664,"mtime":1634130940378,"results":"41","hashOfConfig":"27"},{"size":11523,"mtime":1634035493297,"results":"42","hashOfConfig":"27"},{"size":2363,"mtime":1634116971076,"results":"43","hashOfConfig":"27"},{"size":1633,"mtime":1634201443634,"results":"44","hashOfConfig":"27"},{"size":492,"mtime":1634035493302,"results":"45","hashOfConfig":"27"},{"size":399,"mtime":1634035493301,"results":"46","hashOfConfig":"27"},{"size":4962,"mtime":1634035493298,"results":"47","hashOfConfig":"27"},{"size":5386,"mtime":1634035493298,"results":"48","hashOfConfig":"27"},{"size":748,"mtime":1634035493302,"results":"49","hashOfConfig":"27"},{"size":167,"mtime":1634035493303,"results":"50","hashOfConfig":"27"},{"size":2504,"mtime":1634199563650,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1qa6l67",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"54"},"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\index.js",[],["114","115"],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\store.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\App.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\root-reducer.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\envSettings.js",["116","117"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Unsigned from \"./ui/unsigned\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectCurrentUser } from \"../redux/user/user.selector\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginLeft: \"5em\",\r\n    width: \"95%\",\r\n  },\r\n  mainPageSub: {\r\n    border: \"1px solid black\",\r\n  },\r\n}));\r\n\r\nexport default function EnviromentSettings(props) {\r\n  const classes = useStyles();\r\n  const userLoggedIn = useSelector(selectCurrentUser);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      className={classes.mainPageStyle}\r\n      style={{\r\n        marginLeft: \"0.5em\",\r\n        marginRight: \"0.5em\",\r\n        marginTop: \"6em\",\r\n      }}\r\n    >\r\n      {/* {userLoggedIn ? ( */}\r\n      <Grid item>\r\n        <Typography variant=\"h5\">App Settings</Typography>\r\n      </Grid>\r\n      {/* ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )} */}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\calander.js",["118","119","120","121"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Unsigned from \"./ui/unsigned\";\r\nimport CalanderMonth from \"./ui/calenderMonth\";\r\nimport CalanderEntry from \"./ui/calanderEntry\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectCurrentUser } from \"../redux/user/user.selector\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6.5em\",\r\n  },\r\n  mainPageSub: {\r\n    border: \"1px solid black\",\r\n  },\r\n}));\r\n\r\nconst titleArray = [\"Diam\", \"Arcu\", \"Purus\", \"Lectus\"];\r\nconst timeArray = [\r\n  \"17:00 | 18:00\",\r\n  \"13:00 | 15:00\",\r\n  \"08:00 | 13:00\",\r\n  \"11:00 | 17:00\",\r\n];\r\nconst dateArray = [\r\n  \"1 JAN | 2021\",\r\n  \"4 JAN | 2021\",\r\n  \"13 JAN | 2021\",\r\n  \"22 JAN | 2021\",\r\n];\r\nconst bodyArray = [\r\n  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\r\n  \"Pretium fusce id velit ut tortor pretium. Mauris rhoncus aenean vel elit. Penatibus et magnis dis parturient montes nascetur ridiculus mus.\",\r\n  \"Quam pellentesque nec nam aliquam sem. Pellentesque elit ullamcorper dignissim cras tincidunt.\",\r\n  \"Sed risus ultricies tristique nulla aliquet enim tortor at. Etiam tempor orci eu lobortis elementum nibh.\",\r\n];\r\n\r\nexport default function Calander(props) {\r\n  const classes = useStyles();\r\n  const userLoggedIn = useSelector(selectCurrentUser);\r\n\r\n  return (\r\n    <Grid container direction=\"column\" className={classes.mainPageStyle}>\r\n      {/* {userLoggedIn ? ( */}\r\n      {/* <Grid item>\r\n        <Typography variant=\"h5\">Calander</Typography>\r\n      </Grid> */}\r\n      <Grid item>\r\n        <CalanderMonth />\r\n      </Grid>\r\n      <Grid item style={{ marginTop: \"0.5em\" }}>\r\n        {timeArray.map(\r\n          (time, index) => (\r\n            console.log(dateArray[index]),\r\n            (\r\n              <CalanderEntry\r\n                time={time}\r\n                date={dateArray[index]}\r\n                title={titleArray[index]}\r\n                body={bodyArray[index]}\r\n              />\r\n            )\r\n          )\r\n        )}\r\n      </Grid>\r\n      {/* ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )} */}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\enviroment.js",["122","123"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Unsigned from \"./ui/unsigned\";\r\n\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport defaultGreen from \"../assets/images.jfif\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectCurrentUser } from \"../redux/user/user.selector\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginLeft: \"5em\",\r\n    width: \"95%\",\r\n  },\r\n  mainPageSub: {\r\n    border: \"1px solid black\",\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#ebffdb\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"36.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  journalDescTitle: {\r\n    marginTop: \"1.5em\",\r\n  },\r\n  journalDesc: {\r\n    border: `2px solid ${theme.palette.common.blue}`,\r\n    borderRadius: 5,\r\n  },\r\n  journalButton: {\r\n    margin: \"1em\",\r\n  },\r\n  submitGrid: {\r\n    marginTop: \"1.5em\",\r\n  },\r\n}));\r\n\r\nexport default function Enviroment(props) {\r\n  const classes = useStyles();\r\n\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [journalName, setJournalName] = useState(\"\");\r\n  const [journalDesc, setJournalDesc] = useState(\"\");\r\n  // const [activeJournals, setActiveJournals] = useState([]);\r\n\r\n  const userLoggedIn = useSelector(selectCurrentUser);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      className={classes.mainPageStyle}\r\n      style={{\r\n        marginLeft: \"0.5em\",\r\n        marginRight: \"0.5em\",\r\n        marginTop: \"6em\",\r\n      }}\r\n    >\r\n      {/* {userLoggedIn ? ( */}\r\n      <Card className={classes.root}>\r\n        <Grid container>\r\n          <Grid item style={{ width: \"80%\" }}>\r\n            <CardHeader title=\"Setup Enviroment\" subheader=\"\" />\r\n          </Grid>\r\n          <Grid item style={{ width: \"20%\" }}>\r\n            <CardActions disableSpacing>\r\n              <IconButton\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </CardActions>\r\n          </Grid>\r\n        </Grid>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={defaultGreen}\r\n          title=\"Paella dish\"\r\n        />\r\n\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Grid container>\r\n              <Grid item style={{ width: \"100%\" }}>\r\n                <TextField\r\n                  required\r\n                  id=\"standard-required\"\r\n                  label=\"Enviroment Name\"\r\n                  onChange={(event) => setJournalName(event.target.value)}\r\n                  value={journalName}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item style={{ width: \"100%\" }}>\r\n                <Typography className={classes.journalDescTitle}>\r\n                  Enviroment Description\r\n                </Typography>\r\n                <TextField\r\n                  InputProps={{ disableUnderline: true }}\r\n                  value={journalDesc}\r\n                  className={classes.journalDesc}\r\n                  multiline\r\n                  fullWidth\r\n                  rows={2}\r\n                  id=\"message\"\r\n                  onChange={(event) => setJournalDesc(event.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n                <FormControl\r\n                  className={classes.formControl}\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  <InputLabel id=\"demo-simple-select-label\">\r\n                    Room Type\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{ width: \"100%\" }}\r\n                    // value={age}\r\n                    // onChange={handleChange}\r\n                  >\r\n                    <MenuItem value={\"Indoor\"}>Indoor</MenuItem>\r\n                    <MenuItem value={\"Outdoor\"}>Outdoor</MenuItem>\r\n                    <MenuItem value={\"Greenhouse\"}>Greenhouse</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n                <FormControl\r\n                  className={classes.formControl}\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  <InputLabel id=\"vegLight\">Veg. Light</InputLabel>\r\n                  <Select\r\n                    labelId=\"vegLight-label\"\r\n                    id=\"vegLight\"\r\n                    style={{ width: \"100%\" }}\r\n                    // value={age}\r\n                    // onChange={handleChange}\r\n                  >\r\n                    <MenuItem value={\"LED\"}>LED</MenuItem>\r\n                    <MenuItem value={\"HPS\"}>HPS</MenuItem>\r\n                    <MenuItem value={\"HID\"}>HID</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                className={classes.submitGrid}\r\n                justifyContent=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.journalButton}\r\n                    // onClick={createJournal}\r\n                  >\r\n                    Create\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.journalButton}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n      {/* ) : (\r\n        <div>\r\n          <Unsigned />\r\n        </div>\r\n      )} */}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\costManagement.js",["124","125"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Unsigned from \"./ui/unsigned\";\r\n\r\nimport CostOFElec from \"./ui/costOfElec\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectCurrentUser } from \"../redux/user/user.selector\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6em\",\r\n  },\r\n  mainPageSub: {    \r\n    // border: \"1px solid black\",\r\n  },\r\n}));\r\n\r\nexport default function CostManagement(props) {\r\n  const classes = useStyles();\r\n  const userLoggedIn = useSelector(selectCurrentUser);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      className={classes.mainPageStyle}\r\n      style={{\r\n       \r\n      }}\r\n    >\r\n      {/* {userLoggedIn ? ( */}\r\n        <Grid item>\r\n          <Typography variant=\"h5\">Cost Management</Typography>\r\n        </Grid>\r\n        <Grid item className={classes.mainPageSub}>\r\n          <CostOFElec />\r\n        </Grid>\r\n      {/* ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )} */}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\home.js",["126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\n//Redux imports\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectCurrentUser } from \"../redux/user/user.selector\";\r\n\r\n//Material UI imports\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n// import CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n//Component import\r\n// import defaultGreen from \"../assets/images.jfif\";\r\nimport Unsigned from \"./ui/unsigned\";\r\nimport NewJournal from \"./ui/newJournal\";\r\nimport CurrentJournals from \"./ui/currentJournals\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6em\",\r\n    width: \"100%\",\r\n    border: \"0px solid\",\r\n  },\r\n  mainPageSub: {\r\n    border: \"0px solid black\",\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#ebffdb\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"36.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  journalDescTitle: {\r\n    // marginTop: \"1.5em\",\r\n  },\r\n  journalDesc: {\r\n    border: `0px solid ${theme.palette.common.blue}`,\r\n    borderRadius: 5,\r\n  },\r\n  journalButton: {\r\n    margin: \"1em\",\r\n  },\r\n  submitGrid: {\r\n    marginTop: \"1.5em\",\r\n  },\r\n  curJournals: { marginTop: \"1em\", width: \"100%\" },\r\n  curJournalsSpace: {\r\n    width: \"100%\",\r\n  },\r\n  curJournalsSpace80: {\r\n    width: \"80%\",\r\n    marginLeft: \"4em\",\r\n  },\r\n  curJournalSubheader: {\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nexport default function Home(props) {\r\n  const classes = useStyles();\r\n  //Global State\r\n  const userLoggedIn = useSelector(selectCurrentUser);\r\n  //Local State\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [activeJournals, setActiveJournals] = useState([]);\r\n  const [fullJournal, setFullJournal] = useState({\r\n    jName: \"\",\r\n    jDesc: \"\",\r\n    roomType: \"\",\r\n    waterType: \"\",\r\n    vegLight: \"\",\r\n    flowLight: \"\",\r\n    growMedium: \"\",\r\n  });\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  //Requesting - All journals from backend\r\n  const getJournals = async () => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        journalNameField: fullJournal.jName,\r\n        journalDescField: fullJournal.jDesc,\r\n        journalRoomType: fullJournal.roomType,\r\n        journalWaterType: fullJournal.waterType,\r\n        journalVegLight: fullJournal.vegLight,\r\n        journalFlowLight: fullJournal.flowLight,\r\n        journalGrowMedium: fullJournal.growMedium,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:4000/journalGet\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => setActiveJournals(data))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  //Displaying journals returned from backend\r\n  function displayJournals(activeJournals) {\r\n    return (\r\n      <Grid\r\n        item\r\n        xs={3}\r\n        className={classes.curJournals}\r\n        key={activeJournals._id}\r\n      >\r\n        <Card className={classes.root}>\r\n          <Grid item style={{ width: \"70%\", marginTop: \"100em\" }}>\r\n            <CardHeader title={`${activeJournals.name}`} subheader=\"\" />\r\n          </Grid>\r\n          <CardContent>\r\n            <Grid item container direction=\"column\">\r\n              <Grid item container style={{ width: \"100%\" }}>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  style={{ width: \"100%\" }}\r\n                  direction=\"column\"\r\n                >\r\n                  <Grid className={classes.curJournalsSpace}>\r\n                    <Typography className={classes.curJournalSubheader}>\r\n                      Description:\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid className={classes.curJournalsSpace80}>\r\n                    <Typography>{activeJournals.description}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item container style={{ width: \"100%\" }}>\r\n                  <Grid className={classes.curJournalsSpace}>\r\n                    <Typography className={classes.curJournalSubheader}>\r\n                      Room Type:\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid className={classes.curJournalsSpace80}>\r\n                    <Typography>{activeJournals.roomType}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item container style={{ width: \"100%\" }}>\r\n                  <Grid className={classes.curJournalsSpace}>\r\n                    <Typography className={classes.curJournalSubheader}>\r\n                      Water Type:{\" \"}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid className={classes.curJournalsSpace80}>\r\n                    <Typography>{activeJournals.waterType}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item container style={{ width: \"100%\" }}>\r\n                  <Grid className={classes.curJournalsSpace}>\r\n                    <Typography className={classes.curJournalSubheader}>\r\n                      Veg. Light:{\" \"}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid className={classes.curJournalsSpace80}>\r\n                    <Typography>{activeJournals.vegLight}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item container style={{ width: \"100%\" }}>\r\n                  <Grid className={classes.curJournalsSpace}>\r\n                    <Typography className={classes.curJournalSubheader}>\r\n                      Flower Light:{\" \"}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid className={classes.curJournalsSpace80}>\r\n                    <Typography>{activeJournals.flowLight}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item container style={{ width: \"100%\" }}>\r\n                  <Grid className={classes.curJournalsSpace}>\r\n                    <Typography className={classes.curJournalSubheader}>\r\n                      Grow Medium:{\" \"}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid className={classes.curJournalsSpace80}>\r\n                    <Typography>{activeJournals.growMedium}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  //useEffect - Getting journals loaded on database\r\n  useEffect(() => {\r\n    getJournals();\r\n  }, []);\r\n\r\n  return (\r\n    \r\n    <Grid container direction=\"row\" className={classes.mainPageStyle}>\r\n      {/* {userLoggedIn ? ( */}\r\n        <Grid item container style={{ border: \"0px solid\" }}>\r\n          <Grid item style={{ border: \"0px solid\", width: \"100%\" }}>\r\n            <CurrentJournals />\r\n            <NewJournal />\r\n          </Grid>\r\n          <Grid item>{activeJournals.map(displayJournals)}</Grid>\r\n        </Grid>\r\n      {/* ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )} */}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\gallery.js",["142","143","144","145"],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\Header.js",["146","147","148","149","150","151","152","153","154","155","156"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  selectCurrentUser,\r\n  selectSignInState,\r\n  selectSignUpState,\r\n} from \"../../redux/user/user.selector\";\r\nimport {\r\n  setCurrentUser,\r\n  setSignInState,\r\n  setSignUpState,\r\n} from \"../../redux/user/user.actions\";\r\n\r\nimport SignUp from \"./signup.component\";\r\nimport SignIn from \"./signin.component\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\n//Import Material UI components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\n// import Divider from \"@material-ui/core/Divider\";\r\n// import Drawer from \"@material-ui/core/Drawer\";\r\n// import IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\n\r\n//Import Icons\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\nimport BubbleChartIcon from \"@material-ui/icons/BubbleChart\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport PhotoLibraryIcon from \"@material-ui/icons/PhotoLibrary\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n  },\r\n  listItemStyle: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  iconBar: {\r\n    backgroundColor: \"#b0fa73\",\r\n  },\r\n  listItemIcon: { display: \"flex\", justifyContent: \"center\" },\r\n  iconItem: {\r\n    align: \"center\",\r\n  },\r\n  title: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.secondary,\r\n  },\r\n  loginButGrid: {\r\n    // width: \"30%\",\r\n    // backgroundColor: \"red\"\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  toolbarMargin: {\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  iconStyle: {\r\n    color: \"primary\",\r\n  },\r\n  signUpBut: {\r\n    fontSize: \"8pt\",\r\n  },\r\n  signOutBut: {\r\n    fontSize: \"8pt\",\r\n  },\r\n  loginBut: {\r\n    fontSize: \"8pt\",\r\n  },\r\n}));\r\n\r\n// function ElevationScroll(props) {\r\n//   const { children } = props;\r\n\r\n//   const trigger = useScrollTrigger({\r\n//     disableHysteresis: true,\r\n//     threshold: 0,\r\n//   });\r\n\r\n//   return React.cloneElement(children, {\r\n//     elevation: trigger ? 4 : 0,\r\n//   });\r\n// }\r\n\r\n//Appbar elevation scroll, Make heaser look integrated.\r\nfunction ElevationScroll(props) {\r\n  const { children } = props;\r\n\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n\r\n  const [value, setValue] = useState(0);\r\n  const [currentLoggedIn, setCurrentLoggedIn] = useState(\"default\");\r\n  const [cookies, setCookies] = useCookies();\r\n\r\n  const userLoggedIn = useSelector(selectCurrentUser);\r\n  console.log(\"userLoggedIn Head\");\r\n  console.log(userLoggedIn);\r\n  const signInCur = useSelector(selectSignInState);\r\n  const signUpCur = useSelector(selectSignUpState);\r\n\r\n  const handleDrawerOpen = () => {\r\n    props.setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  const changeSignUpState = () => {\r\n    dispatch(setSignUpState(!signUpCur));\r\n    dispatch(setSignInState(false));\r\n  };\r\n\r\n  const changeSignInState = () => {\r\n    dispatch(setSignInState(!signInCur));\r\n    dispatch(setSignUpState(false));\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    dispatch(setCurrentUser(null));\r\n    dispatch(setSignInState(false));\r\n    dispatch(setSignUpState(false));\r\n  };\r\n\r\n  const userPageSelect = (index) => {\r\n    setValue(index);\r\n    dispatch(setSignInState(false));\r\n    dispatch(setSignUpState(false));\r\n  };\r\n\r\n  const menu = [\r\n    \"Home\",\r\n    \"Env. Breakdown\",\r\n    \"Calander\",\r\n    \"Photo Library\",\r\n    \"Cost Management\",\r\n    \"Env. Settings\",\r\n  ];\r\n\r\n  const links = [\r\n    \"/\",\r\n    \"/enviroment\",\r\n    \"/calander\",\r\n    \"/gallery\",\r\n    \"/costmanagement\",\r\n    \"/enviromentsettings\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (window.location.pathname === \"/\" && value !== 0) {\r\n      setValue(0);\r\n    } else if (window.location.pathname === \"/enviroment\" && value !== 1) {\r\n      setValue(1);\r\n    } else if (window.location.pathname === \"/calander\" && value !== 2) {\r\n      setValue(2);\r\n    } else if (window.location.pathname === \"/gallery\" && value !== 3) {\r\n      setValue(3);\r\n    } else if (window.location.pathname === \"/costmanagement\" && value !== 4) {\r\n      setValue(4);\r\n    } else if (\r\n      window.location.pathname === \"/enviromentsettings\" &&\r\n      value !== 5\r\n    ) {\r\n      setValue(5);\r\n    }\r\n  }, [value]);\r\n\r\n  return (\r\n    <div>\r\n      <ElevationScroll>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            <Grid container direction=\"row\">\r\n              <Grid item style={{ width: \"50%\" }}>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  className={classes.title}\r\n                  component={Link}\r\n                  to={\"/\"}\r\n                >\r\n                  Dashboard Inc.\r\n                </Typography>\r\n              </Grid>\r\n              {userLoggedIn === null ? (\r\n                <Grid\r\n                  item\r\n                  container\r\n                  style={{ width: \"50%\" }}\r\n                  justifyContent=\"flex-end\"\r\n                >\r\n                  <Grid item>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      onClick={changeSignInState}\r\n                      style={{ marginRight: \"0em\" }}\r\n                      className={classes.loginBut}\r\n                    >\r\n                      Sign In\r\n                    </Button>\r\n                    <Button\r\n                      onClick={changeSignUpState}\r\n                      color=\"secondary\"\r\n                      className={classes.signUpBut}\r\n                    >\r\n                      Sign Up\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              ) : (\r\n                <Grid\r\n                  item\r\n                  container\r\n                  style={{ width: \"50%\" }}\r\n                  justifyContent=\"flex-end\"\r\n                >\r\n                  <Grid item>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      onClick={logoutUser}\r\n                      className={classes.signOutBut}\r\n                    >\r\n                      Sign Out\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </Toolbar>\r\n          <div>\r\n            <Grid container className={classes.iconBar}>\r\n              {/* <Grid item container direction=\"row\" justifyContent=\"center\"> */}\r\n              {menu.map((text, index) => (\r\n                <Grid item xs={2}>\r\n                  <ListItem\r\n                    button\r\n                    key={text}\r\n                    component={Link}\r\n                    to={links[index]}\r\n                    onClick={userPageSelect}\r\n                    selected={index === value ? true : false}\r\n                    className={classes.listItemStyle}\r\n                  >\r\n                    <ListItemIcon className={classes.listItemIcon}>\r\n                      {index === 0 ? (\r\n                        <HomeIcon color=\"primary\" />\r\n                      ) : index === 1 ? (\r\n                        <BubbleChartIcon color=\"primary\" />\r\n                      ) : index === 2 ? (\r\n                        <CalendarTodayIcon color=\"primary\" />\r\n                      ) : index === 3 ? (\r\n                        <PhotoLibraryIcon color=\"primary\" />\r\n                      ) : index === 4 ? (\r\n                        <AttachMoneyIcon color=\"primary\" />\r\n                      ) : index === 5 ? (\r\n                        <SettingsIcon color=\"primary\" />\r\n                      ) : null}\r\n                    </ListItemIcon>\r\n                    {/* <ListItemText primary={text} /> */}\r\n                  </ListItem>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n            {/* </Grid> */}\r\n          </div>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n\r\n      {signUpCur ? <SignUp /> : null}\r\n      {signInCur ? (\r\n        <SignIn\r\n          currentLoggedIn={currentLoggedIn}\r\n          setCurrentLoggedIn={setCurrentLoggedIn}\r\n        />\r\n      ) : null}\r\n    </div>\r\n    // <React.Fragment>\r\n\r\n    //   <Drawer\r\n    //     variant=\"permanent\"\r\n    //     className={clsx(classes.drawer, {\r\n    //       [classes.drawerOpen]: props.open,\r\n    //       [classes.drawerClose]: !props.open,\r\n    //     })}\r\n    //     classes={{\r\n    //       paper: clsx({\r\n    //         [classes.drawerOpen]: props.open,\r\n    //         [classes.drawerClose]: !props.open,\r\n    //       }),\r\n    //     }}\r\n    //   >\r\n    //     <div className={classes.toolbar}>\r\n    //       <IconButton onClick={handleDrawerClose}>\r\n    //         {theme.direction === \"rtl\" ? (\r\n    //           <ChevronRightIcon />\r\n    //         ) : (\r\n    //           <ChevronLeftIcon />\r\n    //         )}\r\n    //       </IconButton>\r\n    //     </div>\r\n    //     <Divider />\r\n    //     <List>\r\n    //       {menu.map((text, index) => (\r\n    //         <ListItem\r\n    //           button\r\n    //           key={text}\r\n    //           component={Link}\r\n    //           to={links[index]}\r\n    //           onClick={userPageSelect}\r\n    //           selected={index === value ? true : false}\r\n    //         >\r\n    //           <ListItemIcon>\r\n    //             {text === \"Home\" ? (\r\n    //               <HomeIcon color=\"primary\" />\r\n    //             ) : text === \"Env. Breakdown\" ? (\r\n    //               <BubbleChartIcon color=\"primary\" />\r\n    //             ) : text === \"Cost Management\" ? (\r\n    //               <AttachMoneyIcon color=\"primary\" />\r\n    //             ) : text === \"Env. Settings\" ? (\r\n    //               <SettingsIcon color=\"primary\" />\r\n    //             ) : text === \"Photo Library\" ? (\r\n    //               <PhotoLibraryIcon color=\"primary\" />\r\n    //             ) : text === \"Calander\" ? (\r\n    //               <CalendarTodayIcon color=\"primary\" />\r\n    //             ) : null}\r\n    //           </ListItemIcon>\r\n    //           <ListItemText primary={text} />\r\n    //         </ListItem>\r\n    //       ))}\r\n    //     </List>\r\n    //     <Divider />\r\n    //   </Drawer>\r\n    //   <div className={classes.toolbarMargin} />\r\n\r\n    //   {signUpCur ? <SignUp /> : null}\r\n    //   {signInCur ? (\r\n    //     <SignIn\r\n    //       currentLoggedIn={currentLoggedIn}\r\n    //       setCurrentLoggedIn={setCurrentLoggedIn}\r\n    //     />\r\n    //   ) : null}\r\n    // </React.Fragment>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\theme.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\unsigned.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\calenderMonth.js",["157"],"import React, { useEffect } from \"react\";\r\n// import { useState } from \"react\";\r\n// import clsx from \"clsx\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  arrowBack: { marginRight: \"10px\" },\r\n  arrowForward: { marginLeft: \"10px\" },\r\n  yearDisplay: { fontWeight: \"medium\" },\r\n  root: {},\r\n  title: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  calanderDay: {\r\n    width: \"13%\",\r\n    margin: \"2px\",\r\n    border: \"0px solid\",\r\n  },\r\n  monthGrid: {\r\n    marginTop: \"0.5em\",\r\n  },\r\n  calanderGrid: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    paddingBottom: \"0.5em\",\r\n    paddingRight: \"0.5em\",\r\n    paddingLeft: \"0.5em\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  dayPaper: {\r\n    backgroundColor: theme.palette.secondary.Light,\r\n  },\r\n}));\r\n\r\nconst month = \"January\";\r\nconst year = \"2021\";\r\n\r\nexport default function CalanderMonth(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const testMonth = [\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\r\n    22, 23, 24, 25, 26, 27, 28, 29, 30,\r\n  ];\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" className={classes.calanderGrid}>\r\n      <Grid item container justifyContent=\"flex-end\" alignItems=\"center\">\r\n        <Grid item>\r\n          <ArrowBackIosIcon className={classes.arrowBack} />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"flex-end\"\r\n          style={{ width: \"50%\" }}\r\n        >\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{month}</Typography>{\" \"}\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography style={{ marginLeft: \"5px\", marginRight: \"5px\" }}>\r\n              |\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography className={classes.yearDisplay}>{year}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <ArrowForwardIosIcon className={classes.arrowForward} />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item container justifyContent=\"center\">\r\n        <Grid item container position=\"flex\" className={classes.monthGrid}>\r\n          {testMonth.map((data) => (\r\n            <Grid item className={classes.calanderDay}>\r\n              <Paper variant=\"outlined\" className={classes.dayPaper}>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  {data}\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\costOfElec.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\newJournal.js",["158"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Card, Divider } from \"@material-ui/core\";\r\nimport { CardHeader } from \"@material-ui/core\";\r\nimport { CardContent } from \"@material-ui/core\";\r\nimport { CardActions } from \"@material-ui/core\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { InputLabel } from \"@material-ui/core\";\r\nimport { Select } from \"@material-ui/core\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6em\",\r\n    width: \"100%\",\r\n    border: \"0px solid\",\r\n  },\r\n  journalInput: {\r\n    color: \"red\",\r\n    margin: \"0\",\r\n  },\r\n  mainPageSub: {\r\n    border: \"0px solid black\",\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#ebffdb\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"36.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    // backgroundColor: red[500],\r\n  },\r\n  journalDescTitle: {\r\n    // marginTop: \"1.5em\",\r\n  },\r\n  journalDesc: {\r\n    border: `0px solid ${theme.palette.common.blue}`,\r\n    borderRadius: 5,\r\n  },\r\n  journalButton: {\r\n    margin: \"1em\",\r\n  },\r\n  submitGrid: {\r\n    marginTop: \"1.5em\",\r\n  },\r\n  curJournals: { marginTop: \"1em\", width: \"100%\" },\r\n  curJournalsSpace: {\r\n    width: \"100%\",\r\n  },\r\n  curJournalsSpace80: {\r\n    width: \"80%\",\r\n    marginLeft: \"4em\",\r\n  },\r\n  curJournalSubheader: {\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nexport default function NewJournal(props) {\r\n  const classes = useStyles();\r\n\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [fullJournal, setFullJournal] = useState({\r\n    jName: \"\",\r\n    jDesc: \"\",\r\n    roomType: \"\",\r\n    waterType: \"\",\r\n    vegLight: \"\",\r\n    flowLight: \"\",\r\n    growMedium: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    // getJournals();\r\n  }, []);\r\n\r\n  //Updating journals\r\n  const updateJournal = (event) => {\r\n    setFullJournal({ ...fullJournal, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const cancelNewJournal = () => {\r\n    setExpanded(false);\r\n  };\r\n\r\n  //Journal Data Processing\r\n  //Requesting -  Create new journal on backend\r\n  const createJournal = async () => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        journalNameField: fullJournal.jName,\r\n        journalDescField: fullJournal.jDesc,\r\n        journalRoomType: fullJournal.roomType,\r\n        journalWaterType: fullJournal.waterType,\r\n        journalVegLight: fullJournal.vegLight,\r\n        journalFlowLight: fullJournal.flowLight,\r\n        journalGrowMedium: fullJournal.growMedium,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:4000/createJournal\", requestOptions)\r\n      .then((response) => response.json())\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Grid container style={{ border: \"0px solid\" }} alignItems=\"center\">\r\n        <Grid item style={{ width: \"80%\" }}>\r\n          <CardHeader\r\n            title=\"New Journal\"\r\n            subheader=\"\"\r\n            titleTypographyProps={{\r\n              variant: \"h6\",\r\n              width: \"100%\",\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item style={{ width: \"20%\" }}>\r\n          <CardActions disableSpacing>\r\n            <IconButton\r\n              className={clsx(classes.expand, {\r\n                [classes.expandOpen]: expanded,\r\n              })}\r\n              onClick={handleExpandClick}\r\n              aria-expanded={expanded}\r\n              aria-label=\"show more\"\r\n              size=\"small\"\r\n            >\r\n              <ExpandMoreIcon />\r\n            </IconButton>\r\n          </CardActions>\r\n        </Grid>\r\n      </Grid>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent style={{ border: \"0px solid\", padding: \"0\" }}>\r\n          <Grid container direction=\"column\" style={{ width: \"100%\" }}>\r\n            <Grid item style={{ width: \"100%\" }}>\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Journal Name\"\r\n                onChange={updateJournal}\r\n                name=\"jName\"\r\n                value={fullJournal.jName}\r\n                fullWidth\r\n                className={classes.journalInput}\r\n                margin=\"dense\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n              <FormControl\r\n                className={classes.formControl}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <InputLabel id=\"demo-simple-select-label\">Room Type</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"roomType\"\r\n                  onChange={updateJournal}\r\n                  value={fullJournal.roomType}\r\n                >\r\n                  <MenuItem value={\"Indoor\"}>Indoor</MenuItem>\r\n                  <MenuItem value={\"Outdoor\"}>Outdoor</MenuItem>\r\n                  <MenuItem value={\"Greenhouse\"}>Greenhouse</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n              <FormControl\r\n                className={classes.formControl}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Watering Type\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"waterType\"\r\n                  onChange={updateJournal}\r\n                  value={fullJournal.waterType}\r\n                >\r\n                  <MenuItem value={\"Manual\"}>Manual</MenuItem>\r\n                  <MenuItem value={\"Drip\"}>Drip</MenuItem>\r\n                  <MenuItem value={\"Hydroponic\"}>Hydroponic</MenuItem>\r\n                  <MenuItem value={\"Aeroponic\"}>Aeroponic</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n              <FormControl\r\n                className={classes.formControl}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Veg. Light\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"vegLight\"\r\n                  onChange={updateJournal}\r\n                  value={fullJournal.vegLight}\r\n                >\r\n                  <MenuItem value={\"LED\"}>LED</MenuItem>\r\n                  <MenuItem value={\"HPS\"}>HPS</MenuItem>\r\n                  <MenuItem value={\"HID\"}>HID</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n              <FormControl\r\n                className={classes.formControl}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Flower. Light\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"flowLight\"\r\n                  onChange={updateJournal}\r\n                  value={fullJournal.flowLight}\r\n                >\r\n                  <MenuItem value={\"LED\"}>LED</MenuItem>\r\n                  <MenuItem value={\"HPS\"}>HPS</MenuItem>\r\n                  <MenuItem value={\"HID\"}>HID</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n              <FormControl\r\n                className={classes.formControl}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Grow Medium\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"growMedium\"\r\n                  onChange={updateJournal}\r\n                  value={fullJournal.growMedium}\r\n                >\r\n                  <MenuItem value={\"Soil\"}>Soil</MenuItem>\r\n                  <MenuItem value={\"Perlite\"}>Perlite</MenuItem>\r\n                  <MenuItem value={\"Vermiculite\"}>Vermiculite</MenuItem>\r\n                  <MenuItem value={\"Expanded Clay\"}>Expanded Clay</MenuItem>\r\n                  <MenuItem value={\"Coco Coir\"}>Coco Coir</MenuItem>\r\n                  <MenuItem value={\"Mineral Wood\"}>Mineral Wood</MenuItem>\r\n                  <MenuItem value={\"Other\"}>Other</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <br />\r\n            <Grid item style={{ width: \"100%\" }}>\r\n              <Typography className={classes.journalDescTitle}>\r\n                Journal Description\r\n              </Typography>\r\n              <TextField\r\n                InputProps={{ disableUnderline: true }}\r\n                value={fullJournal.jDesc}\r\n                className={classes.journalDesc}\r\n                multiline\r\n                fullWidth\r\n                rows={4}\r\n                name=\"jDesc\"\r\n                id=\"message\"\r\n                onChange={updateJournal}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              direction=\"row\"\r\n              className={classes.submitGrid}\r\n              justifyContent=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.journalButton}\r\n                  onClick={createJournal}\r\n                >\r\n                  Create\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  className={classes.journalButton}\r\n                  onClick={cancelNewJournal}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\currentJournals.js",["159","160","161","162","163"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport { Paper, Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"3em\",\r\n    border: \"1px solid\",\r\n  },\r\n  CheckButton: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    top: \"calc(50% - 20px) !important\",\r\n    transition: \"40ms\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      opacity: \"0.6 !important\",\r\n    },\r\n    height: \"25px\",\r\n    width: \"100%\",\r\n  },\r\n  paperStyle: {\r\n    backgroundColor: \"#d6ffb5\",\r\n    // border: \"1px solid\",\r\n    marginTop: \"0.5em\",\r\n  },\r\n  buttonGrid: {\r\n    width: \"50%\",\r\n  },\r\n}));\r\n\r\nfunction Item(props) {\r\n  console.log(props);\r\n  return (\r\n    <Paper className={props.classes.paperStyle}>\r\n      <Grid container direction=\"column\">\r\n        <Grid item>\r\n          <h2>{props.item.name}</h2>\r\n        </Grid>\r\n        <Grid item>\r\n          <p>{props.item.description}</p>\r\n        </Grid>\r\n        <Grid item container justifyContent=\"center\">\r\n          <Grid item className={props.classes.buttonGrid}>\r\n            <Button className={props.classes.CheckButton}>Select</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default function CurrentJournals(props) {\r\n  const classes = useStyles();\r\n\r\n  const test = [\r\n    {\r\n      name: \"Random Name #1\",\r\n      description: \"Hello World!\",\r\n    },\r\n    {\r\n      name: \"Random Name #2\",\r\n      description: \"Hello, Hello?\",\r\n    },\r\n    {\r\n      name: \"Random Name #3\",\r\n      description: \"Hello World!?\",\r\n    },\r\n  ];\r\n\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [fullJournal, setFullJournal] = useState({\r\n    jName: \"\",\r\n    jDesc: \"\",\r\n    roomType: \"\",\r\n    waterType: \"\",\r\n    vegLight: \"\",\r\n    flowLight: \"\",\r\n    growMedium: \"\",\r\n  });\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div>\r\n      <Carousel\r\n        next={(next, active) => console.log(``)}\r\n        prev={(prev, active) => console.log(``)}\r\n      >\r\n        {test.map((item, i) => (\r\n          <Item key={i} item={item} classes={classes} />\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\galleryChipGroup.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.selector.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.actions.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\signin.component.js",["164","165"],"import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  setCurrentUser,\r\n  setSignInState,\r\n  setSignUpState,\r\n} from \"../../redux/user/user.actions\";\r\n\r\nvar md5 = require(\"md5\");\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Journal\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(15),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    border: \"0px solid\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [newUser, setNewUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [cookies, setCookies] = useCookies();\r\n  // const [returnUser, setReturnUser] = useState(null);\r\n\r\n  const updateUser = (event) => {\r\n    setNewUser({ ...newUser, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const loginUser = async () => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        userEmailField: newUser.email,\r\n        userPasswordField: md5(newUser.password),\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:4000/loginUser\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => dispatch(setCurrentUser(data.users)))\r\n      .then(() => dispatch(setSignInState(false)))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const signUpRedirect = () => {\r\n    dispatch(setSignInState(false));\r\n    dispatch(setSignUpState(true));\r\n  };\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" style={{border: \"solid 0px\"}}>\r\n      <Grid item>\r\n        <Container component=\"main\" maxWidth=\"xs\" >\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign In\r\n            </Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={updateUser}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={updateUser}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={loginUser}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\" onClick={signUpRedirect}>\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <Box mt={8}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\signup.component.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.reducer.jsx",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.types.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\calanderEntry.js",["166","167"],"import React, { useEffect } from \"react\";\r\n// import { useState } from \"react\";\r\n// import clsx from \"clsx\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appointGrid: {\r\n    width: \"100%\",\r\n  },\r\n  entryGrid: { marginTop: \"0.5em\" },\r\n  deleteEntryGrid: { width: \"10%\" },\r\n  timeEntryGrid: { width: \"60%\" },\r\n  dateEntryGrid: { width: \"30%\" },\r\n  titleTyp: { marginRight: \"0.5em\" },\r\n  dateTyp: { marginRight: \"0.5em\" },\r\n  paperStyle: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    marginBottom: \"0.5em\",\r\n  },\r\n}));\r\n\r\nconst time = \"17:00 | 18:00\";\r\nconst date = \"1 JAN | 2021\";\r\n\r\nexport default function CalanderEntry(props) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\">\r\n      <Grid item className={classes.appointGrid}>\r\n        <Paper variant=\"outlined\" className={classes.paperStyle}>\r\n          <Grid container>\r\n            <Grid item container justifyContent=\"flex-end\">\r\n              <Typography variant=\"h6\" className={classes.titleTyp}>\r\n                {props.title}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"body2\">{props.body}</Typography>\r\n            </Grid>\r\n            <Grid item container className={classes.entryGrid}>\r\n              <Grid\r\n                item\r\n                container\r\n                className={classes.deleteEntryGrid}\r\n                justifyContent=\"center\"\r\n              >\r\n                <DeleteIcon />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                className={classes.timeEntryGrid}\r\n                justifyContent=\"flex-end\"\r\n              >\r\n                <Typography variant=\"body2\">{props.time}</Typography>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                className={classes.dateEntryGrid}\r\n                justifyContent=\"flex-end\"\r\n              >\r\n                <Typography variant=\"body2\" className={classes.dateTyp}>\r\n                  {props.date}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n",{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":16},{"ruleId":"172","severity":1,"message":"176","line":22,"column":9,"nodeType":"174","messageId":"175","endLine":22,"endColumn":21},{"ruleId":"172","severity":1,"message":"173","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":16},{"ruleId":"172","severity":1,"message":"177","line":10,"column":10,"nodeType":"174","messageId":"175","endLine":10,"endColumn":20},{"ruleId":"172","severity":1,"message":"176","line":43,"column":9,"nodeType":"174","messageId":"175","endLine":43,"endColumn":21},{"ruleId":"178","severity":1,"message":"179","line":57,"column":42,"nodeType":"180","messageId":"181","endLine":57,"endColumn":43},{"ruleId":"172","severity":1,"message":"173","line":5,"column":8,"nodeType":"174","messageId":"175","endLine":5,"endColumn":16},{"ruleId":"172","severity":1,"message":"176","line":81,"column":9,"nodeType":"174","messageId":"175","endLine":81,"endColumn":21},{"ruleId":"172","severity":1,"message":"173","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":16},{"ruleId":"172","severity":1,"message":"176","line":23,"column":9,"nodeType":"174","messageId":"175","endLine":23,"endColumn":21},{"ruleId":"172","severity":1,"message":"182","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":12},{"ruleId":"172","severity":1,"message":"183","line":10,"column":8,"nodeType":"174","messageId":"175","endLine":10,"endColumn":14},{"ruleId":"172","severity":1,"message":"184","line":12,"column":8,"nodeType":"174","messageId":"175","endLine":12,"endColumn":19},{"ruleId":"172","severity":1,"message":"185","line":16,"column":8,"nodeType":"174","messageId":"175","endLine":16,"endColumn":16},{"ruleId":"172","severity":1,"message":"186","line":17,"column":8,"nodeType":"174","messageId":"175","endLine":17,"endColumn":22},{"ruleId":"172","severity":1,"message":"187","line":18,"column":8,"nodeType":"174","messageId":"175","endLine":18,"endColumn":19},{"ruleId":"172","severity":1,"message":"188","line":20,"column":8,"nodeType":"174","messageId":"175","endLine":20,"endColumn":18},{"ruleId":"172","severity":1,"message":"189","line":21,"column":8,"nodeType":"174","messageId":"175","endLine":21,"endColumn":18},{"ruleId":"172","severity":1,"message":"190","line":23,"column":8,"nodeType":"174","messageId":"175","endLine":23,"endColumn":16},{"ruleId":"172","severity":1,"message":"191","line":25,"column":8,"nodeType":"174","messageId":"175","endLine":25,"endColumn":14},{"ruleId":"172","severity":1,"message":"192","line":26,"column":8,"nodeType":"174","messageId":"175","endLine":26,"endColumn":17},{"ruleId":"172","severity":1,"message":"173","line":31,"column":8,"nodeType":"174","messageId":"175","endLine":31,"endColumn":16},{"ruleId":"172","severity":1,"message":"176","line":94,"column":9,"nodeType":"174","messageId":"175","endLine":94,"endColumn":21},{"ruleId":"172","severity":1,"message":"193","line":98,"column":23,"nodeType":"174","messageId":"175","endLine":98,"endColumn":37},{"ruleId":"172","severity":1,"message":"194","line":108,"column":9,"nodeType":"174","messageId":"175","endLine":108,"endColumn":26},{"ruleId":"195","severity":1,"message":"196","line":225,"column":6,"nodeType":"197","endLine":225,"endColumn":8,"suggestions":"198"},{"ruleId":"172","severity":1,"message":"173","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":16},{"ruleId":"172","severity":1,"message":"177","line":11,"column":10,"nodeType":"174","messageId":"175","endLine":11,"endColumn":20},{"ruleId":"172","severity":1,"message":"199","line":12,"column":8,"nodeType":"174","messageId":"175","endLine":12,"endColumn":16},{"ruleId":"172","severity":1,"message":"176","line":101,"column":9,"nodeType":"174","messageId":"175","endLine":101,"endColumn":21},{"ruleId":"172","severity":1,"message":"182","line":18,"column":8,"nodeType":"174","messageId":"175","endLine":18,"endColumn":12},{"ruleId":"172","severity":1,"message":"200","line":28,"column":8,"nodeType":"174","messageId":"175","endLine":28,"endColumn":12},{"ruleId":"172","severity":1,"message":"201","line":31,"column":8,"nodeType":"174","messageId":"175","endLine":31,"endColumn":20},{"ruleId":"172","severity":1,"message":"202","line":40,"column":8,"nodeType":"174","messageId":"175","endLine":40,"endColumn":23},{"ruleId":"172","severity":1,"message":"203","line":41,"column":8,"nodeType":"174","messageId":"175","endLine":41,"endColumn":24},{"ruleId":"172","severity":1,"message":"204","line":43,"column":8,"nodeType":"174","messageId":"175","endLine":43,"endColumn":16},{"ruleId":"172","severity":1,"message":"205","line":176,"column":9,"nodeType":"174","messageId":"175","endLine":176,"endColumn":14},{"ruleId":"172","severity":1,"message":"206","line":181,"column":10,"nodeType":"174","messageId":"175","endLine":181,"endColumn":17},{"ruleId":"172","severity":1,"message":"207","line":181,"column":19,"nodeType":"174","messageId":"175","endLine":181,"endColumn":29},{"ruleId":"172","severity":1,"message":"208","line":189,"column":9,"nodeType":"174","messageId":"175","endLine":189,"endColumn":25},{"ruleId":"172","severity":1,"message":"209","line":193,"column":9,"nodeType":"174","messageId":"175","endLine":193,"endColumn":26},{"ruleId":"172","severity":1,"message":"210","line":46,"column":9,"nodeType":"174","messageId":"175","endLine":46,"endColumn":13},{"ruleId":"172","severity":1,"message":"211","line":7,"column":16,"nodeType":"174","messageId":"175","endLine":7,"endColumn":23},{"ruleId":"172","severity":1,"message":"212","line":6,"column":10,"nodeType":"174","messageId":"175","endLine":6,"endColumn":14},{"ruleId":"172","severity":1,"message":"213","line":75,"column":10,"nodeType":"174","messageId":"175","endLine":75,"endColumn":18},{"ruleId":"172","severity":1,"message":"214","line":75,"column":20,"nodeType":"174","messageId":"175","endLine":75,"endColumn":31},{"ruleId":"172","severity":1,"message":"215","line":76,"column":10,"nodeType":"174","messageId":"175","endLine":76,"endColumn":21},{"ruleId":"172","severity":1,"message":"193","line":76,"column":23,"nodeType":"174","messageId":"175","endLine":76,"endColumn":37},{"ruleId":"172","severity":1,"message":"206","line":68,"column":10,"nodeType":"174","messageId":"175","endLine":68,"endColumn":17},{"ruleId":"172","severity":1,"message":"207","line":68,"column":19,"nodeType":"174","messageId":"175","endLine":68,"endColumn":29},{"ruleId":"172","severity":1,"message":"216","line":27,"column":7,"nodeType":"174","messageId":"175","endLine":27,"endColumn":11},{"ruleId":"172","severity":1,"message":"217","line":28,"column":7,"nodeType":"174","messageId":"175","endLine":28,"endColumn":11},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'Unsigned' is defined but never used.","Identifier","unusedVar","'userLoggedIn' is assigned a value but never used.","'Typography' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'clsx' is defined but never used.","'Button' is defined but never used.","'CardActions' is defined but never used.","'Collapse' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'FormControl' is defined but never used.","'IconButton' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'TextField' is defined but never used.","'setFullJournal' is assigned a value but never used.","'handleExpandClick' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getJournals'. Either include it or remove the dependency array.","ArrayExpression",["220"],"'Skeleton' is defined but never used.","'List' is defined but never used.","'ListItemText' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'MenuIcon' is defined but never used.","'theme' is assigned a value but never used.","'cookies' is assigned a value but never used.","'setCookies' is assigned a value but never used.","'handleDrawerOpen' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.","'bull' is assigned a value but never used.","'Divider' is defined but never used.","'Card' is defined but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'fullJournal' is assigned a value but never used.","'time' is assigned a value but never used.","'date' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},"Update the dependencies array to be: [getJournals]",{"range":"223","text":"224"},[7759,7761],"[getJournals]"]