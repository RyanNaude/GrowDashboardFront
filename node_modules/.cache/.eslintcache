[{"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\index.js":"1","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\store.js":"2","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\App.js":"3","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\root-reducer.js":"4","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\envSettings.js":"5","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\calander.js":"6","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\enviroment.js":"7","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\costManagement.js":"8","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\home.js":"9","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\gallery.js":"10","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\Header.js":"11","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\theme.js":"12","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\unsigned.js":"13","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\calenderMonth.js":"14","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\costOfElec.js":"15","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\newJournal.js":"16","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\currentJournals.js":"17","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\galleryChipGroup.js":"18","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.selector.js":"19","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.actions.js":"20","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\signin.component.js":"21","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\signup.component.js":"22","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.reducer.jsx":"23","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.types.js":"24","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\calanderEntry.js":"25","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.reducer.jsx":"26","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.types.js":"27","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.selector.js":"28","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.actions.js":"29","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\weatherSummary.js":"30","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\weather.js":"31","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\todayWeather.js":"32"},{"size":391,"mtime":1634275833273,"results":"33","hashOfConfig":"34"},{"size":270,"mtime":1634275833273,"results":"35","hashOfConfig":"34"},{"size":1835,"mtime":1634275833273,"results":"36","hashOfConfig":"34"},{"size":240,"mtime":1634275833273,"results":"37","hashOfConfig":"34"},{"size":1229,"mtime":1634275833273,"results":"38","hashOfConfig":"34"},{"size":2254,"mtime":1634275833273,"results":"39","hashOfConfig":"34"},{"size":3054,"mtime":1634305750975,"results":"40","hashOfConfig":"34"},{"size":1222,"mtime":1634275833273,"results":"41","hashOfConfig":"34"},{"size":8013,"mtime":1634300001359,"results":"42","hashOfConfig":"34"},{"size":3914,"mtime":1634275833273,"results":"43","hashOfConfig":"34"},{"size":9938,"mtime":1634275833273,"results":"44","hashOfConfig":"34"},{"size":445,"mtime":1634275833273,"results":"45","hashOfConfig":"34"},{"size":860,"mtime":1634275833273,"results":"46","hashOfConfig":"34"},{"size":3098,"mtime":1634275833273,"results":"47","hashOfConfig":"34"},{"size":2725,"mtime":1634275833273,"results":"48","hashOfConfig":"34"},{"size":11273,"mtime":1634275833273,"results":"49","hashOfConfig":"34"},{"size":4446,"mtime":1634275833273,"results":"50","hashOfConfig":"34"},{"size":1679,"mtime":1634275833273,"results":"51","hashOfConfig":"34"},{"size":492,"mtime":1634275833273,"results":"52","hashOfConfig":"34"},{"size":399,"mtime":1634275833273,"results":"53","hashOfConfig":"34"},{"size":5053,"mtime":1634275833273,"results":"54","hashOfConfig":"34"},{"size":5481,"mtime":1634299703558,"results":"55","hashOfConfig":"34"},{"size":748,"mtime":1634275833273,"results":"56","hashOfConfig":"34"},{"size":167,"mtime":1634275833273,"results":"57","hashOfConfig":"34"},{"size":2505,"mtime":1634275833273,"results":"58","hashOfConfig":"34"},{"size":812,"mtime":1634275833273,"results":"59","hashOfConfig":"34"},{"size":217,"mtime":1634275833273,"results":"60","hashOfConfig":"34"},{"size":717,"mtime":1634275833273,"results":"61","hashOfConfig":"34"},{"size":552,"mtime":1634275833273,"results":"62","hashOfConfig":"34"},{"size":3324,"mtime":1634303729469,"results":"63","hashOfConfig":"34"},{"size":3159,"mtime":1634306549790,"results":"64","hashOfConfig":"34"},{"size":2999,"mtime":1634305733250,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1qa6l67",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\index.js",[],["141","142"],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\store.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\App.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\root-reducer.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\envSettings.js",["143","144"],"import React from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n//Component Import\r\nimport Unsigned from \"./ui/unsigned\";\r\n\r\n//Redux imports\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectCurrentUser } from \"../redux/user/user.selector\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginLeft: \"5em\",\r\n    width: \"95%\",\r\n  },\r\n  mainPageSub: {\r\n    border: \"1px solid black\",\r\n  },\r\n}));\r\n\r\nexport default function EnviromentSettings(props) {\r\n  const classes = useStyles();\r\n  //Get Global State\r\n  const userLoggedIn = useSelector(selectCurrentUser);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      className={classes.mainPageStyle}\r\n      style={{\r\n        marginLeft: \"0.5em\",\r\n        marginRight: \"0.5em\",\r\n        marginTop: \"6em\",\r\n      }}\r\n    >\r\n      {/* {userLoggedIn ? ( */}\r\n      <Grid item>\r\n        <Typography variant=\"h5\">App Settings</Typography>\r\n      </Grid>\r\n      {/* ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )} */}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\calander.js",["145","146"],"import React from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n//Component Import\r\nimport Unsigned from \"./ui/unsigned\";\r\nimport CalanderMonth from \"./ui/calenderMonth\";\r\nimport CalanderEntry from \"./ui/calanderEntry\";\r\n\r\n//Redux imports\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectCurrentUser } from \"../redux/user/user.selector\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6.5em\",\r\n  },\r\n  mainPageSub: {\r\n    border: \"1px solid black\",\r\n  },\r\n}));\r\n\r\nconst titleArray = [\"Diam\", \"Arcu\", \"Purus\", \"Lectus\"];\r\nconst timeArray = [\r\n  \"17:00 | 18:00\",\r\n  \"13:00 | 15:00\",\r\n  \"08:00 | 13:00\",\r\n  \"11:00 | 17:00\",\r\n];\r\nconst dateArray = [\r\n  \"1 JAN | 2021\",\r\n  \"4 JAN | 2021\",\r\n  \"13 JAN | 2021\",\r\n  \"22 JAN | 2021\",\r\n];\r\nconst bodyArray = [\r\n  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\r\n  \"Pretium fusce id velit ut tortor pretium. Mauris rhoncus aenean vel elit. Penatibus et magnis dis parturient montes nascetur ridiculus mus.\",\r\n  \"Quam pellentesque nec nam aliquam sem. Pellentesque elit ullamcorper dignissim cras tincidunt.\",\r\n  \"Sed risus ultricies tristique nulla aliquet enim tortor at. Etiam tempor orci eu lobortis elementum nibh.\",\r\n];\r\n\r\nexport default function Calander(props) {\r\n  const classes = useStyles();\r\n  //Get Global State\r\n  const userLoggedIn = useSelector(selectCurrentUser);\r\n\r\n  return (\r\n    <Grid container direction=\"column\" className={classes.mainPageStyle}>\r\n      {/* {userLoggedIn ? ( */}\r\n      {/* <Grid item>\r\n        <Typography variant=\"h5\">Calander</Typography>\r\n      </Grid> */}\r\n      <Grid item>\r\n        <CalanderMonth />\r\n      </Grid>\r\n      <Grid item style={{ marginTop: \"0.5em\" }}>\r\n        {timeArray.map((time, index) => (\r\n          <CalanderEntry\r\n            time={time}\r\n            date={dateArray[index]}\r\n            title={titleArray[index]}\r\n            body={bodyArray[index]}\r\n          />\r\n        ))}\r\n      </Grid>\r\n      {/* ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )} */}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\enviroment.js",["147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170"],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\costManagement.js",["171","172"],"import React from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n//Component Import\r\nimport CostOFElec from \"./ui/costOfElec\";\r\nimport Unsigned from \"./ui/unsigned\";\r\n\r\n//Redux imports\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectCurrentUser } from \"../redux/user/user.selector\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6em\",\r\n  },\r\n  mainPageSub: {\r\n  },\r\n}));\r\n\r\nexport default function CostManagement(props) {\r\n  const classes = useStyles();\r\n  //Get Global State\r\n  const userLoggedIn = useSelector(selectCurrentUser);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      className={classes.mainPageStyle}\r\n      style={{}}\r\n    >\r\n      {/* {userLoggedIn ? ( */}\r\n      <Grid item>\r\n        <Typography variant=\"h5\">Cost Management</Typography>\r\n      </Grid>\r\n      <Grid item className={classes.mainPageSub}>\r\n        <CostOFElec />\r\n      </Grid>\r\n      {/* ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )} */}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\home.js",["173","174","175","176","177","178"],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\gallery.js",["179","180","181","182"],"import React from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport GalleryChipGroup from \"./ui/galleryChipGroup\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ImageList from \"@material-ui/core/ImageList\";\r\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport Unsigned from \"./ui/unsigned\";\r\n\r\n//Redux imports\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectCurrentUser } from \"../redux/user/user.selector\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6em\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  imageList: {\r\n    width: 340,\r\n    height: 450,\r\n  },\r\n  chipGroup: {\r\n    borderRadius: \"25px\",\r\n    border: \"3px solid\",\r\n    marginTop: \"0.5em\",\r\n    marginBottom: \"0.5em\",\r\n    borderColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst itemData = [\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1551963831-b3b1ca40c98e\",\r\n    title: \"Breakfast\",\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1551782450-a2132b4ba21d\",\r\n    title: \"Burger\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1522770179533-24471fcdba45\",\r\n    title: \"Camera\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1444418776041-9c7e33cc5a9c\",\r\n    title: \"Coffee\",\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1533827432537-70133748f5c8\",\r\n    title: \"Hats\",\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1558642452-9d2a7deb7f62\",\r\n    title: \"Honey\",\r\n    author: \"@arwinneil\",\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1516802273409-68526ee1bdd6\",\r\n    title: \"Basketball\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1518756131217-31eb79b20e8f\",\r\n    title: \"Fern\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1597645587822-e99fa5d45d25\",\r\n    title: \"Mushrooms\",\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1567306301408-9b74779a11af\",\r\n    title: \"Tomato basil\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1471357674240-e1a485acb3e1\",\r\n    title: \"Sea star\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1589118949245-7d38baf380d6\",\r\n    title: \"Bike\",\r\n    cols: 2,\r\n  },\r\n];\r\n\r\nexport default function Gallery(props) {\r\n  const classes = useStyles();\r\n  //Get Global State\r\n  const userLoggedIn = useSelector(selectCurrentUser);\r\n\r\n  return (\r\n    <Grid container direction=\"column\" className={classes.mainPageStyle}>\r\n      {/* {userLoggedIn ? ( */}\r\n      <Grid item container direction=\"column\">\r\n        {/* <Grid item>\r\n          <Typography variant=\"h5\">Gallery</Typography>\r\n        </Grid> */}\r\n        <Grid item className={classes.chipGroup}>\r\n          <GalleryChipGroup />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>\r\n        <ImageList sx={{ width: \"100%\", height: 450 }} cols={3} rowHeight={164}>\r\n          {itemData.map((item) => (\r\n            <ImageListItem key={item.img}>\r\n              <img\r\n                src={`${item.img}?w=164&h=164&fit=crop&auto=format`}\r\n                srcSet={`${item.img}?w=164&h=164&fit=crop&auto=format&dpr=2 2x`}\r\n                alt={item.title}\r\n                loading=\"lazy\"\r\n                style={{ width: \"168px\", height: \"164px\" }}\r\n              />\r\n              {/* <Skeleton variant=\"rect\" width={\"168px\"} height={\"164px\"} /> */}\r\n            </ImageListItem>\r\n          ))}\r\n        </ImageList>\r\n      </Grid>\r\n      {/* ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )} */}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\Header.js",["183","184","185","186","187"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Custom Components\r\nimport SignUp from \"./signup.component\";\r\nimport SignIn from \"./signin.component\";\r\n\r\n//Material UI Components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\n\r\n//Import Icons\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\nimport BubbleChartIcon from \"@material-ui/icons/BubbleChart\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PhotoLibraryIcon from \"@material-ui/icons/PhotoLibrary\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\n//Redux imports\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  selectCurrentUser,\r\n  selectSignInState,\r\n  selectSignUpState,\r\n} from \"../../redux/user/user.selector\";\r\nimport {\r\n  setCurrentUser,\r\n  setSignInState,\r\n  setSignUpState,\r\n} from \"../../redux/user/user.actions\";\r\n\r\nconst drawerWidth = 240;\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n  },\r\n  listItemStyle: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  iconBar: {\r\n    backgroundColor: \"#b0fa73\",\r\n  },\r\n  listItemIcon: { display: \"flex\", justifyContent: \"center\" },\r\n  iconItem: {\r\n    align: \"center\",\r\n  },\r\n  title: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.secondary,\r\n  },\r\n  loginButGrid: {\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  toolbarMargin: {\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  iconStyle: {\r\n    color: \"primary\",\r\n  },\r\n  signUpBut: {\r\n    fontSize: \"8pt\",\r\n  },\r\n  signOutBut: {\r\n    fontSize: \"8pt\",\r\n  },\r\n  loginBut: {\r\n    fontSize: \"8pt\",\r\n  },\r\n}));\r\n\r\n//Appbar elevation scroll, Make heaser look integrated.\r\nfunction ElevationScroll(props) {\r\n  const { children } = props;\r\n\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n\r\n  //Setup Local State\r\n  const [value, setValue] = useState(0);\r\n  const [currentLoggedIn, setCurrentLoggedIn] = useState(\"default\");\r\n  const [cookies, setCookies] = useCookies();\r\n\r\n  //Get Global State\r\n  const userLoggedIn = useSelector(selectCurrentUser);\r\n  const signInCur = useSelector(selectSignInState);\r\n  const signUpCur = useSelector(selectSignUpState);\r\n\r\n  const handleDrawerOpen = () => {\r\n    props.setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  const changeSignUpState = () => {\r\n    dispatch(setSignUpState(!signUpCur));\r\n    dispatch(setSignInState(false));\r\n  };\r\n\r\n  const changeSignInState = () => {\r\n    dispatch(setSignInState(!signInCur));\r\n    dispatch(setSignUpState(false));\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    dispatch(setCurrentUser(null));\r\n    dispatch(setSignInState(false));\r\n    dispatch(setSignUpState(false));\r\n  };\r\n\r\n  const userPageSelect = (index) => {\r\n    setValue(index);\r\n    dispatch(setSignInState(false));\r\n    dispatch(setSignUpState(false));\r\n  };\r\n\r\n  const menu = [\r\n    \"Home\",\r\n    \"Env. Breakdown\",\r\n    \"Calander\",\r\n    \"Photo Library\",\r\n    \"Cost Management\",\r\n    \"Env. Settings\",\r\n  ];\r\n\r\n  const links = [\r\n    \"/\",\r\n    \"/enviroment\",\r\n    \"/calander\",\r\n    \"/gallery\",\r\n    \"/costmanagement\",\r\n    \"/enviromentsettings\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (window.location.pathname === \"/\" && value !== 0) {\r\n      setValue(0);\r\n    } else if (window.location.pathname === \"/enviroment\" && value !== 1) {\r\n      setValue(1);\r\n    } else if (window.location.pathname === \"/calander\" && value !== 2) {\r\n      setValue(2);\r\n    } else if (window.location.pathname === \"/gallery\" && value !== 3) {\r\n      setValue(3);\r\n    } else if (window.location.pathname === \"/costmanagement\" && value !== 4) {\r\n      setValue(4);\r\n    } else if (\r\n      window.location.pathname === \"/enviromentsettings\" &&\r\n      value !== 5\r\n    ) {\r\n      setValue(5);\r\n    }\r\n  }, [value]);\r\n\r\n  return (\r\n    <div>\r\n      <ElevationScroll>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            <Grid container direction=\"row\">\r\n              <Grid item style={{ width: \"50%\" }}>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  className={classes.title}\r\n                  component={Link}\r\n                  to={\"/\"}\r\n                >\r\n                  Dashboard Inc.\r\n                </Typography>\r\n              </Grid>\r\n              {userLoggedIn === null ? (\r\n                <Grid\r\n                  item\r\n                  container\r\n                  style={{ width: \"50%\" }}\r\n                  justifyContent=\"flex-end\"\r\n                >\r\n                  <Grid item>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      onClick={changeSignInState}\r\n                      style={{ marginRight: \"0em\" }}\r\n                      className={classes.loginBut}\r\n                    >\r\n                      Sign In\r\n                    </Button>\r\n                    <Button\r\n                      onClick={changeSignUpState}\r\n                      color=\"secondary\"\r\n                      className={classes.signUpBut}\r\n                    >\r\n                      Sign Up\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              ) : (\r\n                <Grid\r\n                  item\r\n                  container\r\n                  style={{ width: \"50%\" }}\r\n                  justifyContent=\"flex-end\"\r\n                >\r\n                  <Grid item>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      onClick={logoutUser}\r\n                      className={classes.signOutBut}\r\n                    >\r\n                      Sign Out\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </Toolbar>\r\n          <div>\r\n            <Grid container className={classes.iconBar}>\r\n              {/* <Grid item container direction=\"row\" justifyContent=\"center\"> */}\r\n              {menu.map((text, index) => (\r\n                <Grid item xs={2}>\r\n                  <ListItem\r\n                    button\r\n                    key={text}\r\n                    component={Link}\r\n                    to={links[index]}\r\n                    onClick={userPageSelect}\r\n                    selected={index === value ? true : false}\r\n                    className={classes.listItemStyle}\r\n                  >\r\n                    <ListItemIcon className={classes.listItemIcon}>\r\n                      {index === 0 ? (\r\n                        <HomeIcon color=\"primary\" />\r\n                      ) : index === 1 ? (\r\n                        <BubbleChartIcon color=\"primary\" />\r\n                      ) : index === 2 ? (\r\n                        <CalendarTodayIcon color=\"primary\" />\r\n                      ) : index === 3 ? (\r\n                        <PhotoLibraryIcon color=\"primary\" />\r\n                      ) : index === 4 ? (\r\n                        <AttachMoneyIcon color=\"primary\" />\r\n                      ) : index === 5 ? (\r\n                        <SettingsIcon color=\"primary\" />\r\n                      ) : null}\r\n                    </ListItemIcon>\r\n                    {/* <ListItemText primary={text} /> */}\r\n                  </ListItem>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n            {/* </Grid> */}\r\n          </div>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n\r\n      {signUpCur ? <SignUp /> : null}\r\n      {signInCur ? (\r\n        <SignIn\r\n          currentLoggedIn={currentLoggedIn}\r\n          setCurrentLoggedIn={setCurrentLoggedIn}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\theme.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\unsigned.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\calenderMonth.js",["188"],"import React, { useEffect } from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  arrowBack: { marginRight: \"10px\" },\r\n  arrowForward: { marginLeft: \"10px\" },\r\n  yearDisplay: { fontWeight: \"medium\" },\r\n  root: {},\r\n  title: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n  calanderDay: {\r\n    width: \"13%\",\r\n    margin: \"2px\",\r\n    border: \"0px solid\",\r\n  },\r\n  monthGrid: {\r\n    marginTop: \"0.5em\",\r\n  },\r\n  calanderGrid: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    paddingBottom: \"0.5em\",\r\n    paddingRight: \"0.5em\",\r\n    paddingLeft: \"0.5em\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  dayPaper: {\r\n    backgroundColor: theme.palette.secondary.Light,\r\n  },\r\n}));\r\n\r\n//Test Data\r\nconst month = \"January\";\r\nconst year = \"2021\";\r\n\r\nexport default function CalanderMonth(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  //Test Data\r\n  const testMonth = [\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\r\n    22, 23, 24, 25, 26, 27, 28, 29, 30,\r\n  ];\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" className={classes.calanderGrid}>\r\n      <Grid item container justifyContent=\"flex-end\" alignItems=\"center\">\r\n        <Grid item>\r\n          <ArrowBackIosIcon className={classes.arrowBack} />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"flex-end\"\r\n          style={{ width: \"50%\" }}\r\n        >\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{month}</Typography>{\" \"}\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography style={{ marginLeft: \"5px\", marginRight: \"5px\" }}>\r\n              |\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography className={classes.yearDisplay}>{year}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <ArrowForwardIosIcon className={classes.arrowForward} />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item container justifyContent=\"center\">\r\n        <Grid item container position=\"flex\" className={classes.monthGrid}>\r\n          {testMonth.map((data) => (\r\n            <Grid item className={classes.calanderDay}>\r\n              <Paper variant=\"outlined\" className={classes.dayPaper}>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  {data}\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\costOfElec.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\newJournal.js",["189","190"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n//Redux imports\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { displayNewJournal } from \"../../redux/siteNav/siteNav.actions\";\r\nimport { selectDispNewJournal } from \"../../redux/siteNav/siteNav.selector\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6em\",\r\n    width: \"100%\",\r\n    border: \"0px solid\",\r\n  },\r\n  journalInput: {\r\n    color: \"red\",\r\n    margin: \"0\",\r\n  },\r\n  mainPageSub: {\r\n    border: \"0px solid black\",\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#ebffdb\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"36.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {},\r\n  journalDescTitle: {\r\n    paddingBottom: \"0.5em\",\r\n    color: \"#000\",\r\n    opacity: \"0.65\",\r\n  },\r\n  journalDesc: {\r\n    width: \"95%\",\r\n    border: `0px solid ${theme.palette.common.blue}`,\r\n    borderRadius: 5,\r\n    backgroundColor: theme.palette.secondary.light,\r\n    paddingLeft: \"3px\",\r\n    paddingRight: \"3px\",\r\n  },\r\n  journalButton: {\r\n    margin: \"1em\",\r\n  },\r\n  submitGrid: {},\r\n  curJournals: { marginTop: \"1em\", width: \"100%\" },\r\n  curJournalsSpace: {\r\n    width: \"100%\",\r\n  },\r\n  curJournalsSpace80: {\r\n    width: \"80%\",\r\n    marginLeft: \"4em\",\r\n  },\r\n  curJournalSubheader: {\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nexport default function NewJournal(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  //Get Global State\r\n  const dispNewJournal = useSelector(selectDispNewJournal);\r\n\r\n  //Setup Local State\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [fullJournal, setFullJournal] = useState({\r\n    jName: \"\",\r\n    jDesc: \"\",\r\n    roomType: \"\",\r\n    waterType: \"\",\r\n    vegLight: \"\",\r\n    flowLight: \"\",\r\n    growMedium: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    // getJournals();\r\n  }, []);\r\n\r\n  //Updating journals\r\n  const updateJournal = (event) => {\r\n    setFullJournal({ ...fullJournal, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const cancelNewJournal = () => {\r\n    setExpanded(false);\r\n\r\n    console.log(\"togNewJournalDisplay\");\r\n    dispatch(displayNewJournal(!dispNewJournal));\r\n  };\r\n\r\n  //Journal Data Processing\r\n  //Requesting -  Create new journal on backend\r\n  const createJournal = async () => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        journalNameField: fullJournal.jName,\r\n        journalDescField: fullJournal.jDesc,\r\n        journalRoomType: fullJournal.roomType,\r\n        journalWaterType: fullJournal.waterType,\r\n        journalVegLight: fullJournal.vegLight,\r\n        journalFlowLight: fullJournal.flowLight,\r\n        journalGrowMedium: fullJournal.growMedium,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:4000/createJournal\", requestOptions)\r\n      .then((response) => response.json())\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {/* <Grid container style={{ border: \"0px solid\" }} alignItems=\"center\">\r\n        <Grid item style={{ width: \"80%\" }}>\r\n          <CardHeader\r\n            title=\"New Journal\"\r\n            subheader=\"\"\r\n            titleTypographyProps={{\r\n              variant: \"h6\",\r\n              width: \"100%\",\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item style={{ width: \"20%\" }}>\r\n        </Grid>\r\n      </Grid> */}\r\n      {/* <Collapse in={\"true\"} timeout=\"auto\" unmountOnExit style={{border: \"1px solid\"}}> */}\r\n      <CardContent style={{ border: \"0px solid\", padding: \"0\" }}>\r\n        <Grid container direction=\"column\" style={{ width: \"100%\" }}>\r\n          <Grid item style={{ width: \"100%\" }}>\r\n            <TextField\r\n              required\r\n              id=\"standard-required\"\r\n              label=\"New Journal Name\"\r\n              onChange={updateJournal}\r\n              name=\"jName\"\r\n              value={fullJournal.jName}\r\n              fullWidth\r\n              className={classes.journalInput}\r\n              margin=\"dense\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-label\">Room Type</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{ width: \"100%\" }}\r\n                name=\"roomType\"\r\n                onChange={updateJournal}\r\n                value={fullJournal.roomType}\r\n              >\r\n                <MenuItem value={\"Indoor\"}>Indoor</MenuItem>\r\n                <MenuItem value={\"Outdoor\"}>Outdoor</MenuItem>\r\n                <MenuItem value={\"Greenhouse\"}>Greenhouse</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Watering Type\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{ width: \"100%\" }}\r\n                name=\"waterType\"\r\n                onChange={updateJournal}\r\n                value={fullJournal.waterType}\r\n              >\r\n                <MenuItem value={\"Manual\"}>Manual</MenuItem>\r\n                <MenuItem value={\"Drip\"}>Drip</MenuItem>\r\n                <MenuItem value={\"Hydroponic\"}>Hydroponic</MenuItem>\r\n                <MenuItem value={\"Aeroponic\"}>Aeroponic</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-label\">Veg. Light</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{ width: \"100%\" }}\r\n                name=\"vegLight\"\r\n                onChange={updateJournal}\r\n                value={fullJournal.vegLight}\r\n              >\r\n                <MenuItem value={\"LED\"}>LED</MenuItem>\r\n                <MenuItem value={\"HPS\"}>HPS</MenuItem>\r\n                <MenuItem value={\"HID\"}>HID</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Flower. Light\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{ width: \"100%\" }}\r\n                name=\"flowLight\"\r\n                onChange={updateJournal}\r\n                value={fullJournal.flowLight}\r\n              >\r\n                <MenuItem value={\"LED\"}>LED</MenuItem>\r\n                <MenuItem value={\"HPS\"}>HPS</MenuItem>\r\n                <MenuItem value={\"HID\"}>HID</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-label\">Grow Medium</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{ width: \"100%\" }}\r\n                name=\"growMedium\"\r\n                onChange={updateJournal}\r\n                value={fullJournal.growMedium}\r\n              >\r\n                <MenuItem value={\"Soil\"}>Soil</MenuItem>\r\n                <MenuItem value={\"Perlite\"}>Perlite</MenuItem>\r\n                <MenuItem value={\"Vermiculite\"}>Vermiculite</MenuItem>\r\n                <MenuItem value={\"Expanded Clay\"}>Expanded Clay</MenuItem>\r\n                <MenuItem value={\"Coco Coir\"}>Coco Coir</MenuItem>\r\n                <MenuItem value={\"Mineral Wood\"}>Mineral Wood</MenuItem>\r\n                <MenuItem value={\"Other\"}>Other</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <br />\r\n          <Grid item style={{ width: \"100%\" }}>\r\n            <Typography className={classes.journalDescTitle}>\r\n              Journal Description\r\n            </Typography>\r\n            <Grid item container justifyContent=\"center\">\r\n              <TextField\r\n                InputProps={{ disableUnderline: true }}\r\n                value={fullJournal.jDesc}\r\n                className={classes.journalDesc}\r\n                multiline\r\n                fullWidth\r\n                rows={3}\r\n                name=\"jDesc\"\r\n                id=\"message\"\r\n                onChange={updateJournal}\r\n                placeholder=\"Short description of journal...\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            className={classes.submitGrid}\r\n            justifyContent=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.journalButton}\r\n                onClick={createJournal}\r\n              >\r\n                Create\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.journalButton}\r\n                onClick={cancelNewJournal}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      {/* </Collapse> */}\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\currentJournals.js",["191","192","193","194"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//Redux imports\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { displayNewJournal } from \"../../redux/siteNav/siteNav.actions\";\r\nimport { selectDispNewJournal } from \"../../redux/siteNav/siteNav.selector\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"3em\",\r\n    border: \"1px solid\",\r\n  },\r\n  CheckButton: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    top: \"calc(50% - 20px) !important\",\r\n    transition: \"40ms\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      opacity: \"0.6 !important\",\r\n    },\r\n    height: \"25px\",\r\n    width: \"100%\",\r\n  },\r\n  paperStyle: {\r\n    backgroundColor: \"#d6ffb5\",\r\n    marginTop: \"0.5em\",\r\n    height: \"200px\",\r\n  },\r\n  journalTitle: {\r\n    width: \"90%\",\r\n  },\r\n  journalAddIcon: {\r\n    width: \"10%\",\r\n  },\r\n  journalIcon: {\r\n    marginRight: \"3px\",\r\n    marginTop: \"3px\",\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  journalDesc: {\r\n    paddingLeft: \"0.5em\",\r\n    height: \"100px\",\r\n    // border: \"1px solid\",\r\n  },\r\n}));\r\n\r\nexport default function CurrentJournals(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  //Get Global State\r\n  const dispNewJournal = useSelector(selectDispNewJournal);\r\n\r\n  //Test Data\r\n  const test = [\r\n    {\r\n      name: \"Tempus\",\r\n      description:\r\n        \"Et sollicitudin ac orci phasellus egestas tellus rutrum tellus. Quam pellentesque nec nam aliquam sem. Nunc pulvinar sapien et ligula ullamcorper.\",\r\n    },\r\n    {\r\n      name: \"Pellentesque\",\r\n      description:\r\n        \"Enim tortor at auctor urna nunc. Placerat duis ultricies lacus sed turpis tincidunt id.\",\r\n    },\r\n    {\r\n      name: \"Pharetra\",\r\n      description:\r\n        \"Facilisis leo vel fringilla est ullamcorper. Ut consequat semper viverra nam libero justo laoreet. Ut sem nulla pharetra diam sit amet nisl. Semper eget duis at tellus at urna condimentum mattis pellentesque.\",\r\n    },\r\n  ];\r\n\r\n  //Setup Local State\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [fullJournal, setFullJournal] = useState({\r\n    jName: \"\",\r\n    jDesc: \"\",\r\n    roomType: \"\",\r\n    waterType: \"\",\r\n    vegLight: \"\",\r\n    flowLight: \"\",\r\n    growMedium: \"\",\r\n  });\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const togNewJournalDisplay = () => {\r\n    console.log(\"togNewJournalDisplay\");\r\n    dispatch(displayNewJournal(!dispNewJournal));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Carousel next={(next, active) => {}} prev={(prev, active) => {}}>\r\n        {test.map((item, i) => (\r\n          <Paper className={classes.paperStyle}>\r\n            <Grid container direction=\"column\">\r\n              <Grid item container alignItems=\"flex-start\">\r\n                <Grid\r\n                  item\r\n                  className={classes.journalTitle}\r\n                  style={{ paddingLeft: \"0.5em\" }}\r\n                  alignItems=\"flex-start\"\r\n                >\r\n                  <h2>{item.name}</h2>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  className={classes.journalAddIcon}\r\n                  justifyContent=\"flex-end\"\r\n                >\r\n                  <AddCircleOutlineIcon\r\n                    className={classes.journalIcon}\r\n                    style={{ zIndex: 1 }}\r\n                    onClick={() => togNewJournalDisplay()}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item className={classes.journalDesc}>\r\n                <p>{item.description}</p>\r\n              </Grid>\r\n              <Grid item container justifyContent=\"center\">\r\n                <Grid item className={classes.buttonGrid}>\r\n                  <Button\r\n                    className={classes.CheckButton}\r\n                    onClick={() => console.log(\"But Clicked\")}\r\n                  >\r\n                    Select\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\galleryChipGroup.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.selector.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.actions.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\signin.component.js",["195","196"],"import React, { useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n//Redux imports\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  setCurrentUser,\r\n  setSignInState,\r\n  setSignUpState,\r\n} from \"../../redux/user/user.actions\";\r\n\r\nvar md5 = require(\"md5\");\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Journal\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(15),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    border: \"0px solid\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  //Setup Local State\r\n  const [newUser, setNewUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [cookies, setCookies] = useCookies();\r\n  // const [returnUser, setReturnUser] = useState(null);\r\n\r\n  const updateUser = (event) => {\r\n    setNewUser({ ...newUser, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const loginUser = async () => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        userEmailField: newUser.email,\r\n        userPasswordField: md5(newUser.password),\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:4000/loginUser\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => dispatch(setCurrentUser(data.users)))\r\n      .then(() => dispatch(setSignInState(false)))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const signUpRedirect = () => {\r\n    dispatch(setSignInState(false));\r\n    dispatch(setSignUpState(true));\r\n  };\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" style={{ border: \"solid 0px\" }}>\r\n      <Grid item>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign In\r\n            </Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={updateUser}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={updateUser}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={loginUser}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\" onClick={signUpRedirect}>\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <Box mt={8}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\signup.component.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.reducer.jsx",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\user\\user.types.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\calanderEntry.js",["197","198"],"import React, { useEffect } from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  appointGrid: {\r\n    width: \"100%\",\r\n  },\r\n  entryGrid: { marginTop: \"0.5em\" },\r\n  deleteEntryGrid: { width: \"10%\" },\r\n  timeEntryGrid: { width: \"60%\" },\r\n  dateEntryGrid: { width: \"30%\" },\r\n  titleTyp: { marginRight: \"0.5em\" },\r\n  dateTyp: { marginRight: \"0.5em\" },\r\n  paperStyle: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    marginBottom: \"0.5em\",\r\n  },\r\n}));\r\n\r\n//Test Data\r\nconst time = \"17:00 | 18:00\";\r\nconst date = \"1 JAN | 2021\";\r\n\r\nexport default function CalanderEntry(props) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\">\r\n      <Grid item className={classes.appointGrid}>\r\n        <Paper variant=\"outlined\" className={classes.paperStyle}>\r\n          <Grid container>\r\n            <Grid item container justifyContent=\"flex-end\">\r\n              <Typography variant=\"h6\" className={classes.titleTyp}>\r\n                {props.title}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"body2\">{props.body}</Typography>\r\n            </Grid>\r\n            <Grid item container className={classes.entryGrid}>\r\n              <Grid\r\n                item\r\n                container\r\n                className={classes.deleteEntryGrid}\r\n                justifyContent=\"center\"\r\n              >\r\n                <DeleteIcon />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                className={classes.timeEntryGrid}\r\n                justifyContent=\"flex-end\"\r\n              >\r\n                <Typography variant=\"body2\">{props.time}</Typography>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                className={classes.dateEntryGrid}\r\n                justifyContent=\"flex-end\"\r\n              >\r\n                <Typography variant=\"body2\" className={classes.dateTyp}>\r\n                  {props.date}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.reducer.jsx",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.types.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.selector.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.actions.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\weatherSummary.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\weather.js",[],"C:\\Users\\Ryan.Naude\\Documents\\VSCode\\GrowDashboardFront\\src\\components\\ui\\todayWeather.js",["199","200","201","202","203"],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":8,"column":8,"nodeType":"210","messageId":"211","endLine":8,"endColumn":16},{"ruleId":"208","severity":1,"message":"212","line":29,"column":9,"nodeType":"210","messageId":"211","endLine":29,"endColumn":21},{"ruleId":"208","severity":1,"message":"209","line":8,"column":8,"nodeType":"210","messageId":"211","endLine":8,"endColumn":16},{"ruleId":"208","severity":1,"message":"212","line":49,"column":9,"nodeType":"210","messageId":"211","endLine":49,"endColumn":21},{"ruleId":"208","severity":1,"message":"213","line":2,"column":8,"nodeType":"210","messageId":"211","endLine":2,"endColumn":12},{"ruleId":"208","severity":1,"message":"214","line":8,"column":8,"nodeType":"210","messageId":"211","endLine":8,"endColumn":14},{"ruleId":"208","severity":1,"message":"215","line":9,"column":8,"nodeType":"210","messageId":"211","endLine":9,"endColumn":12},{"ruleId":"208","severity":1,"message":"216","line":10,"column":8,"nodeType":"210","messageId":"211","endLine":10,"endColumn":19},{"ruleId":"208","severity":1,"message":"217","line":11,"column":8,"nodeType":"210","messageId":"211","endLine":11,"endColumn":19},{"ruleId":"208","severity":1,"message":"218","line":12,"column":8,"nodeType":"210","messageId":"211","endLine":12,"endColumn":18},{"ruleId":"208","severity":1,"message":"219","line":13,"column":8,"nodeType":"210","messageId":"211","endLine":13,"endColumn":17},{"ruleId":"208","severity":1,"message":"220","line":14,"column":8,"nodeType":"210","messageId":"211","endLine":14,"endColumn":16},{"ruleId":"208","severity":1,"message":"221","line":15,"column":8,"nodeType":"210","messageId":"211","endLine":15,"endColumn":22},{"ruleId":"208","severity":1,"message":"222","line":16,"column":8,"nodeType":"210","messageId":"211","endLine":16,"endColumn":19},{"ruleId":"208","severity":1,"message":"223","line":18,"column":8,"nodeType":"210","messageId":"211","endLine":18,"endColumn":18},{"ruleId":"208","severity":1,"message":"224","line":19,"column":8,"nodeType":"210","messageId":"211","endLine":19,"endColumn":18},{"ruleId":"208","severity":1,"message":"225","line":20,"column":8,"nodeType":"210","messageId":"211","endLine":20,"endColumn":16},{"ruleId":"208","severity":1,"message":"226","line":21,"column":8,"nodeType":"210","messageId":"211","endLine":21,"endColumn":14},{"ruleId":"208","severity":1,"message":"227","line":22,"column":8,"nodeType":"210","messageId":"211","endLine":22,"endColumn":17},{"ruleId":"208","severity":1,"message":"228","line":23,"column":8,"nodeType":"210","messageId":"211","endLine":23,"endColumn":18},{"ruleId":"208","severity":1,"message":"229","line":26,"column":8,"nodeType":"210","messageId":"211","endLine":26,"endColumn":20},{"ruleId":"208","severity":1,"message":"209","line":27,"column":8,"nodeType":"210","messageId":"211","endLine":27,"endColumn":16},{"ruleId":"208","severity":1,"message":"230","line":84,"column":10,"nodeType":"210","messageId":"211","endLine":84,"endColumn":21},{"ruleId":"208","severity":1,"message":"231","line":84,"column":23,"nodeType":"210","messageId":"211","endLine":84,"endColumn":37},{"ruleId":"208","severity":1,"message":"232","line":85,"column":10,"nodeType":"210","messageId":"211","endLine":85,"endColumn":21},{"ruleId":"208","severity":1,"message":"233","line":85,"column":23,"nodeType":"210","messageId":"211","endLine":85,"endColumn":37},{"ruleId":"208","severity":1,"message":"212","line":89,"column":9,"nodeType":"210","messageId":"211","endLine":89,"endColumn":21},{"ruleId":"208","severity":1,"message":"234","line":91,"column":9,"nodeType":"210","messageId":"211","endLine":91,"endColumn":26},{"ruleId":"208","severity":1,"message":"209","line":11,"column":8,"nodeType":"210","messageId":"211","endLine":11,"endColumn":16},{"ruleId":"208","severity":1,"message":"212","line":29,"column":9,"nodeType":"210","messageId":"211","endLine":29,"endColumn":21},{"ruleId":"208","severity":1,"message":"209","line":15,"column":8,"nodeType":"210","messageId":"211","endLine":15,"endColumn":16},{"ruleId":"208","severity":1,"message":"212","line":80,"column":9,"nodeType":"210","messageId":"211","endLine":80,"endColumn":21},{"ruleId":"208","severity":1,"message":"235","line":84,"column":10,"nodeType":"210","messageId":"211","endLine":84,"endColumn":24},{"ruleId":"208","severity":1,"message":"236","line":85,"column":23,"nodeType":"210","messageId":"211","endLine":85,"endColumn":37},{"ruleId":"208","severity":1,"message":"234","line":99,"column":9,"nodeType":"210","messageId":"211","endLine":99,"endColumn":26},{"ruleId":"237","severity":1,"message":"238","line":216,"column":6,"nodeType":"239","endLine":216,"endColumn":8,"suggestions":"240"},{"ruleId":"208","severity":1,"message":"228","line":5,"column":10,"nodeType":"210","messageId":"211","endLine":5,"endColumn":20},{"ruleId":"208","severity":1,"message":"241","line":11,"column":8,"nodeType":"210","messageId":"211","endLine":11,"endColumn":16},{"ruleId":"208","severity":1,"message":"209","line":12,"column":8,"nodeType":"210","messageId":"211","endLine":12,"endColumn":16},{"ruleId":"208","severity":1,"message":"212","line":107,"column":9,"nodeType":"210","messageId":"211","endLine":107,"endColumn":21},{"ruleId":"208","severity":1,"message":"242","line":155,"column":9,"nodeType":"210","messageId":"211","endLine":155,"endColumn":14},{"ruleId":"208","severity":1,"message":"243","line":161,"column":10,"nodeType":"210","messageId":"211","endLine":161,"endColumn":17},{"ruleId":"208","severity":1,"message":"244","line":161,"column":19,"nodeType":"210","messageId":"211","endLine":161,"endColumn":29},{"ruleId":"208","severity":1,"message":"245","line":168,"column":9,"nodeType":"210","messageId":"211","endLine":168,"endColumn":25},{"ruleId":"208","severity":1,"message":"246","line":172,"column":9,"nodeType":"210","messageId":"211","endLine":172,"endColumn":26},{"ruleId":"208","severity":1,"message":"247","line":48,"column":9,"nodeType":"210","messageId":"211","endLine":48,"endColumn":13},{"ruleId":"208","severity":1,"message":"213","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":12},{"ruleId":"208","severity":1,"message":"234","line":114,"column":9,"nodeType":"210","messageId":"211","endLine":114,"endColumn":26},{"ruleId":"208","severity":1,"message":"248","line":83,"column":10,"nodeType":"210","messageId":"211","endLine":83,"endColumn":18},{"ruleId":"208","severity":1,"message":"249","line":83,"column":20,"nodeType":"210","messageId":"211","endLine":83,"endColumn":31},{"ruleId":"208","severity":1,"message":"250","line":84,"column":10,"nodeType":"210","messageId":"211","endLine":84,"endColumn":21},{"ruleId":"208","severity":1,"message":"236","line":84,"column":23,"nodeType":"210","messageId":"211","endLine":84,"endColumn":37},{"ruleId":"208","severity":1,"message":"243","line":74,"column":10,"nodeType":"210","messageId":"211","endLine":74,"endColumn":17},{"ruleId":"208","severity":1,"message":"244","line":74,"column":19,"nodeType":"210","messageId":"211","endLine":74,"endColumn":29},{"ruleId":"208","severity":1,"message":"251","line":29,"column":7,"nodeType":"210","messageId":"211","endLine":29,"endColumn":11},{"ruleId":"208","severity":1,"message":"252","line":30,"column":7,"nodeType":"210","messageId":"211","endLine":30,"endColumn":11},{"ruleId":"208","severity":1,"message":"253","line":7,"column":8,"nodeType":"210","messageId":"211","endLine":7,"endColumn":13},{"ruleId":"208","severity":1,"message":"254","line":8,"column":8,"nodeType":"210","messageId":"211","endLine":8,"endColumn":17},{"ruleId":"208","severity":1,"message":"255","line":9,"column":8,"nodeType":"210","messageId":"211","endLine":9,"endColumn":15},{"ruleId":"208","severity":1,"message":"228","line":10,"column":10,"nodeType":"210","messageId":"211","endLine":10,"endColumn":20},{"ruleId":"208","severity":1,"message":"256","line":36,"column":9,"nodeType":"210","messageId":"211","endLine":36,"endColumn":17},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"no-unused-vars","'Unsigned' is defined but never used.","Identifier","unusedVar","'userLoggedIn' is assigned a value but never used.","'clsx' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'Collapse' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'FormControl' is defined but never used.","'IconButton' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'TextField' is defined but never used.","'Typography' is defined but never used.","'defaultGreen' is defined but never used.","'journalName' is assigned a value but never used.","'setJournalName' is assigned a value but never used.","'journalDesc' is assigned a value but never used.","'setJournalDesc' is assigned a value but never used.","'handleExpandClick' is assigned a value but never used.","'activeJournals' is assigned a value but never used.","'setFullJournal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getJournals'. Either include it or remove the dependency array.","ArrayExpression",["259"],"'Skeleton' is defined but never used.","'theme' is assigned a value but never used.","'cookies' is assigned a value but never used.","'setCookies' is assigned a value but never used.","'handleDrawerOpen' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.","'bull' is assigned a value but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'fullJournal' is assigned a value but never used.","'time' is assigned a value but never used.","'date' is assigned a value but never used.","'Paper' is defined but never used.","'CloudIcon' is defined but never used.","'Divider' is defined but never used.","'summTemp' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"260","fix":"261"},"Update the dependencies array to be: [getJournals]",{"range":"262","text":"263"},[7400,7402],"[getJournals]"]