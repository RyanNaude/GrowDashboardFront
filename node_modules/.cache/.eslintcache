[{"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\index.js":"1","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\store.js":"2","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\App.js":"3","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\root-reducer.js":"4","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\envSettings.js":"5","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\enviroment.js":"6","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\calander.js":"7","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\costManagement.js":"8","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\gallery.js":"9","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\home.js":"10","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\theme.js":"11","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\Header.js":"12","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\unsigned.js":"13","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\calanderEntry.js":"14","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\calenderMonth.js":"15","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\weather.js":"16","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\todayWeather.js":"17","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\costOfElec.js":"18","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\galleryChipGroup.js":"19","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\currentJournals.js":"20","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\newJournal.js":"21","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.selector.js":"22","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.selector.js":"23","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.actions.js":"24","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\signup.component.js":"25","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\signin.component.js":"26","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.reducer.jsx":"27","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.reducer.jsx":"28","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\weatherSummary.js":"29","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.actions.js":"30","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.types.js":"31","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.types.js":"32"},{"size":391,"mtime":1634668191185,"results":"33","hashOfConfig":"34"},{"size":270,"mtime":1634668191185,"results":"35","hashOfConfig":"34"},{"size":1835,"mtime":1634668191153,"results":"36","hashOfConfig":"34"},{"size":240,"mtime":1634668191185,"results":"37","hashOfConfig":"34"},{"size":1299,"mtime":1634668191153,"results":"38","hashOfConfig":"34"},{"size":3120,"mtime":1634668191153,"results":"39","hashOfConfig":"34"},{"size":2265,"mtime":1634668191153,"results":"40","hashOfConfig":"34"},{"size":1273,"mtime":1634668191153,"results":"41","hashOfConfig":"34"},{"size":4057,"mtime":1634668191169,"results":"42","hashOfConfig":"34"},{"size":2991,"mtime":1634842021882,"results":"43","hashOfConfig":"34"},{"size":445,"mtime":1634668191169,"results":"44","hashOfConfig":"34"},{"size":9761,"mtime":1634668191169,"results":"45","hashOfConfig":"34"},{"size":860,"mtime":1634668191169,"results":"46","hashOfConfig":"34"},{"size":2429,"mtime":1634668191169,"results":"47","hashOfConfig":"34"},{"size":3056,"mtime":1634668191169,"results":"48","hashOfConfig":"34"},{"size":3181,"mtime":1634668191169,"results":"49","hashOfConfig":"34"},{"size":6762,"mtime":1634670886958,"results":"50","hashOfConfig":"34"},{"size":2728,"mtime":1634668191169,"results":"51","hashOfConfig":"34"},{"size":1679,"mtime":1634668191169,"results":"52","hashOfConfig":"34"},{"size":5385,"mtime":1634671854264,"results":"53","hashOfConfig":"34"},{"size":13193,"mtime":1634668191169,"results":"54","hashOfConfig":"34"},{"size":638,"mtime":1634668191185,"results":"55","hashOfConfig":"34"},{"size":717,"mtime":1634668191185,"results":"56","hashOfConfig":"34"},{"size":521,"mtime":1634668191185,"results":"57","hashOfConfig":"34"},{"size":5481,"mtime":1634668191169,"results":"58","hashOfConfig":"34"},{"size":5245,"mtime":1634668191169,"results":"59","hashOfConfig":"34"},{"size":812,"mtime":1634668191185,"results":"60","hashOfConfig":"34"},{"size":919,"mtime":1634668191185,"results":"61","hashOfConfig":"34"},{"size":9556,"mtime":1635194578361,"results":"62","hashOfConfig":"34"},{"size":552,"mtime":1634668191185,"results":"63","hashOfConfig":"34"},{"size":206,"mtime":1634668191185,"results":"64","hashOfConfig":"34"},{"size":217,"mtime":1634668191185,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"lmgnhx",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\index.js",[],["137","138"],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\store.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\App.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\root-reducer.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\envSettings.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\enviroment.js",["139","140"],"import React, { useState } from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\n// import Button from \"@material-ui/core/Button\";\r\n// import Card from \"@material-ui/core/Card\";\r\n// import CardActions from \"@material-ui/core/CardActions\";\r\n// import CardContent from \"@material-ui/core/CardContent\";\r\n// import CardHeader from \"@material-ui/core/CardHeader\";\r\n// import CardMedia from \"@material-ui/core/CardMedia\";\r\n// import Collapse from \"@material-ui/core/Collapse\";\r\n// import ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n// import FormControl from \"@material-ui/core/FormControl\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n// import IconButton from \"@material-ui/core/IconButton\";\r\n// import InputLabel from \"@material-ui/core/InputLabel\";\r\n// import MenuItem from \"@material-ui/core/MenuItem\";\r\n// import Select from \"@material-ui/core/Select\";\r\n// import TextField from \"@material-ui/core/TextField\";\r\n// import Typography from \"@material-ui/core/Typography\";\r\n\r\n//Component Import\r\nimport Unsigned from \"./ui/unsigned\";\r\nimport Weather from \"./ui/weather\";\r\nimport TodayWeather from \"./ui/todayWeather\";\r\n\r\n//Redux imports\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectCurrentUser,\r\n  selectTokenState,\r\n} from \"../redux/user/user.selector\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6.5em\",\r\n  },\r\n  mainPageSub: {\r\n    border: \"1px solid black\",\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#ebffdb\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"36.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  journalDescTitle: {\r\n    marginTop: \"1.5em\",\r\n  },\r\n  journalDesc: {\r\n    border: `2px solid ${theme.palette.common.blue}`,\r\n    borderRadius: 5,\r\n  },\r\n  journalButton: {\r\n    margin: \"1em\",\r\n  },\r\n  submitGrid: {\r\n    marginTop: \"1.5em\",\r\n  },\r\n}));\r\n\r\nexport default function Enviroment(props) {\r\n  const classes = useStyles();\r\n\r\n  //Setup Local State\r\n  // const [expanded, setExpanded] = useState(false);\r\n  // const [journalName, setJournalName] = useState(\"\");\r\n  // const [journalDesc, setJournalDesc] = useState(\"\");\r\n  // const [activeJournals, setActiveJournals] = useState([]);\r\n\r\n  //Get Global State\r\n  const userLoggedIn = useSelector(selectCurrentUser);\r\n  const tokenState = useSelector(selectTokenState);\r\n\r\n  return (\r\n    <Grid container direction=\"column\" className={classes.mainPageStyle}>\r\n      {tokenState ? (\r\n        <Grid item>\r\n          <Weather />\r\n          <TodayWeather />\r\n          <Weather />\r\n          <Weather />\r\n          <Weather />\r\n          <Weather />\r\n        </Grid>\r\n      ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\calander.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\costManagement.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\gallery.js",["141"],"import React from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport GalleryChipGroup from \"./ui/galleryChipGroup\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ImageList from \"@material-ui/core/ImageList\";\r\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\r\nimport Unsigned from \"./ui/unsigned\";\r\n\r\n//Redux imports\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectCurrentUser,\r\n  selectTokenState,\r\n} from \"../redux/user/user.selector\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6em\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  imageList: {\r\n    width: 340,\r\n    height: 450,\r\n  },\r\n  chipGroup: {\r\n    borderRadius: \"25px\",\r\n    border: \"3px solid\",\r\n    marginTop: \"0.5em\",\r\n    marginBottom: \"0.5em\",\r\n    borderColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst itemData = [\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1551963831-b3b1ca40c98e\",\r\n    title: \"Breakfast\",\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1551782450-a2132b4ba21d\",\r\n    title: \"Burger\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1522770179533-24471fcdba45\",\r\n    title: \"Camera\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1444418776041-9c7e33cc5a9c\",\r\n    title: \"Coffee\",\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1533827432537-70133748f5c8\",\r\n    title: \"Hats\",\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1558642452-9d2a7deb7f62\",\r\n    title: \"Honey\",\r\n    author: \"@arwinneil\",\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1516802273409-68526ee1bdd6\",\r\n    title: \"Basketball\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1518756131217-31eb79b20e8f\",\r\n    title: \"Fern\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1597645587822-e99fa5d45d25\",\r\n    title: \"Mushrooms\",\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1567306301408-9b74779a11af\",\r\n    title: \"Tomato basil\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1471357674240-e1a485acb3e1\",\r\n    title: \"Sea star\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1589118949245-7d38baf380d6\",\r\n    title: \"Bike\",\r\n    cols: 2,\r\n  },\r\n];\r\n\r\nexport default function Gallery(props) {\r\n  const classes = useStyles();\r\n  //Get Global State\r\n  const userLoggedIn = useSelector(selectCurrentUser);\r\n  const tokenState = useSelector(selectTokenState);\r\n\r\n  return (\r\n    <Grid container direction=\"column\" className={classes.mainPageStyle}>\r\n      {tokenState ? (\r\n        <Grid item container direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">Gallery</Typography>\r\n          </Grid>\r\n          <Grid item className={classes.chipGroup}>\r\n            <GalleryChipGroup />\r\n          </Grid>\r\n          <Grid item>\r\n            <ImageList\r\n              sx={{ width: \"100%\", height: 450 }}\r\n              cols={3}\r\n              rowHeight={164}\r\n            >\r\n              {itemData.map((item, index) => (\r\n                <ImageListItem key={index}>\r\n                  <img\r\n                    src={`${item.img}?w=164&h=164&fit=crop&auto=format`}\r\n                    srcSet={`${item.img}?w=164&h=164&fit=crop&auto=format&dpr=2 2x`}\r\n                    alt={item.title}\r\n                    loading=\"lazy\"\r\n                    style={{ width: \"168px\", height: \"164px\" }}\r\n                  />\r\n                  {/* <Skeleton variant=\"rect\" width={\"168px\"} height={\"164px\"} /> */}\r\n                </ImageListItem>\r\n              ))}\r\n            </ImageList>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\home.js",["142","143","144","145","146"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n//Material UI Components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\n//Redux imports\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectTokenState } from \"../redux/user/user.selector\";\r\nimport { selectDispNewJournal } from \"../redux/siteNav/siteNav.selector\";\r\n\r\n//Component import\r\nimport Unsigned from \"./ui/unsigned\";\r\nimport NewJournal from \"./ui/newJournal\";\r\nimport CurrentJournals from \"./ui/currentJournals\";\r\nimport WeatherSummary from \"./ui/weatherSummary\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6em\",\r\n    width: \"100%\",\r\n    border: \"0px solid\",\r\n  },\r\n  mainPageSub: {\r\n    border: \"0px solid black\",\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#ebffdb\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"36.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  journalDescTitle: {\r\n    // marginTop: \"1.5em\",\r\n  },\r\n  journalDesc: {\r\n    border: `0px solid ${theme.palette.common.blue}`,\r\n    borderRadius: 5,\r\n  },\r\n  journalButton: {\r\n    margin: \"1em\",\r\n  },\r\n  submitGrid: {\r\n    marginTop: \"1.5em\",\r\n  },\r\n  curJournals: { marginTop: \"1em\", width: \"100%\" },\r\n  curJournalsSpace: {\r\n    width: \"100%\",\r\n  },\r\n  curJournalsSpace80: {\r\n    width: \"80%\",\r\n    marginLeft: \"4em\",\r\n  },\r\n  curJournalSubheader: {\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nexport default function Home(props) {\r\n  const classes = useStyles();\r\n  //Get Global State\r\n  const tokenState = useSelector(selectTokenState);\r\n\r\n  //Setup Local State\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [fullJournal, setFullJournal] = useState({\r\n    jName: \"\",\r\n    jDesc: \"\",\r\n    roomType: \"\",\r\n    waterType: \"\",\r\n    vegLight: \"\",\r\n    flowLight: \"\",\r\n    growMedium: \"\",\r\n  });\r\n\r\n  //Get Global State\r\n  const dispNewJournal = useSelector(selectDispNewJournal);\r\n\r\n  //useEffect - Getting journals loaded on database\r\n  useEffect(() => {\r\n    // getJournals();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container direction=\"row\" className={classes.mainPageStyle}>\r\n      {tokenState ? (\r\n        <Grid item container style={{ border: \"0px solid\" }}>\r\n          <Grid item style={{ border: \"0px solid\", width: \"100%\" }}>\r\n            {/* {dispNewJournal ? null : <CurrentJournals />} */}\r\n            {dispNewJournal ? <NewJournal /> : null}\r\n            {dispNewJournal ? null : <WeatherSummary />}\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\theme.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\Header.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\unsigned.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\calanderEntry.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\calenderMonth.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\weather.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\todayWeather.js",["147"],"import React, { useEffect } from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginBottom: \"0.5em\",\r\n  },\r\n}));\r\n\r\nexport default function TodayWeather(props) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  //Test data\r\n  const summTemp = [\r\n    {\r\n      maxTemp: \"25\",\r\n      minTemp: \"16\",\r\n      icon: \"Icon\",\r\n      weekDay: \"Mon\",\r\n      date: \"01 | JAN\",\r\n    },\r\n    {\r\n      maxTemp: \"26\",\r\n      minTemp: \"17\",\r\n      icon: \"Icon\",\r\n      weekDay: \"Tue\",\r\n      date: \"02 | JAN\",\r\n    },\r\n    {\r\n      maxTemp: \"28\",\r\n      minTemp: \"16\",\r\n      icon: \"Icon\",\r\n      weekDay: \"Wed\",\r\n      date: \"03 | JAN\",\r\n    },\r\n    {\r\n      maxTemp: \"28\",\r\n      minTemp: \"17\",\r\n      icon: \"Icon\",\r\n      weekDay: \"Thu\",\r\n      date: \"04 | JAN\",\r\n    },\r\n    {\r\n      maxTemp: \"26\",\r\n      minTemp: \"15\",\r\n      icon: \"Icon\",\r\n      weekDay: \"Fri\",\r\n      date: \"05 | JAN\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Grid container className={classes.mainPageStyle} direction=\"column\">\r\n      <Grid item container style={{ border: \"1px solid\" }} direction=\"row\">\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"column\"\r\n          style={{ border: \"1px solid\", width: \"50%\" }}\r\n        >\r\n          <Grid item>Wed 16 | Day</Grid>\r\n          <Grid item container direction=\"row\">\r\n            <Grid item style={{ border: \"1px solid\", width: \"15%\" }}>\r\n              25\r\n            </Grid>\r\n            <Grid item style={{ border: \"1px solid\", width: \"15%\" }}>\r\n              PIC\r\n            </Grid>\r\n            <Grid item container style={{ border: \"1px solid\", width: \"70%\" }}>\r\n              <Grid item>Rain Perc%</Grid>\r\n              <Grid item>Wind Dir/Km</Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body2\">\r\n              Excepteur sint occaecat cupidatat non proident, sunt in culpa.\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container style={{ border: \"1px solid\", width: \"50%\" }}>\r\n          {/* <Grid item container direction=\"row\" style={{ border: \"1px solid\" }}>\r\n            <Grid item style={{ width: \"10%\" }}>\r\n              I\r\n            </Grid>\r\n            <Grid item style={{ width: \"40%\" }}>\r\n              Rec H\r\n            </Grid>\r\n            <Grid item style={{ width: \"10%\" }}>\r\n              I\r\n            </Grid>\r\n            <Grid item style={{ width: \"40%\" }}>\r\n              Ave H\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container style={{ border: \"1px solid\" }}>\r\n            <Grid item style={{ width: \"10%\" }}></Grid>\r\n            <Grid item style={{ width: \"40%\" }}>\r\n              9\r\n            </Grid>\r\n            <Grid item style={{ width: \"10%\" }}></Grid>\r\n            <Grid item style={{ width: \"40%\" }}>\r\n              15\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container style={{ border: \"1px solid\" }}>\r\n            <Grid item style={{ width: \"10%\" }}>\r\n              I\r\n            </Grid>\r\n            <Grid item style={{ width: \"40%\" }}>\r\n              Sunrise\r\n            </Grid>\r\n            <Grid item style={{ width: \"10%\" }}>\r\n              I\r\n            </Grid>\r\n            <Grid item style={{ width: \"40%\" }}>\r\n              Sunset\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container style={{ border: \"1px solid\" }}>\r\n            <Grid item style={{ width: \"10%\" }}></Grid>\r\n            <Grid item style={{ width: \"40%\" }}>\r\n              4:34 am\r\n            </Grid>\r\n            <Grid item style={{ width: \"10%\" }}></Grid>\r\n            <Grid item style={{ width: \"40%\" }}>\r\n              4:23 pm\r\n            </Grid>\r\n          </Grid> */}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item container style={{ border: \"1px solid\" }} direction=\"row\">\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"column\"\r\n          style={{ border: \"1px solid\", width: \"50%\" }}\r\n        >\r\n          <Grid item>Wed 16 | Night</Grid>\r\n          <Grid item container direction=\"row\">\r\n            <Grid item style={{ border: \"1px solid\", width: \"15%\" }}>\r\n              16\r\n            </Grid>\r\n            <Grid item style={{ border: \"1px solid\", width: \"15%\" }}>\r\n              PIC\r\n            </Grid>\r\n            <Grid item container style={{ border: \"1px solid\", width: \"70%\" }}>\r\n              <Grid item>Rain Perc%</Grid>\r\n              <Grid item>Wind Dir/Km</Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body2\">\r\n              Ut enim ad minim veniam, quis nostrud exercitation ullamco\r\n              laboris.\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid Grid item container style={{ border: \"1px solid\", width: \"50%\" }}>\r\n          {/* <Grid item container direction=\"row\" style={{ border: \"1px solid\" }}>\r\n            <Grid item style={{ width: \"10%\" }}>\r\n              I\r\n            </Grid>\r\n            <Grid item style={{ width: \"40%\" }}>\r\n              Rec H\r\n            </Grid>\r\n            <Grid item style={{ width: \"10%\" }}>\r\n              I\r\n            </Grid>\r\n            <Grid item style={{ width: \"40%\" }}>\r\n              Ave H\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container style={{ border: \"1px solid\" }}>\r\n            <Grid item style={{ width: \"10%\" }}></Grid>\r\n            <Grid item style={{ width: \"40%\" }}>\r\n              9\r\n            </Grid>\r\n            <Grid item style={{ width: \"10%\" }}></Grid>\r\n            <Grid item style={{ width: \"40%\" }}>\r\n              15\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container style={{ border: \"1px solid\" }}>\r\n            <Grid item style={{ width: \"10%\" }}>\r\n              I\r\n            </Grid>\r\n            <Grid item style={{ width: \"40%\" }}>\r\n              Sunrise\r\n            </Grid>\r\n            <Grid item style={{ width: \"10%\" }}>\r\n              I\r\n            </Grid>\r\n            <Grid item style={{ width: \"40%\" }}>\r\n              Sunset\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container style={{ border: \"1px solid\" }}>\r\n            <Grid item style={{ width: \"10%\" }}></Grid>\r\n            <Grid item style={{ width: \"40%\" }}>\r\n              4:34 am\r\n            </Grid>\r\n            <Grid item style={{ width: \"10%\" }}></Grid>\r\n            <Grid item style={{ width: \"40%\" }}>\r\n              4:23 pm\r\n            </Grid>\r\n          </Grid> */}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\costOfElec.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\galleryChipGroup.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\currentJournals.js",["148","149","150"],"import React, { useEffect, useState } from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//Redux imports\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { displayNewJournal } from \"../../redux/siteNav/siteNav.actions\";\r\nimport { selectDispNewJournal } from \"../../redux/siteNav/siteNav.selector\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"3em\",\r\n    border: \"1px solid\",\r\n  },\r\n  CheckButton: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    top: \"calc(50% - 20px) !important\",\r\n    transition: \"40ms\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      opacity: \"0.6 !important\",\r\n    },\r\n    height: \"25px\",\r\n    width: \"100%\",\r\n  },\r\n  paperStyle: {\r\n    backgroundColor: \"#d6ffb5\",\r\n    marginTop: \"0.5em\",\r\n    height: \"200px\",\r\n  },\r\n  journalTitle: {\r\n    width: \"90%\",\r\n  },\r\n  journalAddIcon: {\r\n    width: \"10%\",\r\n  },\r\n  journalIcon: {\r\n    marginRight: \"3px\",\r\n    marginTop: \"3px\",\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  journalDesc: {\r\n    paddingLeft: \"0.5em\",\r\n    height: \"100px\",\r\n    // border: \"1px solid\",\r\n  },\r\n}));\r\n\r\nexport default function CurrentJournals(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  //Get Global State\r\n  const dispNewJournal = useSelector(selectDispNewJournal);\r\n  //Get Local State\r\n  const [activeJournals, setActiveJournals] = useState([]);\r\n\r\n  //Test Data\r\n  const test = [\r\n    {\r\n      name: \"Tempus\",\r\n      description:\r\n        \"Et sollicitudin ac orci phasellus egestas tellus rutrum tellus. Quam pellentesque nec nam aliquam sem. Nunc pulvinar sapien et ligula ullamcorper.\",\r\n    },\r\n    {\r\n      name: \"Pellentesque\",\r\n      description:\r\n        \"Enim tortor at auctor urna nunc. Placerat duis ultricies lacus sed turpis tincidunt id.\",\r\n    },\r\n    {\r\n      name: \"Pharetra\",\r\n      description:\r\n        \"Facilisis leo vel fringilla est ullamcorper. Ut consequat semper viverra nam libero justo laoreet. Ut sem nulla pharetra diam sit amet nisl. Semper eget duis at tellus at urna condimentum mattis pellentesque.\",\r\n    },\r\n  ];\r\n\r\n  //Setup Local State\r\n  // const [expanded, setExpanded] = useState(false);\r\n  const [fullJournal, setFullJournal] = useState({\r\n    jName: \"\",\r\n    jDesc: \"\",\r\n    roomType: \"\",\r\n    waterType: \"\",\r\n    vegLight: \"\",\r\n    flowLight: \"\",\r\n    growMedium: \"\",\r\n  });\r\n\r\n  //Requesting - All journals from backend\r\n  const getJournals = async () => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        journalNameField: fullJournal.jName,\r\n        journalDescField: fullJournal.jDesc,\r\n        journalRoomType: fullJournal.roomType,\r\n        journalWaterType: fullJournal.waterType,\r\n        journalVegLight: fullJournal.vegLight,\r\n        journalFlowLight: fullJournal.flowLight,\r\n        journalGrowMedium: fullJournal.growMedium,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:4000/journalGet\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((response) => setActiveJournals(response))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const togNewJournalDisplay = () => {\r\n    dispatch(displayNewJournal(!dispNewJournal));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getJournals();\r\n    console.log(\"togNewJournalDisplay\");\r\n    console.log(activeJournals);\r\n    console.log(\"--------------------\");\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Carousel next={(next, active) => {}} prev={(prev, active) => {}}>\r\n        {activeJournals.map((item, index) => (\r\n          <Paper className={classes.paperStyle} key={index}>\r\n            <Grid container direction=\"column\">\r\n              <Grid item container alignItems=\"flex-start\">\r\n                <Grid\r\n                  item\r\n                  className={classes.journalTitle}\r\n                  style={{ paddingLeft: \"0.5em\" }}\r\n                >\r\n                  <h2>{item.name}</h2>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  className={classes.journalAddIcon}\r\n                  justifyContent=\"flex-end\"\r\n                >\r\n                  <AddCircleOutlineIcon\r\n                    className={classes.journalIcon}\r\n                    style={{ zIndex: 1 }}\r\n                    onClick={() => togNewJournalDisplay()}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item className={classes.journalDesc}>\r\n                <p>{item.description}</p>\r\n              </Grid>\r\n              <Grid item container justifyContent=\"center\">\r\n                <Grid item className={classes.buttonGrid}>\r\n                  <Button\r\n                    className={classes.CheckButton}\r\n                    onClick={() => console.log(\"But Clicked\")}\r\n                  >\r\n                    Select\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\newJournal.js",["151"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Chip from \"@material-ui/core/chip\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n//Redux imports\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { displayNewJournal } from \"../../redux/siteNav/siteNav.actions\";\r\nimport { selectDispNewJournal } from \"../../redux/siteNav/siteNav.selector\";\r\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6em\",\r\n    width: \"100%\",\r\n    border: \"0px solid\",\r\n  },\r\n  journalInput: {\r\n    margin: \"0\",\r\n    marginTop: \"3px\",\r\n  },\r\n  mainPageSub: {\r\n    border: \"0px solid black\",\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#ebffdb\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"36.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {},\r\n  journalDescTitle: {\r\n    paddingBottom: \"0.5em\",\r\n    color: \"#000\",\r\n    opacity: \"0.65\",\r\n  },\r\n  journalDesc: {\r\n    width: \"95%\",\r\n    border: `0px solid ${theme.palette.common.blue}`,\r\n    borderRadius: 5,\r\n    backgroundColor: theme.palette.secondary.light,\r\n    paddingLeft: \"3px\",\r\n    paddingRight: \"3px\",\r\n  },\r\n  journalButton: {\r\n    margin: \"1em\",\r\n  },\r\n  submitGrid: {},\r\n  curJournals: { marginTop: \"1em\", width: \"100%\" },\r\n  curJournalsSpace: {\r\n    width: \"100%\",\r\n  },\r\n  curJournalsSpace80: {\r\n    width: \"80%\",\r\n    marginLeft: \"4em\",\r\n  },\r\n  curJournalSubheader: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n    backgroundColor: theme.palette.primary.light,\r\n    fontSize: \"12pt\",\r\n  },\r\n}));\r\n\r\nexport default function NewJournal(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  //Get Global State\r\n  const dispNewJournal = useSelector(selectDispNewJournal);\r\n  const currentUser = useSelector(selectCurrentUser);\r\n  console.log(currentUser);\r\n\r\n  //Setup Local State\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [soilTypeState, setSoilTypeState] = useState([]);\r\n  const [fullJournal, setFullJournal] = useState({\r\n    jName: \"\",\r\n    jDesc: \"\",\r\n    roomType: \"\",\r\n    waterType: \"\",\r\n    vegLight: \"\",\r\n    flowLight: \"\",\r\n    growMedium: \"\",\r\n    vegWatt: \"\",\r\n    flowerWatt: \"\",\r\n    username: currentUser,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // getJournals();\r\n  }, []);\r\n\r\n  //Updating journals\r\n  const updateJournal = (event) => {\r\n    setFullJournal({ ...fullJournal, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const cancelNewJournal = () => {\r\n    setExpanded(false);\r\n\r\n    console.log(\"togNewJournalDisplay\");\r\n    dispatch(displayNewJournal(!dispNewJournal));\r\n  };\r\n\r\n  //Journal Data Processing\r\n  //Requesting -  Create new journal on backend\r\n  const createJournal = async () => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        journalNameField: fullJournal.jName,\r\n        journalDescField: fullJournal.jDesc,\r\n        journalRoomType: fullJournal.roomType,\r\n        journalWaterType: fullJournal.waterType,\r\n        journalVegLight: fullJournal.vegLight,\r\n        journalFlowLight: fullJournal.flowLight,\r\n        journalGrowMedium: soilTypeState,\r\n        journalVegWatt: fullJournal.vegWatt,\r\n        journalFlowerWatt: fullJournal.flowerWatt,\r\n        journalUsername: fullJournal.username,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:4000/createJournal\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((response) => console.log(response))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n\r\n  const soilType = [\r\n    \"Soil\",\r\n    \"Perlite\",\r\n    \"Vermiculite\",\r\n    \"Expanded Clay\",\r\n    \"Coco Coir\",\r\n    \"Mineral Wood\",\r\n    \"Other\",\r\n  ];\r\n\r\n  const handleChangeMultiple = (event) => {\r\n    setSoilTypeState(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent style={{ border: \"0px solid\", padding: \"0\" }}>\r\n        <Grid container direction=\"column\" style={{ width: \"100%\" }}>\r\n          <Grid item style={{ width: \"100%\" }}>\r\n            <TextField\r\n              required\r\n              id=\"standard-required\"\r\n              label=\"New Journal Name\"\r\n              onChange={updateJournal}\r\n              name=\"jName\"\r\n              value={fullJournal.jName}\r\n              fullWidth\r\n              className={classes.journalInput}\r\n              margin=\"dense\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-label\">Room Type</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{ width: \"100%\" }}\r\n                name=\"roomType\"\r\n                onChange={updateJournal}\r\n                value={fullJournal.roomType}\r\n              >\r\n                <MenuItem value={\"Indoor\"}>Indoor</MenuItem>\r\n                <MenuItem value={\"Outdoor\"}>Outdoor</MenuItem>\r\n                <MenuItem value={\"Greenhouse\"}>Greenhouse</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Watering Type\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{ width: \"100%\" }}\r\n                name=\"waterType\"\r\n                onChange={updateJournal}\r\n                value={fullJournal.waterType}\r\n              >\r\n                <MenuItem value={\"Manual\"}>Manual</MenuItem>\r\n                <MenuItem value={\"Drip\"}>Drip</MenuItem>\r\n                <MenuItem value={\"Hydroponic\"}>Hydroponic</MenuItem>\r\n                <MenuItem value={\"Aeroponic\"}>Aeroponic</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item container style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <Grid item style={{ width: \"50%\" }}>\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                id=\"standard-required\"\r\n                label=\"Wattage\"\r\n                onChange={updateJournal}\r\n                name=\"vegWatt\"\r\n                value={fullJournal.vegWatt}\r\n                fullWidth\r\n                className={classes.journalInput}\r\n                margin=\"dense\"\r\n              />\r\n            </Grid>\r\n            <Grid item style={{ width: \"50%\" }}>\r\n              <FormControl\r\n                className={classes.formControl}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Veg. Light\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"vegLight\"\r\n                  onChange={updateJournal}\r\n                  value={fullJournal.vegLight}\r\n                >\r\n                  <MenuItem value={\"LED\"}>LED</MenuItem>\r\n                  <MenuItem value={\"HPS\"}>HPS</MenuItem>\r\n                  <MenuItem value={\"HID\"}>HID</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <Grid item style={{ width: \"50%\" }}>\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                id=\"standard-required\"\r\n                label=\"Wattage\"\r\n                onChange={updateJournal}\r\n                name=\"flowerWatt\"\r\n                value={fullJournal.flowerWatt}\r\n                fullWidth\r\n                className={classes.journalInput}\r\n                margin=\"dense\"\r\n              />\r\n            </Grid>\r\n            <Grid item style={{ width: \"50%\" }}>\r\n              <FormControl\r\n                className={classes.formControl}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Flower. Light\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"flowLight\"\r\n                  onChange={updateJournal}\r\n                  value={fullJournal.flowLight}\r\n                >\r\n                  <MenuItem value={\"LED\"}>LED</MenuItem>\r\n                  <MenuItem value={\"HPS\"}>HPS</MenuItem>\r\n                  <MenuItem value={\"HID\"}>HID</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <InputLabel id=\"soilTypeLabel\">Grow Medium</InputLabel>\r\n              <Select\r\n                labelId=\"soilTypeLabel\"\r\n                id=\"mutipleChip\"\r\n                multiple\r\n                value={soilTypeState}\r\n                onChange={handleChangeMultiple}\r\n                input={<Input id=\"selectMultipleChip\" />}\r\n                renderValue={(selected) => (\r\n                  <div className={classes.chips}>\r\n                    {soilTypeState.map((value) => (\r\n                      <Chip\r\n                        key={value}\r\n                        label={value}\r\n                        className={classes.chip}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {soilType.map((soil) => (\r\n                  <MenuItem key={soil} value={soil}>\r\n                    {soil}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <br />\r\n          <Grid item style={{ width: \"100%\" }}>\r\n            <Typography className={classes.journalDescTitle}>\r\n              Journal Description\r\n            </Typography>\r\n            <Grid item container justifyContent=\"center\">\r\n              <TextField\r\n                InputProps={{ disableUnderline: true }}\r\n                value={fullJournal.jDesc}\r\n                className={classes.journalDesc}\r\n                multiline\r\n                fullWidth\r\n                rows={3}\r\n                name=\"jDesc\"\r\n                id=\"message\"\r\n                onChange={updateJournal}\r\n                placeholder=\"Short description of journal...\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            className={classes.submitGrid}\r\n            justifyContent=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.journalButton}\r\n                onClick={createJournal}\r\n              >\r\n                Create\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.journalButton}\r\n                onClick={cancelNewJournal}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      {/* </Collapse> */}\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.selector.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.selector.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.actions.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\signup.component.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\signin.component.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.reducer.jsx",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.reducer.jsx",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\weatherSummary.js",["152","153","154","155","156","157"],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.actions.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.types.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.types.js",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"166","line":90,"column":9,"nodeType":"164","messageId":"165","endLine":90,"endColumn":21},{"ruleId":"162","severity":1,"message":"166","line":108,"column":9,"nodeType":"164","messageId":"165","endLine":108,"endColumn":21},{"ruleId":"162","severity":1,"message":"167","line":17,"column":8,"nodeType":"164","messageId":"165","endLine":17,"endColumn":23},{"ruleId":"162","severity":1,"message":"168","line":83,"column":10,"nodeType":"164","messageId":"165","endLine":83,"endColumn":18},{"ruleId":"162","severity":1,"message":"169","line":83,"column":20,"nodeType":"164","messageId":"165","endLine":83,"endColumn":31},{"ruleId":"162","severity":1,"message":"170","line":84,"column":10,"nodeType":"164","messageId":"165","endLine":84,"endColumn":21},{"ruleId":"162","severity":1,"message":"171","line":84,"column":23,"nodeType":"164","messageId":"165","endLine":84,"endColumn":37},{"ruleId":"162","severity":1,"message":"172","line":22,"column":9,"nodeType":"164","messageId":"165","endLine":22,"endColumn":17},{"ruleId":"162","severity":1,"message":"173","line":65,"column":9,"nodeType":"164","messageId":"165","endLine":65,"endColumn":13},{"ruleId":"162","severity":1,"message":"171","line":85,"column":23,"nodeType":"164","messageId":"165","endLine":85,"endColumn":37},{"ruleId":"174","severity":1,"message":"175","line":125,"column":6,"nodeType":"176","endLine":125,"endColumn":8,"suggestions":"177"},{"ruleId":"162","severity":1,"message":"168","line":107,"column":10,"nodeType":"164","messageId":"165","endLine":107,"endColumn":18},{"ruleId":"162","severity":1,"message":"178","line":7,"column":8,"nodeType":"164","messageId":"165","endLine":7,"endColumn":13},{"ruleId":"162","severity":1,"message":"179","line":8,"column":8,"nodeType":"164","messageId":"165","endLine":8,"endColumn":21},{"ruleId":"162","severity":1,"message":"180","line":9,"column":8,"nodeType":"164","messageId":"165","endLine":9,"endColumn":22},{"ruleId":"162","severity":1,"message":"181","line":10,"column":8,"nodeType":"164","messageId":"165","endLine":10,"endColumn":17},{"ruleId":"162","severity":1,"message":"182","line":12,"column":10,"nodeType":"164","messageId":"165","endLine":12,"endColumn":14},{"ruleId":"162","severity":1,"message":"183","line":59,"column":10,"nodeType":"164","messageId":"165","endLine":59,"endColumn":17},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'userLoggedIn' is assigned a value but never used.","'CurrentJournals' is defined but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'fullJournal' is assigned a value but never used.","'setFullJournal' is assigned a value but never used.","'summTemp' is assigned a value but never used.","'test' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeJournals' and 'getJournals'. Either include them or remove the dependency array.","ArrayExpression",["186"],"'Paper' is defined but never used.","'ArrowLeftIcon' is defined but never used.","'ArrowRightIcon' is defined but never used.","'CloudIcon' is defined but never used.","'Icon' is defined but never used.","'weather' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},"Update the dependencies array to be: [activeJournals, getJournals]",{"range":"189","text":"190"},[3754,3756],"[activeJournals, getJournals]"]