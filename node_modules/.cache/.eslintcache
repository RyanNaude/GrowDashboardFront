[{"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\index.js":"1","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\store.js":"2","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\App.js":"3","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\root-reducer.js":"4","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\costManagement.js":"5","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\calander.js":"6","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\gallery.js":"7","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\enviroment.js":"8","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\envSettings.js":"9","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\home.js":"10","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\theme.js":"11","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\Header.js":"12","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\unsigned.js":"13","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\costOfElec.js":"14","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\calanderEntry.js":"15","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\calenderMonth.js":"16","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\galleryChipGroup.js":"17","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\weather.js":"18","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\newJournal.js":"19","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\currentJournals.js":"20","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\weatherSummary.js":"21","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.selector.js":"22","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.selector.js":"23","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\signin.component.js":"24","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.actions.js":"25","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\signup.component.js":"26","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.reducer.jsx":"27","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.reducer.jsx":"28","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.actions.js":"29","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.types.js":"30","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.types.js":"31"},{"size":391,"mtime":1634668191185,"results":"32","hashOfConfig":"33"},{"size":270,"mtime":1634668191185,"results":"34","hashOfConfig":"33"},{"size":2387,"mtime":1635450066682,"results":"35","hashOfConfig":"33"},{"size":240,"mtime":1634668191185,"results":"36","hashOfConfig":"33"},{"size":1273,"mtime":1634668191153,"results":"37","hashOfConfig":"33"},{"size":2324,"mtime":1635449246353,"results":"38","hashOfConfig":"33"},{"size":4057,"mtime":1634668191169,"results":"39","hashOfConfig":"33"},{"size":2374,"mtime":1635446310496,"results":"40","hashOfConfig":"33"},{"size":1299,"mtime":1634668191153,"results":"41","hashOfConfig":"33"},{"size":3143,"mtime":1635446874819,"results":"42","hashOfConfig":"33"},{"size":550,"mtime":1635449749678,"results":"43","hashOfConfig":"33"},{"size":9617,"mtime":1635359890575,"results":"44","hashOfConfig":"33"},{"size":860,"mtime":1634668191169,"results":"45","hashOfConfig":"33"},{"size":2728,"mtime":1634668191169,"results":"46","hashOfConfig":"33"},{"size":2429,"mtime":1634668191169,"results":"47","hashOfConfig":"33"},{"size":3577,"mtime":1635359996008,"results":"48","hashOfConfig":"33"},{"size":1679,"mtime":1634668191169,"results":"49","hashOfConfig":"33"},{"size":3304,"mtime":1635446784504,"results":"50","hashOfConfig":"33"},{"size":13128,"mtime":1637005815522,"results":"51","hashOfConfig":"33"},{"size":5275,"mtime":1637005823826,"results":"52","hashOfConfig":"33"},{"size":9326,"mtime":1637004481693,"results":"53","hashOfConfig":"33"},{"size":717,"mtime":1634668191185,"results":"54","hashOfConfig":"33"},{"size":638,"mtime":1634668191185,"results":"55","hashOfConfig":"33"},{"size":5250,"mtime":1637004044764,"results":"56","hashOfConfig":"33"},{"size":521,"mtime":1634668191185,"results":"57","hashOfConfig":"33"},{"size":5486,"mtime":1637004036223,"results":"58","hashOfConfig":"33"},{"size":812,"mtime":1634668191185,"results":"59","hashOfConfig":"33"},{"size":919,"mtime":1634668191185,"results":"60","hashOfConfig":"33"},{"size":552,"mtime":1634668191185,"results":"61","hashOfConfig":"33"},{"size":206,"mtime":1634668191185,"results":"62","hashOfConfig":"33"},{"size":217,"mtime":1634668191185,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"lmgnhx",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\index.js",[],["131","132"],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\store.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\App.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\root-reducer.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\costManagement.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\calander.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\gallery.js",["133"],"import React from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport GalleryChipGroup from \"./ui/galleryChipGroup\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ImageList from \"@material-ui/core/ImageList\";\r\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\r\nimport Unsigned from \"./ui/unsigned\";\r\n\r\n//Redux imports\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectCurrentUser,\r\n  selectTokenState,\r\n} from \"../redux/user/user.selector\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6em\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  imageList: {\r\n    width: 340,\r\n    height: 450,\r\n  },\r\n  chipGroup: {\r\n    borderRadius: \"25px\",\r\n    border: \"3px solid\",\r\n    marginTop: \"0.5em\",\r\n    marginBottom: \"0.5em\",\r\n    borderColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst itemData = [\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1551963831-b3b1ca40c98e\",\r\n    title: \"Breakfast\",\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1551782450-a2132b4ba21d\",\r\n    title: \"Burger\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1522770179533-24471fcdba45\",\r\n    title: \"Camera\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1444418776041-9c7e33cc5a9c\",\r\n    title: \"Coffee\",\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1533827432537-70133748f5c8\",\r\n    title: \"Hats\",\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1558642452-9d2a7deb7f62\",\r\n    title: \"Honey\",\r\n    author: \"@arwinneil\",\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1516802273409-68526ee1bdd6\",\r\n    title: \"Basketball\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1518756131217-31eb79b20e8f\",\r\n    title: \"Fern\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1597645587822-e99fa5d45d25\",\r\n    title: \"Mushrooms\",\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1567306301408-9b74779a11af\",\r\n    title: \"Tomato basil\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1471357674240-e1a485acb3e1\",\r\n    title: \"Sea star\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1589118949245-7d38baf380d6\",\r\n    title: \"Bike\",\r\n    cols: 2,\r\n  },\r\n];\r\n\r\nexport default function Gallery(props) {\r\n  const classes = useStyles();\r\n  //Get Global State\r\n  const userLoggedIn = useSelector(selectCurrentUser);\r\n  const tokenState = useSelector(selectTokenState);\r\n\r\n  return (\r\n    <Grid container direction=\"column\" className={classes.mainPageStyle}>\r\n      {tokenState ? (\r\n        <Grid item container direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">Gallery</Typography>\r\n          </Grid>\r\n          <Grid item className={classes.chipGroup}>\r\n            <GalleryChipGroup />\r\n          </Grid>\r\n          <Grid item>\r\n            <ImageList\r\n              sx={{ width: \"100%\", height: 450 }}\r\n              cols={3}\r\n              rowHeight={164}\r\n            >\r\n              {itemData.map((item, index) => (\r\n                <ImageListItem key={index}>\r\n                  <img\r\n                    src={`${item.img}?w=164&h=164&fit=crop&auto=format`}\r\n                    srcSet={`${item.img}?w=164&h=164&fit=crop&auto=format&dpr=2 2x`}\r\n                    alt={item.title}\r\n                    loading=\"lazy\"\r\n                    style={{ width: \"168px\", height: \"164px\" }}\r\n                  />\r\n                  {/* <Skeleton variant=\"rect\" width={\"168px\"} height={\"164px\"} /> */}\r\n                </ImageListItem>\r\n              ))}\r\n            </ImageList>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\enviroment.js",["134","135","136"],"import React, { useState } from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n//Component Import\r\nimport Unsigned from \"./ui/unsigned\";\r\nimport Weather from \"./ui/weather\";\r\nimport WeatherSummary from \"./ui/weatherSummary\";\r\n\r\n//Redux imports\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectCurrentUser,\r\n  selectTokenState,\r\n} from \"../redux/user/user.selector\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6.5em\",\r\n  },\r\n  mainPageSub: {\r\n    border: \"1px solid black\",\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#ebffdb\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"36.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  journalDescTitle: {\r\n    marginTop: \"1.5em\",\r\n  },\r\n  journalDesc: {\r\n    border: `2px solid ${theme.palette.common.blue}`,\r\n    borderRadius: 5,\r\n  },\r\n  journalButton: {\r\n    margin: \"1em\",\r\n  },\r\n  submitGrid: {\r\n    marginTop: \"1.5em\",\r\n  },\r\n}));\r\n\r\nexport default function Enviroment(props) {\r\n  const classes = useStyles();\r\n\r\n  //Setup Local State\r\n  // const [expanded, setExpanded] = useState(false);\r\n  // const [journalName, setJournalName] = useState(\"\");\r\n  // const [journalDesc, setJournalDesc] = useState(\"\");\r\n  // const [activeJournals, setActiveJournals] = useState([]);\r\n\r\n  //Get Global State\r\n  const userLoggedIn = useSelector(selectCurrentUser);\r\n  const tokenState = useSelector(selectTokenState);\r\n\r\n  const pageSource = \"ENV\";\r\n\r\n  return (\r\n    <Grid container direction=\"column\" className={classes.mainPageStyle}>\r\n      {tokenState ? (\r\n        <Grid item>\r\n          {/* <Weather /> */}\r\n          {/* <TodayWeather /> */}\r\n          <WeatherSummary pageSource={pageSource}/>\r\n          {/* <Weather />\r\n          <Weather />\r\n          <Weather />\r\n          <Weather /> */}\r\n        </Grid>\r\n      ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\envSettings.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\home.js",["137","138"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n//Material UI Components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\n//Redux imports\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectTokenState } from \"../redux/user/user.selector\";\r\nimport { selectDispNewJournal } from \"../redux/siteNav/siteNav.selector\";\r\n\r\n//Component import\r\nimport Unsigned from \"./ui/unsigned\";\r\nimport NewJournal from \"./ui/newJournal\";\r\nimport CurrentJournals from \"./ui/currentJournals\";\r\nimport WeatherSummary from \"./ui/weatherSummary\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6em\",\r\n    width: \"100%\",\r\n    border: \"0px solid\",\r\n  },\r\n  mainPageSub: {\r\n    border: \"0px solid black\",\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#ebffdb\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"36.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  journalDescTitle: {\r\n    // marginTop: \"1.5em\",\r\n  },\r\n  journalDesc: {\r\n    border: `0px solid ${theme.palette.common.blue}`,\r\n    borderRadius: 5,\r\n  },\r\n  journalButton: {\r\n    margin: \"1em\",\r\n  },\r\n  submitGrid: {\r\n    marginTop: \"1.5em\",\r\n  },\r\n  curJournals: { marginTop: \"1em\", width: \"100%\" },\r\n  curJournalsSpace: {\r\n    width: \"100%\",\r\n  },\r\n  curJournalsSpace80: {\r\n    width: \"80%\",\r\n    marginLeft: \"4em\",\r\n  },\r\n  curJournalSubheader: {\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nexport default function Home(props) {\r\n  const classes = useStyles();\r\n  //Get Global State\r\n  const tokenState = useSelector(selectTokenState);\r\n\r\n  const pageSource = \"HME\";\r\n\r\n  const [fullJournal, setFullJournal] = useState({\r\n    jName: \"\",\r\n    jDesc: \"\",\r\n    roomType: \"\",\r\n    waterType: \"\",\r\n    vegLight: \"\",\r\n    flowLight: \"\",\r\n    growMedium: \"\",\r\n  });\r\n\r\n  //Get Global State\r\n  const dispNewJournal = useSelector(selectDispNewJournal);\r\n\r\n  //useEffect - Getting journals loaded on database\r\n  useEffect(() => {\r\n    // getJournals();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container direction=\"row\" className={classes.mainPageStyle}>\r\n      {tokenState ? (\r\n        <Grid item container style={{ border: \"0px solid\" }}>\r\n          <Grid item style={{ border: \"0px solid\", width: \"100%\" }}>\r\n            {dispNewJournal ? null : <CurrentJournals />}\r\n            {dispNewJournal ? <NewJournal /> : null}\r\n            {dispNewJournal ? null : (\r\n              <WeatherSummary\r\n                weatherRefresh={props.weatherRefresh}\r\n                setWeatherRefresh={props.setWeatherRefresh}\r\n                pageSource={pageSource}\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\theme.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\Header.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\unsigned.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\costOfElec.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\calanderEntry.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\calenderMonth.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\galleryChipGroup.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\weather.js",["139","140"],"import React, { useState } from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CloudIcon from \"@material-ui/icons/Cloud\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  summMaxTemp: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"13pt\",\r\n  },\r\n  summMinTemp: {\r\n    fontSize: \"10pt\",\r\n  },\r\n  weekDay: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"10pt\",\r\n  },\r\n  summDate: {\r\n    fontSize: \"9pt\",\r\n  },\r\n  mainPageStyle: {\r\n    marginBottom: \"0.5em\",\r\n    // border: \"1px solid\",\r\n  },\r\n  root: {\r\n    backgroundColor: theme.palette.secondary.light,\r\n  },\r\n  // dayGrid: {\r\n  //   width: \"18%\",\r\n  // },\r\n  // dividerStyle: {\r\n  //   width: \"80%\",\r\n  //   color: \"black\",\r\n  // },\r\n}));\r\n\r\nexport default function Weather(props) {\r\n  const classes = useStyles();\r\n\r\n  var weatherDaySumm = props.day.weather[0];\r\n  var iconString =\r\n    \"https://openweathermap.org/img/wn/\" + weatherDaySumm.icon + \"@2x.png\";\r\n\r\n  const stringDate = props.convertDate(props.day.dt);\r\n  var dispDate =\r\n    stringDate.substring(8, 10) + \" | \" + stringDate.substring(4, 7);\r\n  var weekDay = stringDate.substring(0, 3);\r\n\r\n  var minTemp = Math.round(Number(props.day.temp.min));\r\n  var maxTemp = Math.round(Number(props.day.temp.max));\r\n\r\n  const [dayData, setDayData] = useState({\r\n    date: dispDate,\r\n    minTemp: minTemp,\r\n    maxTemp: maxTemp,\r\n    weekDay: weekDay,\r\n    iconString: iconString,\r\n  });\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      className={classes.mainPageStyle}\r\n      justifyContent=\"space-evenly\"\r\n      \r\n    >\r\n      <Grid item container className={classes.dayGrid}>\r\n        <Paper variant=\"outlined\" style={{ width: \"100%\" }}>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"column\"\r\n            className={classes.root}\r\n          >\r\n            <Grid item container justifyContent=\"center\">\r\n              <Typography className={classes.summMaxTemp}>\r\n                {dayData.maxTemp}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item container justifyContent=\"center\">\r\n              <Divider className={classes.dividerStyle} />\r\n            </Grid>\r\n            <Grid item container justifyContent=\"center\">\r\n              <Typography className={classes.summMinTemp}>\r\n                {dayData.minTemp}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item container justifyContent=\"center\">\r\n              <img\r\n                src={iconString}\r\n                style={{ width: \"45%\", height: \"45%\" }}\r\n                alt=\"fireSpot\"\r\n              />\r\n            </Grid>\r\n            <Grid item container justifyContent=\"center\">\r\n              <Typography className={classes.weekDay}>\r\n                {dayData.weekDay}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item container justifyContent=\"center\">\r\n              <Typography className={classes.summDate}>\r\n                {dayData.date}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\newJournal.js",["141"],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\currentJournals.js",["142","143","144"],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\weatherSummary.js",["145"],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.selector.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.selector.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\signin.component.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.actions.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\signup.component.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.reducer.jsx",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.reducer.jsx",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.actions.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.types.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.types.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":108,"column":9,"nodeType":"152","messageId":"153","endLine":108,"endColumn":21},{"ruleId":"150","severity":1,"message":"154","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"150","severity":1,"message":"155","line":10,"column":8,"nodeType":"152","messageId":"153","endLine":10,"endColumn":15},{"ruleId":"150","severity":1,"message":"151","line":74,"column":9,"nodeType":"152","messageId":"153","endLine":74,"endColumn":21},{"ruleId":"150","severity":1,"message":"156","line":84,"column":10,"nodeType":"152","messageId":"153","endLine":84,"endColumn":21},{"ruleId":"150","severity":1,"message":"157","line":84,"column":23,"nodeType":"152","messageId":"153","endLine":84,"endColumn":37},{"ruleId":"150","severity":1,"message":"158","line":8,"column":8,"nodeType":"152","messageId":"153","endLine":8,"endColumn":17},{"ruleId":"150","severity":1,"message":"159","line":59,"column":19,"nodeType":"152","messageId":"153","endLine":59,"endColumn":29},{"ruleId":"150","severity":1,"message":"160","line":106,"column":10,"nodeType":"152","messageId":"153","endLine":106,"endColumn":18},{"ruleId":"150","severity":1,"message":"161","line":65,"column":9,"nodeType":"152","messageId":"153","endLine":65,"endColumn":13},{"ruleId":"150","severity":1,"message":"157","line":85,"column":23,"nodeType":"152","messageId":"153","endLine":85,"endColumn":37},{"ruleId":"162","severity":1,"message":"163","line":122,"column":6,"nodeType":"164","endLine":122,"endColumn":8,"suggestions":"165"},{"ruleId":"162","severity":1,"message":"166","line":77,"column":6,"nodeType":"164","endLine":77,"endColumn":8,"suggestions":"167"},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'userLoggedIn' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Weather' is defined but never used.","'fullJournal' is assigned a value but never used.","'setFullJournal' is assigned a value but never used.","'CloudIcon' is defined but never used.","'setDayData' is assigned a value but never used.","'expanded' is assigned a value but never used.","'test' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getJournals'. Either include it or remove the dependency array.","ArrayExpression",["170"],"React Hook useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.",["171"],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [getJournals]",{"range":"176","text":"177"},"Update the dependencies array to be: [getWeather]",{"range":"178","text":"179"},[3644,3646],"[getJournals]",[1977,1979],"[getWeather]"]