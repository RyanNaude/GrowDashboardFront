[{"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\index.js":"1","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\store.js":"2","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\App.js":"3","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\root-reducer.js":"4","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\envSettings.js":"5","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\enviroment.js":"6","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\calander.js":"7","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\costManagement.js":"8","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\gallery.js":"9","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\home.js":"10","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\theme.js":"11","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\Header.js":"12","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\unsigned.js":"13","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\calanderEntry.js":"14","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\calenderMonth.js":"15","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\weather.js":"16","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\costOfElec.js":"17","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\galleryChipGroup.js":"18","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\currentJournals.js":"19","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\newJournal.js":"20","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.selector.js":"21","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.selector.js":"22","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.actions.js":"23","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\signup.component.js":"24","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\signin.component.js":"25","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.reducer.jsx":"26","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.reducer.jsx":"27","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\weatherSummary.js":"28","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.actions.js":"29","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.types.js":"30","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.types.js":"31"},{"size":391,"mtime":1634668191185,"results":"32","hashOfConfig":"33"},{"size":270,"mtime":1634668191185,"results":"34","hashOfConfig":"33"},{"size":2377,"mtime":1635275370093,"results":"35","hashOfConfig":"33"},{"size":240,"mtime":1634668191185,"results":"36","hashOfConfig":"33"},{"size":1299,"mtime":1634668191153,"results":"37","hashOfConfig":"33"},{"size":2304,"mtime":1635276040960,"results":"38","hashOfConfig":"33"},{"size":2270,"mtime":1635273784229,"results":"39","hashOfConfig":"33"},{"size":1273,"mtime":1634668191153,"results":"40","hashOfConfig":"33"},{"size":4057,"mtime":1634668191169,"results":"41","hashOfConfig":"33"},{"size":3151,"mtime":1635275500124,"results":"42","hashOfConfig":"33"},{"size":445,"mtime":1634668191169,"results":"43","hashOfConfig":"33"},{"size":9979,"mtime":1635274719493,"results":"44","hashOfConfig":"33"},{"size":860,"mtime":1634668191169,"results":"45","hashOfConfig":"33"},{"size":2429,"mtime":1634668191169,"results":"46","hashOfConfig":"33"},{"size":3489,"mtime":1635277431044,"results":"47","hashOfConfig":"33"},{"size":3181,"mtime":1634668191169,"results":"48","hashOfConfig":"33"},{"size":2728,"mtime":1634668191169,"results":"49","hashOfConfig":"33"},{"size":1679,"mtime":1634668191169,"results":"50","hashOfConfig":"33"},{"size":5385,"mtime":1634671854264,"results":"51","hashOfConfig":"33"},{"size":13193,"mtime":1634668191169,"results":"52","hashOfConfig":"33"},{"size":638,"mtime":1634668191185,"results":"53","hashOfConfig":"33"},{"size":717,"mtime":1634668191185,"results":"54","hashOfConfig":"33"},{"size":521,"mtime":1634668191185,"results":"55","hashOfConfig":"33"},{"size":5481,"mtime":1634668191169,"results":"56","hashOfConfig":"33"},{"size":5245,"mtime":1634668191169,"results":"57","hashOfConfig":"33"},{"size":812,"mtime":1634668191185,"results":"58","hashOfConfig":"33"},{"size":919,"mtime":1634668191185,"results":"59","hashOfConfig":"33"},{"size":9909,"mtime":1635275881846,"results":"60","hashOfConfig":"33"},{"size":552,"mtime":1634668191185,"results":"61","hashOfConfig":"33"},{"size":206,"mtime":1634668191185,"results":"62","hashOfConfig":"33"},{"size":217,"mtime":1634668191185,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"lmgnhx",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\index.js",[],["130","131"],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\store.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\App.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\root-reducer.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\envSettings.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\enviroment.js",["132","133"],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\calander.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\costManagement.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\gallery.js",["134"],"import React from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport GalleryChipGroup from \"./ui/galleryChipGroup\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ImageList from \"@material-ui/core/ImageList\";\r\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\r\nimport Unsigned from \"./ui/unsigned\";\r\n\r\n//Redux imports\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectCurrentUser,\r\n  selectTokenState,\r\n} from \"../redux/user/user.selector\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6em\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  imageList: {\r\n    width: 340,\r\n    height: 450,\r\n  },\r\n  chipGroup: {\r\n    borderRadius: \"25px\",\r\n    border: \"3px solid\",\r\n    marginTop: \"0.5em\",\r\n    marginBottom: \"0.5em\",\r\n    borderColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst itemData = [\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1551963831-b3b1ca40c98e\",\r\n    title: \"Breakfast\",\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1551782450-a2132b4ba21d\",\r\n    title: \"Burger\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1522770179533-24471fcdba45\",\r\n    title: \"Camera\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1444418776041-9c7e33cc5a9c\",\r\n    title: \"Coffee\",\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1533827432537-70133748f5c8\",\r\n    title: \"Hats\",\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1558642452-9d2a7deb7f62\",\r\n    title: \"Honey\",\r\n    author: \"@arwinneil\",\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1516802273409-68526ee1bdd6\",\r\n    title: \"Basketball\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1518756131217-31eb79b20e8f\",\r\n    title: \"Fern\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1597645587822-e99fa5d45d25\",\r\n    title: \"Mushrooms\",\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1567306301408-9b74779a11af\",\r\n    title: \"Tomato basil\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1471357674240-e1a485acb3e1\",\r\n    title: \"Sea star\",\r\n  },\r\n  {\r\n    img: \"https://images.unsplash.com/photo-1589118949245-7d38baf380d6\",\r\n    title: \"Bike\",\r\n    cols: 2,\r\n  },\r\n];\r\n\r\nexport default function Gallery(props) {\r\n  const classes = useStyles();\r\n  //Get Global State\r\n  const userLoggedIn = useSelector(selectCurrentUser);\r\n  const tokenState = useSelector(selectTokenState);\r\n\r\n  return (\r\n    <Grid container direction=\"column\" className={classes.mainPageStyle}>\r\n      {tokenState ? (\r\n        <Grid item container direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">Gallery</Typography>\r\n          </Grid>\r\n          <Grid item className={classes.chipGroup}>\r\n            <GalleryChipGroup />\r\n          </Grid>\r\n          <Grid item>\r\n            <ImageList\r\n              sx={{ width: \"100%\", height: 450 }}\r\n              cols={3}\r\n              rowHeight={164}\r\n            >\r\n              {itemData.map((item, index) => (\r\n                <ImageListItem key={index}>\r\n                  <img\r\n                    src={`${item.img}?w=164&h=164&fit=crop&auto=format`}\r\n                    srcSet={`${item.img}?w=164&h=164&fit=crop&auto=format&dpr=2 2x`}\r\n                    alt={item.title}\r\n                    loading=\"lazy\"\r\n                    style={{ width: \"168px\", height: \"164px\" }}\r\n                  />\r\n                  {/* <Skeleton variant=\"rect\" width={\"168px\"} height={\"164px\"} /> */}\r\n                </ImageListItem>\r\n              ))}\r\n            </ImageList>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\home.js",["135","136"],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\theme.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\Header.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\unsigned.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\calanderEntry.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\calenderMonth.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\weather.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\costOfElec.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\galleryChipGroup.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\currentJournals.js",["137","138","139"],"import React, { useEffect, useState } from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//Redux imports\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { displayNewJournal } from \"../../redux/siteNav/siteNav.actions\";\r\nimport { selectDispNewJournal } from \"../../redux/siteNav/siteNav.selector\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"3em\",\r\n    border: \"1px solid\",\r\n  },\r\n  CheckButton: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    top: \"calc(50% - 20px) !important\",\r\n    transition: \"40ms\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      opacity: \"0.6 !important\",\r\n    },\r\n    height: \"25px\",\r\n    width: \"100%\",\r\n  },\r\n  paperStyle: {\r\n    backgroundColor: \"#d6ffb5\",\r\n    marginTop: \"0.5em\",\r\n    height: \"200px\",\r\n  },\r\n  journalTitle: {\r\n    width: \"90%\",\r\n  },\r\n  journalAddIcon: {\r\n    width: \"10%\",\r\n  },\r\n  journalIcon: {\r\n    marginRight: \"3px\",\r\n    marginTop: \"3px\",\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  journalDesc: {\r\n    paddingLeft: \"0.5em\",\r\n    height: \"100px\",\r\n    // border: \"1px solid\",\r\n  },\r\n}));\r\n\r\nexport default function CurrentJournals(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  //Get Global State\r\n  const dispNewJournal = useSelector(selectDispNewJournal);\r\n  //Get Local State\r\n  const [activeJournals, setActiveJournals] = useState([]);\r\n\r\n  //Test Data\r\n  const test = [\r\n    {\r\n      name: \"Tempus\",\r\n      description:\r\n        \"Et sollicitudin ac orci phasellus egestas tellus rutrum tellus. Quam pellentesque nec nam aliquam sem. Nunc pulvinar sapien et ligula ullamcorper.\",\r\n    },\r\n    {\r\n      name: \"Pellentesque\",\r\n      description:\r\n        \"Enim tortor at auctor urna nunc. Placerat duis ultricies lacus sed turpis tincidunt id.\",\r\n    },\r\n    {\r\n      name: \"Pharetra\",\r\n      description:\r\n        \"Facilisis leo vel fringilla est ullamcorper. Ut consequat semper viverra nam libero justo laoreet. Ut sem nulla pharetra diam sit amet nisl. Semper eget duis at tellus at urna condimentum mattis pellentesque.\",\r\n    },\r\n  ];\r\n\r\n  //Setup Local State\r\n  // const [expanded, setExpanded] = useState(false);\r\n  const [fullJournal, setFullJournal] = useState({\r\n    jName: \"\",\r\n    jDesc: \"\",\r\n    roomType: \"\",\r\n    waterType: \"\",\r\n    vegLight: \"\",\r\n    flowLight: \"\",\r\n    growMedium: \"\",\r\n  });\r\n\r\n  //Requesting - All journals from backend\r\n  const getJournals = async () => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        journalNameField: fullJournal.jName,\r\n        journalDescField: fullJournal.jDesc,\r\n        journalRoomType: fullJournal.roomType,\r\n        journalWaterType: fullJournal.waterType,\r\n        journalVegLight: fullJournal.vegLight,\r\n        journalFlowLight: fullJournal.flowLight,\r\n        journalGrowMedium: fullJournal.growMedium,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:4000/journalGet\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((response) => setActiveJournals(response))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const togNewJournalDisplay = () => {\r\n    dispatch(displayNewJournal(!dispNewJournal));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getJournals();\r\n    console.log(\"togNewJournalDisplay\");\r\n    console.log(activeJournals);\r\n    console.log(\"--------------------\");\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Carousel next={(next, active) => {}} prev={(prev, active) => {}}>\r\n        {activeJournals.map((item, index) => (\r\n          <Paper className={classes.paperStyle} key={index}>\r\n            <Grid container direction=\"column\">\r\n              <Grid item container alignItems=\"flex-start\">\r\n                <Grid\r\n                  item\r\n                  className={classes.journalTitle}\r\n                  style={{ paddingLeft: \"0.5em\" }}\r\n                >\r\n                  <h2>{item.name}</h2>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  className={classes.journalAddIcon}\r\n                  justifyContent=\"flex-end\"\r\n                >\r\n                  <AddCircleOutlineIcon\r\n                    className={classes.journalIcon}\r\n                    style={{ zIndex: 1 }}\r\n                    onClick={() => togNewJournalDisplay()}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item className={classes.journalDesc}>\r\n                <p>{item.description}</p>\r\n              </Grid>\r\n              <Grid item container justifyContent=\"center\">\r\n                <Grid item className={classes.buttonGrid}>\r\n                  <Button\r\n                    className={classes.CheckButton}\r\n                    onClick={() => console.log(\"But Clicked\")}\r\n                  >\r\n                    Select\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\newJournal.js",["140"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Chip from \"@material-ui/core/chip\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n//Redux imports\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { displayNewJournal } from \"../../redux/siteNav/siteNav.actions\";\r\nimport { selectDispNewJournal } from \"../../redux/siteNav/siteNav.selector\";\r\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6em\",\r\n    width: \"100%\",\r\n    border: \"0px solid\",\r\n  },\r\n  journalInput: {\r\n    margin: \"0\",\r\n    marginTop: \"3px\",\r\n  },\r\n  mainPageSub: {\r\n    border: \"0px solid black\",\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#ebffdb\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"36.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {},\r\n  journalDescTitle: {\r\n    paddingBottom: \"0.5em\",\r\n    color: \"#000\",\r\n    opacity: \"0.65\",\r\n  },\r\n  journalDesc: {\r\n    width: \"95%\",\r\n    border: `0px solid ${theme.palette.common.blue}`,\r\n    borderRadius: 5,\r\n    backgroundColor: theme.palette.secondary.light,\r\n    paddingLeft: \"3px\",\r\n    paddingRight: \"3px\",\r\n  },\r\n  journalButton: {\r\n    margin: \"1em\",\r\n  },\r\n  submitGrid: {},\r\n  curJournals: { marginTop: \"1em\", width: \"100%\" },\r\n  curJournalsSpace: {\r\n    width: \"100%\",\r\n  },\r\n  curJournalsSpace80: {\r\n    width: \"80%\",\r\n    marginLeft: \"4em\",\r\n  },\r\n  curJournalSubheader: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n    backgroundColor: theme.palette.primary.light,\r\n    fontSize: \"12pt\",\r\n  },\r\n}));\r\n\r\nexport default function NewJournal(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  //Get Global State\r\n  const dispNewJournal = useSelector(selectDispNewJournal);\r\n  const currentUser = useSelector(selectCurrentUser);\r\n  console.log(currentUser);\r\n\r\n  //Setup Local State\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [soilTypeState, setSoilTypeState] = useState([]);\r\n  const [fullJournal, setFullJournal] = useState({\r\n    jName: \"\",\r\n    jDesc: \"\",\r\n    roomType: \"\",\r\n    waterType: \"\",\r\n    vegLight: \"\",\r\n    flowLight: \"\",\r\n    growMedium: \"\",\r\n    vegWatt: \"\",\r\n    flowerWatt: \"\",\r\n    username: currentUser,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // getJournals();\r\n  }, []);\r\n\r\n  //Updating journals\r\n  const updateJournal = (event) => {\r\n    setFullJournal({ ...fullJournal, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const cancelNewJournal = () => {\r\n    setExpanded(false);\r\n\r\n    console.log(\"togNewJournalDisplay\");\r\n    dispatch(displayNewJournal(!dispNewJournal));\r\n  };\r\n\r\n  //Journal Data Processing\r\n  //Requesting -  Create new journal on backend\r\n  const createJournal = async () => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        journalNameField: fullJournal.jName,\r\n        journalDescField: fullJournal.jDesc,\r\n        journalRoomType: fullJournal.roomType,\r\n        journalWaterType: fullJournal.waterType,\r\n        journalVegLight: fullJournal.vegLight,\r\n        journalFlowLight: fullJournal.flowLight,\r\n        journalGrowMedium: soilTypeState,\r\n        journalVegWatt: fullJournal.vegWatt,\r\n        journalFlowerWatt: fullJournal.flowerWatt,\r\n        journalUsername: fullJournal.username,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:4000/createJournal\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((response) => console.log(response))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n\r\n  const soilType = [\r\n    \"Soil\",\r\n    \"Perlite\",\r\n    \"Vermiculite\",\r\n    \"Expanded Clay\",\r\n    \"Coco Coir\",\r\n    \"Mineral Wood\",\r\n    \"Other\",\r\n  ];\r\n\r\n  const handleChangeMultiple = (event) => {\r\n    setSoilTypeState(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent style={{ border: \"0px solid\", padding: \"0\" }}>\r\n        <Grid container direction=\"column\" style={{ width: \"100%\" }}>\r\n          <Grid item style={{ width: \"100%\" }}>\r\n            <TextField\r\n              required\r\n              id=\"standard-required\"\r\n              label=\"New Journal Name\"\r\n              onChange={updateJournal}\r\n              name=\"jName\"\r\n              value={fullJournal.jName}\r\n              fullWidth\r\n              className={classes.journalInput}\r\n              margin=\"dense\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-label\">Room Type</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{ width: \"100%\" }}\r\n                name=\"roomType\"\r\n                onChange={updateJournal}\r\n                value={fullJournal.roomType}\r\n              >\r\n                <MenuItem value={\"Indoor\"}>Indoor</MenuItem>\r\n                <MenuItem value={\"Outdoor\"}>Outdoor</MenuItem>\r\n                <MenuItem value={\"Greenhouse\"}>Greenhouse</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Watering Type\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{ width: \"100%\" }}\r\n                name=\"waterType\"\r\n                onChange={updateJournal}\r\n                value={fullJournal.waterType}\r\n              >\r\n                <MenuItem value={\"Manual\"}>Manual</MenuItem>\r\n                <MenuItem value={\"Drip\"}>Drip</MenuItem>\r\n                <MenuItem value={\"Hydroponic\"}>Hydroponic</MenuItem>\r\n                <MenuItem value={\"Aeroponic\"}>Aeroponic</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item container style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <Grid item style={{ width: \"50%\" }}>\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                id=\"standard-required\"\r\n                label=\"Wattage\"\r\n                onChange={updateJournal}\r\n                name=\"vegWatt\"\r\n                value={fullJournal.vegWatt}\r\n                fullWidth\r\n                className={classes.journalInput}\r\n                margin=\"dense\"\r\n              />\r\n            </Grid>\r\n            <Grid item style={{ width: \"50%\" }}>\r\n              <FormControl\r\n                className={classes.formControl}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Veg. Light\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"vegLight\"\r\n                  onChange={updateJournal}\r\n                  value={fullJournal.vegLight}\r\n                >\r\n                  <MenuItem value={\"LED\"}>LED</MenuItem>\r\n                  <MenuItem value={\"HPS\"}>HPS</MenuItem>\r\n                  <MenuItem value={\"HID\"}>HID</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <Grid item style={{ width: \"50%\" }}>\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                id=\"standard-required\"\r\n                label=\"Wattage\"\r\n                onChange={updateJournal}\r\n                name=\"flowerWatt\"\r\n                value={fullJournal.flowerWatt}\r\n                fullWidth\r\n                className={classes.journalInput}\r\n                margin=\"dense\"\r\n              />\r\n            </Grid>\r\n            <Grid item style={{ width: \"50%\" }}>\r\n              <FormControl\r\n                className={classes.formControl}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Flower. Light\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  style={{ width: \"100%\" }}\r\n                  name=\"flowLight\"\r\n                  onChange={updateJournal}\r\n                  value={fullJournal.flowLight}\r\n                >\r\n                  <MenuItem value={\"LED\"}>LED</MenuItem>\r\n                  <MenuItem value={\"HPS\"}>HPS</MenuItem>\r\n                  <MenuItem value={\"HID\"}>HID</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item style={{ width: \"100%\", marginTop: \"1em\" }}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <InputLabel id=\"soilTypeLabel\">Grow Medium</InputLabel>\r\n              <Select\r\n                labelId=\"soilTypeLabel\"\r\n                id=\"mutipleChip\"\r\n                multiple\r\n                value={soilTypeState}\r\n                onChange={handleChangeMultiple}\r\n                input={<Input id=\"selectMultipleChip\" />}\r\n                renderValue={(selected) => (\r\n                  <div className={classes.chips}>\r\n                    {soilTypeState.map((value) => (\r\n                      <Chip\r\n                        key={value}\r\n                        label={value}\r\n                        className={classes.chip}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {soilType.map((soil) => (\r\n                  <MenuItem key={soil} value={soil}>\r\n                    {soil}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <br />\r\n          <Grid item style={{ width: \"100%\" }}>\r\n            <Typography className={classes.journalDescTitle}>\r\n              Journal Description\r\n            </Typography>\r\n            <Grid item container justifyContent=\"center\">\r\n              <TextField\r\n                InputProps={{ disableUnderline: true }}\r\n                value={fullJournal.jDesc}\r\n                className={classes.journalDesc}\r\n                multiline\r\n                fullWidth\r\n                rows={3}\r\n                name=\"jDesc\"\r\n                id=\"message\"\r\n                onChange={updateJournal}\r\n                placeholder=\"Short description of journal...\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            className={classes.submitGrid}\r\n            justifyContent=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.journalButton}\r\n                onClick={createJournal}\r\n              >\r\n                Create\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.journalButton}\r\n                onClick={cancelNewJournal}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      {/* </Collapse> */}\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.selector.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.selector.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.actions.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\signup.component.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\signin.component.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.reducer.jsx",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.reducer.jsx",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\components\\ui\\weatherSummary.js",["141","142","143","144","145","146","147","148","149","150"],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.actions.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\user\\user.types.js",[],"C:\\Users\\ryann\\Documents\\VS_Code_Projects\\GrowDashboardFront\\src\\redux\\siteNav\\siteNav.types.js",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"159","line":74,"column":9,"nodeType":"157","messageId":"158","endLine":74,"endColumn":21},{"ruleId":"155","severity":1,"message":"159","line":108,"column":9,"nodeType":"157","messageId":"158","endLine":108,"endColumn":21},{"ruleId":"155","severity":1,"message":"160","line":85,"column":10,"nodeType":"157","messageId":"158","endLine":85,"endColumn":21},{"ruleId":"155","severity":1,"message":"161","line":85,"column":23,"nodeType":"157","messageId":"158","endLine":85,"endColumn":37},{"ruleId":"155","severity":1,"message":"162","line":65,"column":9,"nodeType":"157","messageId":"158","endLine":65,"endColumn":13},{"ruleId":"155","severity":1,"message":"161","line":85,"column":23,"nodeType":"157","messageId":"158","endLine":85,"endColumn":37},{"ruleId":"163","severity":1,"message":"164","line":125,"column":6,"nodeType":"165","endLine":125,"endColumn":8,"suggestions":"166"},{"ruleId":"155","severity":1,"message":"167","line":107,"column":10,"nodeType":"157","messageId":"158","endLine":107,"endColumn":18},{"ruleId":"155","severity":1,"message":"168","line":7,"column":8,"nodeType":"157","messageId":"158","endLine":7,"endColumn":13},{"ruleId":"155","severity":1,"message":"169","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":21},{"ruleId":"155","severity":1,"message":"170","line":9,"column":8,"nodeType":"157","messageId":"158","endLine":9,"endColumn":22},{"ruleId":"155","severity":1,"message":"171","line":10,"column":8,"nodeType":"157","messageId":"158","endLine":10,"endColumn":17},{"ruleId":"155","severity":1,"message":"172","line":12,"column":10,"nodeType":"157","messageId":"158","endLine":12,"endColumn":14},{"ruleId":"155","severity":1,"message":"173","line":13,"column":10,"nodeType":"157","messageId":"158","endLine":13,"endColumn":16},{"ruleId":"155","severity":1,"message":"174","line":62,"column":10,"nodeType":"157","messageId":"158","endLine":62,"endColumn":17},{"ruleId":"155","severity":1,"message":"175","line":63,"column":10,"nodeType":"157","messageId":"158","endLine":63,"endColumn":24},{"ruleId":"155","severity":1,"message":"176","line":63,"column":26,"nodeType":"157","messageId":"158","endLine":63,"endColumn":43},{"ruleId":"163","severity":1,"message":"177","line":82,"column":6,"nodeType":"165","endLine":82,"endColumn":28,"suggestions":"178"},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'userLoggedIn' is assigned a value but never used.","'fullJournal' is assigned a value but never used.","'setFullJournal' is assigned a value but never used.","'test' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeJournals' and 'getJournals'. Either include them or remove the dependency array.","ArrayExpression",["181"],"'expanded' is assigned a value but never used.","'Paper' is defined but never used.","'ArrowLeftIcon' is defined but never used.","'ArrowRightIcon' is defined but never used.","'CloudIcon' is defined but never used.","'Icon' is defined but never used.","'Button' is defined but never used.","'weather' is assigned a value but never used.","'weatherRefresh' is assigned a value but never used.","'setWeatherRefresh' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.",["182"],"no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [activeJournals, getJournals]",{"range":"187","text":"188"},"Update the dependencies array to be: [getWeather, props.weatherRefresh]",{"range":"189","text":"190"},[3754,3756],"[activeJournals, getJournals]",[2247,2269],"[getWeather, props.weatherRefresh]"]