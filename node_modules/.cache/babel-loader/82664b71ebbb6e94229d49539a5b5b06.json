{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan.Naude\\\\Documents\\\\VSCode\\\\GrowDashboardFront\\\\src\\\\components\\\\ui\\\\currentJournals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Carousel from \"react-material-ui-carousel\";\nimport { Paper, Button } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { displayNewJournal } from \"../../redux/siteNav/siteNav.actions\";\nimport { selectDispNewJournal } from \"../../redux/siteNav/siteNav.selector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"3em\",\n    border: \"1px solid\"\n  },\n  CheckButton: {\n    backgroundColor: theme.palette.secondary.main,\n    top: \"calc(50% - 20px) !important\",\n    transition: \"40ms\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      opacity: \"0.6 !important\"\n    },\n    height: \"25px\",\n    width: \"100%\"\n  },\n  paperStyle: {\n    backgroundColor: \"#d6ffb5\",\n    // border: \"1px solid\",\n    marginTop: \"0.5em\"\n  },\n  buttonGrid: {\n    width: \"50%\"\n  },\n  journalTitle: {\n    width: \"90%\"\n  },\n  journalAddIcon: {\n    width: \"10%\"\n  },\n  journalIcon: {\n    marginRight: \"3px\",\n    marginTop: \"3px\"\n  }\n}));\n\nfunction Item(props) {\n  //Get navigation state\n  // console.log(\"dispNewJournal\");\n  // console.log(dispNewJournal);\n  // Change New Journal option display state\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: props.classes.paperStyle,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: props.classes.journalTitle,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: props.item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          className: props.classes.journalAddIcon,\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => console.log(\"test\"),\n            children: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {\n              className: props.classes.journalIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: props.classes.buttonGrid,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: props.classes.CheckButton,\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Item;\nexport default function CurrentJournals(props) {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const dispNewJournal = useSelector(selectDispNewJournal);\n  console.log(dispNewJournal);\n  const test = [{\n    name: \"Random Name #1\",\n    description: \"Hello World!\"\n  }, {\n    name: \"Random Name #2\",\n    description: \"Hello, Hello?\"\n  }, {\n    name: \"Random Name #3\",\n    description: \"Hello World!?\"\n  }];\n  const [expanded, setExpanded] = useState(false);\n  const [fullJournal, setFullJournal] = useState({\n    jName: \"\",\n    jDesc: \"\",\n    roomType: \"\",\n    waterType: \"\",\n    vegLight: \"\",\n    flowLight: \"\",\n    growMedium: \"\"\n  });\n  useEffect(() => {}, []);\n\n  const togNewJournalDisplay = () => {\n    console.log(\"togNewJournalDisplay\");\n    dispatch(displayNewJournal(!dispNewJournal));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Carousel, {\n      next: (next, active) => {},\n      prev: (prev, active) => {},\n      children: test.map((item, i) => /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paperStyle,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            container: true,\n            alignItems: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              className: classes.journalTitle,\n              style: {\n                paddingLeft: \"0.5em\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              className: classes.journalAddIcon,\n              justifyContent: \"flex-end\",\n              children: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {\n                className: classes.journalIcon,\n                style: {\n                  zIndex: 1\n                },\n                onClick: () => togNewJournalDisplay()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              paddingLeft: \"0.5em\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            container: true,\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              className: classes.buttonGrid,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.CheckButton,\n                onClick: () => console.log(\"But Clicked\"),\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrentJournals, \"jx8+L5BB+n2uQ1IEWjKJ9S5p1Hs=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c2 = CurrentJournals;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"CurrentJournals\");","map":{"version":3,"sources":["C:/Users/Ryan.Naude/Documents/VSCode/GrowDashboardFront/src/components/ui/currentJournals.js"],"names":["React","useEffect","useState","makeStyles","Grid","Carousel","Paper","Button","IconButton","AddCircleOutlineIcon","useSelector","useDispatch","displayNewJournal","selectDispNewJournal","useStyles","theme","root","width","border","CheckButton","backgroundColor","palette","secondary","main","top","transition","cursor","opacity","height","paperStyle","marginTop","buttonGrid","journalTitle","journalAddIcon","journalIcon","marginRight","Item","props","classes","item","name","console","log","description","CurrentJournals","dispatch","dispNewJournal","test","expanded","setExpanded","fullJournal","setFullJournal","jName","jDesc","roomType","waterType","vegLight","flowLight","growMedium","togNewJournalDisplay","next","active","prev","map","i","paddingLeft","zIndex"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport { Paper, Button } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { displayNewJournal } from \"../../redux/siteNav/siteNav.actions\";\r\nimport { selectDispNewJournal } from \"../../redux/siteNav/siteNav.selector\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"3em\",\r\n    border: \"1px solid\",\r\n  },\r\n  CheckButton: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    top: \"calc(50% - 20px) !important\",\r\n    transition: \"40ms\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      opacity: \"0.6 !important\",\r\n    },\r\n    height: \"25px\",\r\n    width: \"100%\",\r\n  },\r\n  paperStyle: {\r\n    backgroundColor: \"#d6ffb5\",\r\n    // border: \"1px solid\",\r\n    marginTop: \"0.5em\",\r\n  },\r\n  buttonGrid: {\r\n    width: \"50%\",\r\n  },\r\n  journalTitle: {\r\n    width: \"90%\",\r\n  },\r\n  journalAddIcon: {\r\n    width: \"10%\",\r\n  },\r\n  journalIcon: {\r\n    marginRight: \"3px\",\r\n    marginTop: \"3px\",\r\n  },\r\n}));\r\n\r\nfunction Item(props) {\r\n  //Get navigation state\r\n  // console.log(\"dispNewJournal\");\r\n  // console.log(dispNewJournal);\r\n\r\n  // Change New Journal option display state\r\n\r\n  return (\r\n    <Paper className={props.classes.paperStyle}>\r\n      <Grid container direction=\"column\">\r\n        <Grid item container>\r\n          <Grid item className={props.classes.journalTitle}>\r\n            <h2>{props.item.name}</h2>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            className={props.classes.journalAddIcon}\r\n            justifyContent=\"flex-end\"\r\n          >\r\n            <IconButton onClick={() => console.log(\"test\")}>\r\n              <AddCircleOutlineIcon className={props.classes.journalIcon} />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <p>{props.item.description}</p>\r\n        </Grid>\r\n        <Grid item container justifyContent=\"center\">\r\n          <Grid item className={props.classes.buttonGrid}>\r\n            <Button className={props.classes.CheckButton}>Select</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default function CurrentJournals(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const dispNewJournal = useSelector(selectDispNewJournal);\r\n  console.log(dispNewJournal);\r\n\r\n  const test = [\r\n    {\r\n      name: \"Random Name #1\",\r\n      description: \"Hello World!\",\r\n    },\r\n    {\r\n      name: \"Random Name #2\",\r\n      description: \"Hello, Hello?\",\r\n    },\r\n    {\r\n      name: \"Random Name #3\",\r\n      description: \"Hello World!?\",\r\n    },\r\n  ];\r\n\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [fullJournal, setFullJournal] = useState({\r\n    jName: \"\",\r\n    jDesc: \"\",\r\n    roomType: \"\",\r\n    waterType: \"\",\r\n    vegLight: \"\",\r\n    flowLight: \"\",\r\n    growMedium: \"\",\r\n  });\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const togNewJournalDisplay = () => {\r\n    console.log(\"togNewJournalDisplay\");\r\n    dispatch(displayNewJournal(!dispNewJournal));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Carousel next={(next, active) => {}} prev={(prev, active) => {}}>\r\n        {test.map((item, i) => (\r\n          <Paper className={classes.paperStyle}>\r\n            <Grid container direction=\"column\">\r\n              <Grid item container alignItems=\"flex-start\">\r\n                <Grid\r\n                  item\r\n                  className={classes.journalTitle}\r\n                  style={{ paddingLeft: \"0.5em\" }}\r\n                >\r\n                  <h2>{item.name}</h2>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  className={classes.journalAddIcon}\r\n                  justifyContent=\"flex-end\"\r\n                >\r\n                  <AddCircleOutlineIcon\r\n                    className={classes.journalIcon}\r\n                    style={{ zIndex: 1 }}\r\n                    onClick={() => togNewJournalDisplay()}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item style={{ paddingLeft: \"0.5em\" }}>\r\n                <p>{item.description}</p>\r\n              </Grid>\r\n              <Grid item container justifyContent=\"center\">\r\n                <Grid item className={classes.buttonGrid}>\r\n                  <Button\r\n                    className={classes.CheckButton}\r\n                    onClick={() => console.log(\"But Clicked\")}\r\n                  >\r\n                    Select\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}