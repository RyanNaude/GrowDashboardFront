{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryann\\\\Documents\\\\VS_Code_Projects\\\\GrowDashboardFront\\\\src\\\\components\\\\home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\"; //Material UI Components\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\"; //Redux imports\n\nimport { useSelector } from \"react-redux\";\nimport { selectTokenState } from \"../redux/user/user.selector\";\nimport { selectDispNewJournal } from \"../redux/siteNav/siteNav.selector\"; //Component import\n\nimport Unsigned from \"./ui/unsigned\";\nimport NewJournal from \"./ui/newJournal\";\nimport CurrentJournals from \"./ui/currentJournals\";\nimport WeatherSummary from \"./ui/weatherSummary\"; //Custom useStyles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  mainPageStyle: {\n    marginTop: \"6em\",\n    width: \"100%\",\n    border: \"0px solid\"\n  },\n  mainPageSub: {\n    border: \"0px solid black\"\n  },\n  root: {\n    maxWidth: 345,\n    backgroundColor: \"#ebffdb\"\n  },\n  media: {\n    height: 0,\n    paddingTop: \"36.25%\" // 16:9\n\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  journalDescTitle: {// marginTop: \"1.5em\",\n  },\n  journalDesc: {\n    border: `0px solid ${theme.palette.common.blue}`,\n    borderRadius: 5\n  },\n  journalButton: {\n    margin: \"1em\"\n  },\n  submitGrid: {\n    marginTop: \"1.5em\"\n  },\n  curJournals: {\n    marginTop: \"1em\",\n    width: \"100%\"\n  },\n  curJournalsSpace: {\n    width: \"100%\"\n  },\n  curJournalsSpace80: {\n    width: \"80%\",\n    marginLeft: \"4em\"\n  },\n  curJournalSubheader: {\n    fontWeight: \"bold\"\n  }\n}));\nexport default function Home(props) {\n  _s();\n\n  const classes = useStyles(); //Get Global State\n\n  const tokenState = useSelector(selectTokenState); //Setup Local State\n\n  const [expanded, setExpanded] = useState(false);\n  const [activeJournals, setActiveJournals] = useState([]);\n  const [fullJournal, setFullJournal] = useState({\n    jName: \"\",\n    jDesc: \"\",\n    roomType: \"\",\n    waterType: \"\",\n    vegLight: \"\",\n    flowLight: \"\",\n    growMedium: \"\"\n  }); //Get navigation state\n  //Get Global State\n\n  const dispNewJournal = useSelector(selectDispNewJournal); //Requesting - All journals from backend\n\n  const getJournals = async () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        journalNameField: fullJournal.jName,\n        journalDescField: fullJournal.jDesc,\n        journalRoomType: fullJournal.roomType,\n        journalWaterType: fullJournal.waterType,\n        journalVegLight: fullJournal.vegLight,\n        journalFlowLight: fullJournal.flowLight,\n        journalGrowMedium: fullJournal.growMedium\n      })\n    };\n    fetch(\"http://localhost:4000/journalGet\", requestOptions).then(response => response.json()).then(data => setActiveJournals(data)).catch(error => console.log(error));\n  }; //Displaying journals returned from backend\n  // function displayJournals(activeJournals) {\n  //   return (\n  //     <Grid\n  //       item\n  //       xs={3}\n  //       className={classes.curJournals}\n  //       key={activeJournals._id}\n  //     >\n  //       <Card className={classes.root}>\n  //         <Grid item style={{ width: \"70%\", marginTop: \"100em\" }}>\n  //           <CardHeader title={`${activeJournals.name}`} subheader=\"\" />\n  //         </Grid>\n  //         <CardContent>\n  //           <Grid item container direction=\"column\">\n  //             <Grid item container style={{ width: \"100%\" }}>\n  //               <Grid\n  //                 item\n  //                 container\n  //                 style={{ width: \"100%\" }}\n  //                 direction=\"column\"\n  //               >\n  //                 <Grid className={classes.curJournalsSpace}>\n  //                   <Typography className={classes.curJournalSubheader}>\n  //                     Description:\n  //                   </Typography>\n  //                 </Grid>\n  //                 <Grid className={classes.curJournalsSpace80}>\n  //                   <Typography>{activeJournals.description}</Typography>\n  //                 </Grid>\n  //               </Grid>\n  //               <Grid item container style={{ width: \"100%\" }}>\n  //                 <Grid className={classes.curJournalsSpace}>\n  //                   <Typography className={classes.curJournalSubheader}>\n  //                     Room Type:\n  //                   </Typography>\n  //                 </Grid>\n  //                 <Grid className={classes.curJournalsSpace80}>\n  //                   <Typography>{activeJournals.roomType}</Typography>\n  //                 </Grid>\n  //               </Grid>\n  //               <Grid item container style={{ width: \"100%\" }}>\n  //                 <Grid className={classes.curJournalsSpace}>\n  //                   <Typography className={classes.curJournalSubheader}>\n  //                     Water Type:{\" \"}\n  //                   </Typography>\n  //                 </Grid>\n  //                 <Grid className={classes.curJournalsSpace80}>\n  //                   <Typography>{activeJournals.waterType}</Typography>\n  //                 </Grid>\n  //               </Grid>\n  //               <Grid item container style={{ width: \"100%\" }}>\n  //                 <Grid className={classes.curJournalsSpace}>\n  //                   <Typography className={classes.curJournalSubheader}>\n  //                     Veg. Light:{\" \"}\n  //                   </Typography>\n  //                 </Grid>\n  //                 <Grid className={classes.curJournalsSpace80}>\n  //                   <Typography>{activeJournals.vegLight}</Typography>\n  //                 </Grid>\n  //               </Grid>\n  //               <Grid item container style={{ width: \"100%\" }}>\n  //                 <Grid className={classes.curJournalsSpace}>\n  //                   <Typography className={classes.curJournalSubheader}>\n  //                     Flower Light:{\" \"}\n  //                   </Typography>\n  //                 </Grid>\n  //                 <Grid className={classes.curJournalsSpace80}>\n  //                   <Typography>{activeJournals.flowLight}</Typography>\n  //                 </Grid>\n  //               </Grid>\n  //               <Grid item container style={{ width: \"100%\" }}>\n  //                 <Grid className={classes.curJournalsSpace}>\n  //                   <Typography className={classes.curJournalSubheader}>\n  //                     Grow Medium:{\" \"}\n  //                   </Typography>\n  //                 </Grid>\n  //                 <Grid className={classes.curJournalsSpace80}>\n  //                   <Typography>{activeJournals.growMedium}</Typography>\n  //                 </Grid>\n  //               </Grid>\n  //             </Grid>\n  //           </Grid>\n  //         </CardContent>\n  //       </Card>\n  //     </Grid>\n  //   );\n  // }\n  //useEffect - Getting journals loaded on database\n\n\n  useEffect(() => {\n    getJournals();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"row\",\n    className: classes.mainPageStyle,\n    children: tokenState ? /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      style: {\n        border: \"0px solid\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          border: \"0px solid\",\n          width: \"100%\"\n        },\n        children: [dispNewJournal ? null : /*#__PURE__*/_jsxDEV(CurrentJournals, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 38\n        }, this), dispNewJournal ? /*#__PURE__*/_jsxDEV(NewJournal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 31\n        }, this) : null, /*#__PURE__*/_jsxDEV(WeatherSummary, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Unsigned, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"umCW0Ych9i3AOoMmDIUkBNS+iQU=\", false, function () {\n  return [useStyles, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/ryann/Documents/VS_Code_Projects/GrowDashboardFront/src/components/home.js"],"names":["React","useEffect","useState","Grid","makeStyles","red","useSelector","selectTokenState","selectDispNewJournal","Unsigned","NewJournal","CurrentJournals","WeatherSummary","useStyles","theme","mainPageStyle","marginTop","width","border","mainPageSub","root","maxWidth","backgroundColor","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","journalDescTitle","journalDesc","palette","common","blue","borderRadius","journalButton","margin","submitGrid","curJournals","curJournalsSpace","curJournalsSpace80","curJournalSubheader","fontWeight","Home","props","classes","tokenState","expanded","setExpanded","activeJournals","setActiveJournals","fullJournal","setFullJournal","jName","jDesc","roomType","waterType","vegLight","flowLight","growMedium","dispNewJournal","getJournals","requestOptions","method","headers","body","JSON","stringify","journalNameField","journalDescField","journalRoomType","journalWaterType","journalVegLight","journalFlowLight","journalGrowMedium","fetch","then","response","json","data","catch","error","console","log"],"mappings":"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AM4D,WAAW,GAAG,YAAY;AAC9B,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFY;AAGrBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,gBAAgB,EAAEjB,WAAW,CAACE,KADX;AAEnBgB,QAAAA,gBAAgB,EAAElB,WAAW,CAACG,KAFX;AAGnBgB,QAAAA,eAAe,EAAEnB,WAAW,CAACI,QAHV;AAInBgB,QAAAA,gBAAgB,EAAEpB,WAAW,CAACK,SAJX;AAKnBgB,QAAAA,eAAe,EAAErB,WAAW,CAACM,QALV;AAMnBgB,QAAAA,gBAAgB,EAAEtB,WAAW,CAACO,SANX;AAOnBgB,QAAAA,iBAAiB,EAAEvB,WAAW,CAACQ;AAPZ,OAAf;AAHe,KAAvB;AAaAgB,IAAAA,KAAK,CAAC,kCAAD,EAAqCb,cAArC,CAAL,CACGc,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU7B,iBAAiB,CAAC6B,IAAD,CAFnC,EAGGC,KAHH,CAGUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHpB;AAID,GAlBD,CAvBkC,CA2ClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACAvF,EAAAA,SAAS,CAAC,MAAM;AACdmE,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,KAA1B;AAAgC,IAAA,SAAS,EAAEhB,OAAO,CAACrC,aAAnD;AAAA,cACGsC,UAAU,gBACT,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,KAAK,EAAE;AAAEnC,QAAAA,MAAM,EAAE;AAAV,OAA5B;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAE,WAAV;AAAuBD,UAAAA,KAAK,EAAE;AAA9B,SAAlB;AAAA,mBACGkD,cAAc,GAAG,IAAH,gBAAU,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBAD3B,EAEGA,cAAc,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAoB,IAFrC,eAGE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADS,gBAUT,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA3JuBjB,I;UACNrC,S,EAEGP,W,EAiBIA,W;;;KApBD4C,I","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n//Material UI Components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\n//Redux imports\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectTokenState } from \"../redux/user/user.selector\";\r\nimport { selectDispNewJournal } from \"../redux/siteNav/siteNav.selector\";\r\n\r\n//Component import\r\nimport Unsigned from \"./ui/unsigned\";\r\nimport NewJournal from \"./ui/newJournal\";\r\nimport CurrentJournals from \"./ui/currentJournals\";\r\nimport WeatherSummary from \"./ui/weatherSummary\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainPageStyle: {\r\n    marginTop: \"6em\",\r\n    width: \"100%\",\r\n    border: \"0px solid\",\r\n  },\r\n  mainPageSub: {\r\n    border: \"0px solid black\",\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#ebffdb\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"36.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  journalDescTitle: {\r\n    // marginTop: \"1.5em\",\r\n  },\r\n  journalDesc: {\r\n    border: `0px solid ${theme.palette.common.blue}`,\r\n    borderRadius: 5,\r\n  },\r\n  journalButton: {\r\n    margin: \"1em\",\r\n  },\r\n  submitGrid: {\r\n    marginTop: \"1.5em\",\r\n  },\r\n  curJournals: { marginTop: \"1em\", width: \"100%\" },\r\n  curJournalsSpace: {\r\n    width: \"100%\",\r\n  },\r\n  curJournalsSpace80: {\r\n    width: \"80%\",\r\n    marginLeft: \"4em\",\r\n  },\r\n  curJournalSubheader: {\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nexport default function Home(props) {\r\n  const classes = useStyles();\r\n  //Get Global State\r\n  const tokenState = useSelector(selectTokenState);\r\n\r\n  //Setup Local State\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [activeJournals, setActiveJournals] = useState([]);\r\n  const [fullJournal, setFullJournal] = useState({\r\n    jName: \"\",\r\n    jDesc: \"\",\r\n    roomType: \"\",\r\n    waterType: \"\",\r\n    vegLight: \"\",\r\n    flowLight: \"\",\r\n    growMedium: \"\",\r\n  });\r\n\r\n  //Get navigation state\r\n  //Get Global State\r\n  const dispNewJournal = useSelector(selectDispNewJournal);\r\n\r\n  //Requesting - All journals from backend\r\n  const getJournals = async () => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        journalNameField: fullJournal.jName,\r\n        journalDescField: fullJournal.jDesc,\r\n        journalRoomType: fullJournal.roomType,\r\n        journalWaterType: fullJournal.waterType,\r\n        journalVegLight: fullJournal.vegLight,\r\n        journalFlowLight: fullJournal.flowLight,\r\n        journalGrowMedium: fullJournal.growMedium,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:4000/journalGet\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => setActiveJournals(data))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  //Displaying journals returned from backend\r\n  // function displayJournals(activeJournals) {\r\n  //   return (\r\n  //     <Grid\r\n  //       item\r\n  //       xs={3}\r\n  //       className={classes.curJournals}\r\n  //       key={activeJournals._id}\r\n  //     >\r\n  //       <Card className={classes.root}>\r\n  //         <Grid item style={{ width: \"70%\", marginTop: \"100em\" }}>\r\n  //           <CardHeader title={`${activeJournals.name}`} subheader=\"\" />\r\n  //         </Grid>\r\n  //         <CardContent>\r\n  //           <Grid item container direction=\"column\">\r\n  //             <Grid item container style={{ width: \"100%\" }}>\r\n  //               <Grid\r\n  //                 item\r\n  //                 container\r\n  //                 style={{ width: \"100%\" }}\r\n  //                 direction=\"column\"\r\n  //               >\r\n  //                 <Grid className={classes.curJournalsSpace}>\r\n  //                   <Typography className={classes.curJournalSubheader}>\r\n  //                     Description:\r\n  //                   </Typography>\r\n  //                 </Grid>\r\n  //                 <Grid className={classes.curJournalsSpace80}>\r\n  //                   <Typography>{activeJournals.description}</Typography>\r\n  //                 </Grid>\r\n  //               </Grid>\r\n  //               <Grid item container style={{ width: \"100%\" }}>\r\n  //                 <Grid className={classes.curJournalsSpace}>\r\n  //                   <Typography className={classes.curJournalSubheader}>\r\n  //                     Room Type:\r\n  //                   </Typography>\r\n  //                 </Grid>\r\n  //                 <Grid className={classes.curJournalsSpace80}>\r\n  //                   <Typography>{activeJournals.roomType}</Typography>\r\n  //                 </Grid>\r\n  //               </Grid>\r\n  //               <Grid item container style={{ width: \"100%\" }}>\r\n  //                 <Grid className={classes.curJournalsSpace}>\r\n  //                   <Typography className={classes.curJournalSubheader}>\r\n  //                     Water Type:{\" \"}\r\n  //                   </Typography>\r\n  //                 </Grid>\r\n  //                 <Grid className={classes.curJournalsSpace80}>\r\n  //                   <Typography>{activeJournals.waterType}</Typography>\r\n  //                 </Grid>\r\n  //               </Grid>\r\n  //               <Grid item container style={{ width: \"100%\" }}>\r\n  //                 <Grid className={classes.curJournalsSpace}>\r\n  //                   <Typography className={classes.curJournalSubheader}>\r\n  //                     Veg. Light:{\" \"}\r\n  //                   </Typography>\r\n  //                 </Grid>\r\n  //                 <Grid className={classes.curJournalsSpace80}>\r\n  //                   <Typography>{activeJournals.vegLight}</Typography>\r\n  //                 </Grid>\r\n  //               </Grid>\r\n  //               <Grid item container style={{ width: \"100%\" }}>\r\n  //                 <Grid className={classes.curJournalsSpace}>\r\n  //                   <Typography className={classes.curJournalSubheader}>\r\n  //                     Flower Light:{\" \"}\r\n  //                   </Typography>\r\n  //                 </Grid>\r\n  //                 <Grid className={classes.curJournalsSpace80}>\r\n  //                   <Typography>{activeJournals.flowLight}</Typography>\r\n  //                 </Grid>\r\n  //               </Grid>\r\n  //               <Grid item container style={{ width: \"100%\" }}>\r\n  //                 <Grid className={classes.curJournalsSpace}>\r\n  //                   <Typography className={classes.curJournalSubheader}>\r\n  //                     Grow Medium:{\" \"}\r\n  //                   </Typography>\r\n  //                 </Grid>\r\n  //                 <Grid className={classes.curJournalsSpace80}>\r\n  //                   <Typography>{activeJournals.growMedium}</Typography>\r\n  //                 </Grid>\r\n  //               </Grid>\r\n  //             </Grid>\r\n  //           </Grid>\r\n  //         </CardContent>\r\n  //       </Card>\r\n  //     </Grid>\r\n  //   );\r\n  // }\r\n\r\n  //useEffect - Getting journals loaded on database\r\n  useEffect(() => {\r\n    getJournals();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container direction=\"row\" className={classes.mainPageStyle}>\r\n      {tokenState ? (\r\n        <Grid item container style={{ border: \"0px solid\" }}>\r\n          <Grid item style={{ border: \"0px solid\", width: \"100%\" }}>\r\n            {dispNewJournal ? null : <CurrentJournals />}\r\n            {dispNewJournal ? <NewJournal /> : null}\r\n            <WeatherSummary />\r\n          </Grid>\r\n          {/* <Grid item>{activeJournals.map(displayJournals)}</Grid> */}\r\n        </Grid>\r\n      ) : (\r\n        <Grid item>\r\n          <Unsigned />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}