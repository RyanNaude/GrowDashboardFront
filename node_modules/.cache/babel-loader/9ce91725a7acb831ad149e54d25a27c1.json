{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan.Naude\\\\Documents\\\\VSCode\\\\GrowDashboardFront\\\\src\\\\components\\\\ui\\\\weatherSummary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\"; //Material UI Components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport CloudIcon from \"@material-ui/icons/Cloud\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Typography } from \"@material-ui/core\"; //Custom useStyles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  weatSumm: {\n    backgroundColor: \"white\",\n    marginTop: \"0.5em\"\n  },\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.secondary.light,\n    color: theme.palette.primary.dark\n  },\n  summMaxTemp: {\n    fontWeight: \"bold\",\n    fontSize: \"15pt\"\n  },\n  weekDay: {\n    fontWeight: \"bold\",\n    fontSize: \"10pt\"\n  },\n  summDate: {\n    fontSize: \"9pt\"\n  }\n}));\nexport default function WeatherSummary(props) {\n  _s();\n\n  const classes = useStyles();\n  useEffect(() => {}, []); //Test data\n\n  const summTemp = [{\n    maxTemp: \"25\",\n    minTemp: \"16\",\n    icon: \"Icon\",\n    weekDay: \"Mon\",\n    date: \"21 | JAN\"\n  }, {\n    maxTemp: \"26\",\n    minTemp: \"17\",\n    icon: \"Icon\",\n    weekDay: \"Tue\",\n    date: \"22 | JAN\"\n  }, {\n    maxTemp: \"28\",\n    minTemp: \"16\",\n    icon: \"Icon\",\n    weekDay: \"Wed\",\n    date: \"23 | JAN\"\n  }, {\n    maxTemp: \"28\",\n    minTemp: \"17\",\n    icon: \"Icon\",\n    weekDay: \"Thu\",\n    date: \"24 | JAN\"\n  }];\n  const newSummTemp = [{\n    message: \"accurate\",\n    cod: \"200\",\n    count: 5,\n    list: [{\n      id: 2643743,\n      name: \"London\",\n      coord: {\n        lat: 51.5085,\n        lon: -0.1257\n      },\n      main: {\n        temp: 19.14,\n        feels_like: 19.15,\n        temp_min: 17.83,\n        temp_max: 20.14,\n        pressure: 1014,\n        humidity: 78\n      },\n      dt: 1634641755,\n      wind: {\n        speed: 1.34,\n        deg: 266\n      },\n      sys: {\n        country: \"GB\"\n      },\n      rain: null,\n      snow: null,\n      clouds: {\n        all: 75\n      },\n      weather: [{\n        id: 803,\n        main: \"Clouds\",\n        description: \"broken clouds\",\n        icon: \"04d\"\n      }]\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    className: classes.weatSumm,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(ArrowLeftIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), newSummTemp.map(({\n      list\n    }, index) => (console.log(list), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: list.map((listItem, i) => (console.log(new Date(listItem.dt * 1000)), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          width: \"20%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          variant: \"outlined\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            className: classes.root,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              justifyContent: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.summMaxTemp,\n                children: listItem.main.temp_max\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              justifyContent: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Divider, {\n                style: {\n                  width: \"80%\",\n                  color: \"black\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              justifyContent: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: listItem.main.temp_min\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              justifyContent: \"center\",\n              children: /*#__PURE__*/_jsxDEV(CloudIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              justifyContent: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.weekDay\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              justifyContent: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.summDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 23\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this)))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this))), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      children: /*#__PURE__*/_jsxDEV(ArrowRightIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WeatherSummary, \"OAQf9SHEQQsOOZKjohcuI3tGtQ0=\", false, function () {\n  return [useStyles];\n});\n\n_c = WeatherSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherSummary\");","map":{"version":3,"sources":["C:/Users/Ryan.Naude/Documents/VSCode/GrowDashboardFront/src/components/ui/weatherSummary.js"],"names":["React","useEffect","makeStyles","Grid","Paper","ArrowLeftIcon","ArrowRightIcon","CloudIcon","Divider","Typography","useStyles","theme","weatSumm","backgroundColor","marginTop","root","width","maxWidth","palette","secondary","light","color","primary","dark","summMaxTemp","fontWeight","fontSize","weekDay","summDate","WeatherSummary","props","classes","summTemp","maxTemp","minTemp","icon","date","newSummTemp","message","cod","count","list","id","name","coord","lat","lon","main","temp","feels_like","temp_min","temp_max","pressure","humidity","dt","wind","speed","deg","sys","country","rain","snow","clouds","all","weather","description","map","index","console","log","listItem","i","Date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CAEA;;;AACA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAE,OADT;AAERC,IAAAA,SAAS,EAAE;AAFH,GAD6B;AAKvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE,GAFN;AAGJJ,IAAAA,eAAe,EAAEF,KAAK,CAACO,OAAN,CAAcC,SAAd,CAAwBC,KAHrC;AAIJC,IAAAA,KAAK,EAAEV,KAAK,CAACO,OAAN,CAAcI,OAAd,CAAsBC;AAJzB,GALiC;AAWvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,UAAU,EAAE,MADD;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GAX0B;AAevCC,EAAAA,OAAO,EAAE;AACPF,IAAAA,UAAU,EAAE,MADL;AAEPC,IAAAA,QAAQ,EAAE;AAFH,GAf8B;AAmBvCE,EAAAA,QAAQ,EAAE;AACRF,IAAAA,QAAQ,EAAE;AADF;AAnB6B,CAAZ,CAAD,CAA5B;AAwBA,eAAe,SAASG,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC5C,QAAMC,OAAO,GAAGrB,SAAS,EAAzB;AAEAT,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT,CAH4C,CAK5C;;AACA,QAAM+B,QAAQ,GAAG,CACf;AACEC,IAAAA,OAAO,EAAE,IADX;AAEEC,IAAAA,OAAO,EAAE,IAFX;AAGEC,IAAAA,IAAI,EAAE,MAHR;AAIER,IAAAA,OAAO,EAAE,KAJX;AAKES,IAAAA,IAAI,EAAE;AALR,GADe,EAQf;AACEH,IAAAA,OAAO,EAAE,IADX;AAEEC,IAAAA,OAAO,EAAE,IAFX;AAGEC,IAAAA,IAAI,EAAE,MAHR;AAIER,IAAAA,OAAO,EAAE,KAJX;AAKES,IAAAA,IAAI,EAAE;AALR,GARe,EAef;AACEH,IAAAA,OAAO,EAAE,IADX;AAEEC,IAAAA,OAAO,EAAE,IAFX;AAGEC,IAAAA,IAAI,EAAE,MAHR;AAIER,IAAAA,OAAO,EAAE,KAJX;AAKES,IAAAA,IAAI,EAAE;AALR,GAfe,EAsBf;AACEH,IAAAA,OAAO,EAAE,IADX;AAEEC,IAAAA,OAAO,EAAE,IAFX;AAGEC,IAAAA,IAAI,EAAE,MAHR;AAIER,IAAAA,OAAO,EAAE,KAJX;AAKES,IAAAA,IAAI,EAAE;AALR,GAtBe,CAAjB;AA+BA,QAAMC,WAAW,GAAG,CAClB;AACEC,IAAAA,OAAO,EAAE,UADX;AAEEC,IAAAA,GAAG,EAAE,KAFP;AAGEC,IAAAA,KAAK,EAAE,CAHT;AAIEC,IAAAA,IAAI,EAAE,CACJ;AACEC,MAAAA,EAAE,EAAE,OADN;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,GAAG,EAAE,OADA;AAELC,QAAAA,GAAG,EAAE,CAAC;AAFD,OAHT;AAOEC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,KADF;AAEJC,QAAAA,UAAU,EAAE,KAFR;AAGJC,QAAAA,QAAQ,EAAE,KAHN;AAIJC,QAAAA,QAAQ,EAAE,KAJN;AAKJC,QAAAA,QAAQ,EAAE,IALN;AAMJC,QAAAA,QAAQ,EAAE;AANN,OAPR;AAeEC,MAAAA,EAAE,EAAE,UAfN;AAgBEC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,IADH;AAEJC,QAAAA,GAAG,EAAE;AAFD,OAhBR;AAoBEC,MAAAA,GAAG,EAAE;AACHC,QAAAA,OAAO,EAAE;AADN,OApBP;AAuBEC,MAAAA,IAAI,EAAE,IAvBR;AAwBEC,MAAAA,IAAI,EAAE,IAxBR;AAyBEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE;AADC,OAzBV;AA4BEC,MAAAA,OAAO,EAAE,CACP;AACEtB,QAAAA,EAAE,EAAE,GADN;AAEEK,QAAAA,IAAI,EAAE,QAFR;AAGEkB,QAAAA,WAAW,EAAE,eAHf;AAIE9B,QAAAA,IAAI,EAAE;AAJR,OADO;AA5BX,KADI;AAJR,GADkB,CAApB;AA+CA,sBACE,QAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,cAAc,EAAC,cAFjB;AAGE,IAAA,UAAU,EAAC,QAHb;AAIE,IAAA,SAAS,EAAEJ,OAAO,CAACnB,QAJrB;AAAA,4BAME,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,UAAU,EAAC,QAAhC;AAAA,6BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,EASGyB,WAAW,CAAC6B,GAAZ,CACC,CAAC;AAAEzB,MAAAA;AAAF,KAAD,EAAW0B,KAAX,MACEC,OAAO,CAACC,GAAR,CAAY5B,IAAZ,gBAEE;AAAA,gBACGA,IAAI,CAACyB,GAAL,CACC,CAACI,QAAD,EAAWC,CAAX,MACEH,OAAO,CAACC,GAAR,CAAY,IAAIG,IAAJ,CAASF,QAAQ,CAAChB,EAAT,GAAc,IAAvB,CAAZ,gBAEE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,KAAK,EAAE;AAAEtC,UAAAA,KAAK,EAAE;AAAT,SAAlB;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA,iCACE,QAAC,IAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,SAAS,EAAC,QAFZ;AAGE,YAAA,SAAS,EAAEe,OAAO,CAAChB,IAHrB;AAAA,oCAKE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,SAAS,MAApB;AAAqB,cAAA,cAAc,EAAC,QAApC;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAEgB,OAAO,CAACP,WAA/B;AAAA,0BACG8C,QAAQ,CAACvB,IAAT,CAAcI;AADjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBALF,eAUE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,SAAS,MAApB;AAAqB,cAAA,cAAc,EAAC,QAApC;AAAA,qCACE,QAAC,OAAD;AAAS,gBAAA,KAAK,EAAE;AAAEnC,kBAAAA,KAAK,EAAE,KAAT;AAAgBK,kBAAAA,KAAK,EAAE;AAAvB;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAVF,eAaE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,SAAS,MAApB;AAAqB,cAAA,cAAc,EAAC,QAApC;AAAA,qCACE,QAAC,UAAD;AAAA,0BAAaiD,QAAQ,CAACvB,IAAT,CAAcG;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAbF,eAgBE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,SAAS,MAApB;AAAqB,cAAA,cAAc,EAAC,QAApC;AAAA,qCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAhBF,eAmBE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,SAAS,MAApB;AAAqB,cAAA,cAAc,EAAC,QAApC;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAEnB,OAAO,CAACJ;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAnBF,eAwBE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,SAAS,MAApB;AAAqB,cAAA,cAAc,EAAC,QAApC;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAEI,OAAO,CAACH;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,SAAyCuC,KAAzC;AAAA;AAAA;AAAA;AAAA,cAHJ,CADD;AADH,OAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,YAHJ,CADD,CATH,eA2DE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,UAAU,EAAC,QAAhC;AAAyC,MAAA,cAAc,EAAC,UAAxD;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA3DF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiED;;GArJuBtC,c;UACNnB,S;;;KADMmB,c","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\n//Material UI Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport CloudIcon from \"@material-ui/icons/Cloud\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\n//Custom useStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n  weatSumm: {\r\n    backgroundColor: \"white\",\r\n    marginTop: \"0.5em\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.secondary.light,\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  summMaxTemp: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"15pt\",\r\n  },\r\n  weekDay: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"10pt\",\r\n  },\r\n  summDate: {\r\n    fontSize: \"9pt\",\r\n  },\r\n}));\r\n\r\nexport default function WeatherSummary(props) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  //Test data\r\n  const summTemp = [\r\n    {\r\n      maxTemp: \"25\",\r\n      minTemp: \"16\",\r\n      icon: \"Icon\",\r\n      weekDay: \"Mon\",\r\n      date: \"21 | JAN\",\r\n    },\r\n    {\r\n      maxTemp: \"26\",\r\n      minTemp: \"17\",\r\n      icon: \"Icon\",\r\n      weekDay: \"Tue\",\r\n      date: \"22 | JAN\",\r\n    },\r\n    {\r\n      maxTemp: \"28\",\r\n      minTemp: \"16\",\r\n      icon: \"Icon\",\r\n      weekDay: \"Wed\",\r\n      date: \"23 | JAN\",\r\n    },\r\n    {\r\n      maxTemp: \"28\",\r\n      minTemp: \"17\",\r\n      icon: \"Icon\",\r\n      weekDay: \"Thu\",\r\n      date: \"24 | JAN\",\r\n    },\r\n  ];\r\n\r\n  const newSummTemp = [\r\n    {\r\n      message: \"accurate\",\r\n      cod: \"200\",\r\n      count: 5,\r\n      list: [\r\n        {\r\n          id: 2643743,\r\n          name: \"London\",\r\n          coord: {\r\n            lat: 51.5085,\r\n            lon: -0.1257,\r\n          },\r\n          main: {\r\n            temp: 19.14,\r\n            feels_like: 19.15,\r\n            temp_min: 17.83,\r\n            temp_max: 20.14,\r\n            pressure: 1014,\r\n            humidity: 78,\r\n          },\r\n          dt: 1634641755,\r\n          wind: {\r\n            speed: 1.34,\r\n            deg: 266,\r\n          },\r\n          sys: {\r\n            country: \"GB\",\r\n          },\r\n          rain: null,\r\n          snow: null,\r\n          clouds: {\r\n            all: 75,\r\n          },\r\n          weather: [\r\n            {\r\n              id: 803,\r\n              main: \"Clouds\",\r\n              description: \"broken clouds\",\r\n              icon: \"04d\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"space-around\"\r\n      alignItems=\"center\"\r\n      className={classes.weatSumm}\r\n    >\r\n      <Grid item container alignItems=\"center\">\r\n        <ArrowLeftIcon />\r\n      </Grid>\r\n      {newSummTemp.map(\r\n        ({ list }, index) => (\r\n          console.log(list),\r\n          (\r\n            <div key={index}>\r\n              {list.map(\r\n                (listItem, i) => (\r\n                  console.log(new Date(listItem.dt * 1000)),\r\n                  (\r\n                    <Grid item style={{ width: \"20%\" }} key={index}>\r\n                      <Paper variant=\"outlined\">\r\n                        <Grid\r\n                          container\r\n                          direction=\"column\"\r\n                          className={classes.root}\r\n                        >\r\n                          <Grid item container justifyContent=\"center\">\r\n                            <Typography className={classes.summMaxTemp}>\r\n                              {listItem.main.temp_max}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item container justifyContent=\"center\">\r\n                            <Divider style={{ width: \"80%\", color: \"black\" }} />\r\n                          </Grid>\r\n                          <Grid item container justifyContent=\"center\">\r\n                            <Typography>{listItem.main.temp_min}</Typography>\r\n                          </Grid>\r\n                          <Grid item container justifyContent=\"center\">\r\n                            <CloudIcon />\r\n                          </Grid>\r\n                          <Grid item container justifyContent=\"center\">\r\n                            <Typography className={classes.weekDay}>\r\n                              {/* {summ.weekDay} */}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item container justifyContent=\"center\">\r\n                            <Typography className={classes.summDate}>\r\n                              {/* {summ.date} */}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Paper>\r\n                    </Grid>\r\n                  )\r\n                )\r\n              )}\r\n            </div>\r\n          )\r\n        )\r\n      )}\r\n      <Grid item container alignItems=\"center\" justifyContent=\"flex-end\">\r\n        <ArrowRightIcon />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}